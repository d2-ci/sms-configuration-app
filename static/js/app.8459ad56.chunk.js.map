{"version":3,"sources":["D2App/App.module.css","D2App/headline/PageHeadline.module.css","D2App/headline/PageSubHeadline.module.css","D2App/views/home/Home.module.css","D2App/views/home/HomeCard.module.css","D2App/dataList/ListActions.module.css","D2App/gateways/GatewayAddKeyValuePair.module.css","D2App/forms/FormRow.module.css","D2App/gateways/GatewayKeyValuePair.module.css","D2App/gateways/GatewayList.module.css","D2App/views/gateway_configuration/GatewayConfigFormEdit.module.css","D2App/gateways/GatewaysTable.module.css","D2App/text/Paragraph.module.css","D2App/views/gateway_configuration/GatewayConfigFormNew.module.css","D2App/views/gateway_configuration/GatewayConfigList.module.css","D2App/views/received_sms_list/Filter.module.css","D2App/views/received_sms_list/ReceivedSmsList.module.css","D2App/pagination/Pagination.module.css","D2App/sms_table/SmsTable.module.css","D2App/time/Date.module.css","D2App/time/Time.module.css","D2App/views/received_sms_list/ReceivedSmsTable.module.css","D2App/smsCommand/CommandFormActions.module.css","D2App/smsCommandFields/DataElementTimesCategoryOptionCombos.module.css","D2App/smsCommandFields/FieldDataElementWithCategoryOptionCombo.module.css","D2App/smsCommandFields/FieldDataElementWithCategoryOptionComboAddFormulaButton.module.css","D2App/smsCommandFields/FieldCommandSpecialCharacter.module.css","D2App/views/sms_commands/SmsCommandFormEdit.module.css","D2App/views/sms_commands/SmsCommandFormNew.module.css","D2App/views/sms_commands/SmsCommandList.module.css","D2App/views/sent_sms_list/SentSmsList.module.css","D2App/views/sent_sms_list/SentSmsTable.module.css","D2App/views/sent_sms_list/StatusFilter.module.css","D2App/navigation/NavigationItem.module.css","D2App/dataTest/dataTest.js","D2App/headline/PageHeadline.js","D2App/headline/PageSubHeadline.js","D2App/locales/index.js","D2App/views/home/HomeCard.js","D2App/views/home/Home.js","D2App/dataList/ListActions.js","D2App/gateways/DeleteGatewaysConfirmationDialog.js","D2App/gateways/FieldGatewayAuthToken.js","D2App/gateways/FieldGatewayBindType.js","D2App/gateways/FieldGatewayCompressed.js","D2App/gateways/FieldGatewayConfigurationTemplate.js","D2App/gateways/FieldGatewayContentType.js","D2App/gateways/FieldGatewayHost.js","D2App/gateways/FieldGatewayName.js","D2App/gateways/FieldGatewayNumberPlanIndicator.js","D2App/gateways/FieldGatewayPassword.js","D2App/gateways/FieldGatewayPasswordConfirmation.js","D2App/gateways/FieldGatewayPort.js","D2App/gateways/FieldGatewaySendUrlParameters.js","D2App/gateways/FieldGatewaySystemId.js","D2App/gateways/FieldGatewaySystemType.js","D2App/gateways/FieldGatewayTypeOfNumber.js","D2App/gateways/FieldGatewayUrlTemplate.js","D2App/gateways/FieldGatewayUseGet.js","D2App/gateways/FieldGatewayUsername.js","D2App/gateways/GatewayAddKeyValuePair.js","D2App/forms/FormRow.js","D2App/gateways/GatewayBulkSMSForm.js","D2App/gateways/GatewayClickatellForm.js","D2App/gateways/GatewayGenericForm.js","D2App/gateways/GatewayKeyValuePairValueField.js","D2App/gateways/GatewayKeyValuePair.js","D2App/cancelDialog/CancelDialog.js","D2App/views/gateway_configuration/GatewayConfigFormEdit.js","D2App/gateways/getTypeLabelByType.js","D2App/gateways/GatewaysTable.js","D2App/gateways/GatewayList.js","D2App/gateways/GatewaySMPPForm.js","D2App/gateways/gatewayTypes.js","D2App/gateways/useCreateBulkSMSGatewayMutation.js","D2App/gateways/useCreateClickatellGatewayMutation.js","D2App/gateways/createGenericGateWayDataFromVariables.js","D2App/gateways/useCreateGenericGatewayMutation.js","D2App/gateways/useCreateSMPPGatewayMutation.js","D2App/gateways/useDeleteGatewaysMutation.js","D2App/gateways/useReadGatewayQuery.js","D2App/gateways/useReadGatewaysQuery.js","D2App/gateways/useSetDefaultGatewayMutation.js","D2App/gateways/useUpdateGatewayMutation.js","D2App/gateways/useUpdateBulkSMSGatewayMutation.js","D2App/gateways/useUpdateClickatellGatewayMutation.js","D2App/gateways/useUpdateGenericGatewayMutation.js","D2App/gateways/useUpdateSMPPGatewayMutation.js","D2App/text/Paragraph.js","D2App/views/gateway_configuration/GatewayConfigFormNew.js","D2App/views/gateway_configuration/GatewayConfigList.js","D2App/notifications/AlertContext.js","D2App/notifications/AlertHandler.js","D2App/delete_selected_button/DeleteSelectedButton.js","D2App/hooks/useQueryParams.js","D2App/views/received_sms_list/translations.js","D2App/views/received_sms_list/Filter.js","D2App/pagination/Pagination.js","D2App/sms_table/SmsTable.js","D2App/time/Date.js","D2App/time/Time.js","D2App/views/received_sms_list/ReceivedSmsTable.js","D2App/views/received_sms_list/ReceivedSmsList.js","D2App/smsCommand/SaveCommandButton.js","D2App/smsCommand/SubmitErrors.js","D2App/smsCommand/CommandFormActions.js","D2App/smsCommandFields/fieldNames.js","D2App/smsCommandFields/CommandsAddSpecialCharacters.js","D2App/smsCommandFields/completenessMethods.js","D2App/smsCommandFields/DataElementTimesCategoryOptionCombosCompletenessMessage.js","D2App/smsCommandFields/FieldDataElementWithCategoryOptionComboAddFormulaButton.js","D2App/dataElement/useReadDataElementsOfDataSetQuery.js","D2App/dataSet/FieldDataSet.js","D2App/dataSet/useReadDataSetsQuery.js","D2App/dataSet/FieldDataSetWithAutoLoad.js","D2App/dataSet/useReadDataSetQuery.js","D2App/smsCommandFields/FieldDataElementWithCategoryOptionComboFormula.js","D2App/smsCommandFields/FieldDataElementWithCategoryOptionCombo.js","D2App/smsCommandFields/DataElementTimesCategoryOptionCombos.js","D2App/smsCommandFields/FieldCommandCompletenessMethod.js","D2App/smsCommandFields/FieldCommandConfirmMessage.js","D2App/smsCommandFields/FieldCommandDefaultMessage.js","D2App/smsCommandFields/FieldCommandMoreThanOneOrgUnitMessage.js","D2App/smsCommandFields/FieldCommandName.js","D2App/smsCommandFields/FieldCommandNoUserMessage.js","D2App/smsCommandFields/parserTypes.js","D2App/smsCommandFields/FieldCommandParser.js","D2App/smsCommandFields/FieldCommandSeparator.js","D2App/smsCommandFields/FieldCommandSmsCode.js","D2App/smsCommandFields/FieldCommandSpecialCharacter.js","D2App/smsCommandFields/FieldCommandSuccessMessage.js","D2App/smsCommandFields/FieldCommandUseCurrentPeriodForReporting.js","D2App/smsCommandFields/FieldCommandWrongFormatMessage.js","D2App/smsCommandFields/ProgramStageDataElements.js","D2App/smsCommand/DE_COC_toFormName.js","D2App/smsCommand/DeleteCommandsConfirmationDialog.js","D2App/smsCommand/isParserType.js","D2App/smsCommand/useCreateSmsCommandMutation.js","D2App/smsCommand/useDeleteSmsCommandMutation.js","D2App/smsCommand/useReadSmsCommandParserTypeQuery.js","D2App/smsCommand/useReadSmsCommandsQuery.js","D2App/smsCommand/useUpdateCommand.js","D2App/userGroup/FieldUserGroup.js","D2App/userGroup/useReadUserGroupsQuery.js","D2App/userGroup/FieldUserGroupWithAutoLoad.js","D2App/smsCommandAlertParser/CommandEditAlertParserForm.js","D2App/program/FieldProgram.js","D2App/program/useReadProgramsQuery.js","D2App/program/FieldProgramWithAutoLoad.js","D2App/programStage/FieldProgramStage.js","D2App/programStage/useReadProgramStagesQuery.js","D2App/programStage/FieldProgramStageWithLoadingStates.js","D2App/smsCommandEventRegistrationParser/useReadSmsCommandEventRegistrationParserQuery.js","D2App/smsCommandEventRegistrationParser/CommandEditEventRegistrationParserForm.js","D2App/smsCommandWithDataSet/useReadSmsCommandWithDataSetQuery.js","D2App/smsCommandWithDataSet/CommandEditWithDataSetForm.js","D2App/smsCommand/getSmsCodeDuplicates.js","D2App/smsCommandJ2MEParser/CommandEditJ2MEParserForm.js","D2App/smsCommandKeyValueParser/CommandEditKeyValueParserForm.js","D2App/smsCommandProgramStageDataEntryParser/useReadSmsCommandProgramStageDataEntryParserQuery.js","D2App/smsCommandProgramStageDataEntryParser/CommandEditProgramStageDataEntryParserForm.js","D2App/smsCommandTrackedEntityRegistrationParser/CommandEditTrackedEntityRegistrationParserForm.js","D2App/smsCommandUnregisteredParser/CommandEditUnregisteredParserForm.js","D2App/views/sms_commands/SmsCommandFormEdit.js","D2App/views/sms_commands/SmsCommandFormNew.js","D2App/views/sms_commands/SmsCommandList.js","D2App/smsCommand/getLabelByParserType.js","D2App/views/sent_sms_list/translations.js","D2App/views/sent_sms_list/SentSmsTable.js","D2App/views/sent_sms_list/StatusFilter.js","D2App/views/sent_sms_list/SentSmsList.js","D2App/navigation/NavigationItem.js","D2App/navigation/Navigation.js","D2App/App.js"],"names":["module","exports","dataTest","name","prefix","concat","PageHeadline","children","React","createElement","className","styles","headline","PageSubHeadline","subHeadline","namespace","i18n","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","HomeCard","titleText","bodyText","linkText","to","Card","s","container","title","body","linkContainer","Link","link","Home","t","nsSeparator","explanation","grid","gridItem","GATEWAY_CONFIG_LIST_PATH","SMS_COMMAND_LIST_PATH","SENT_SMS_LIST_PATH","RECEIVED_SMS_LIST_PATH","ListActions","addLabel","deleteLabel","dataTestProp","onAddClick","onDeleteClick","disableAdd","disableDelete","ButtonStrip","Button","primary","onClick","disabled","destructive","DeleteGatewaysConfirmationDialog","onCancelClick","Modal","ModalTitle","ModalContent","ModalActions","secondary","Field","ReactFinalForm","FieldGatewayAuthToken","required","label","component","InputFieldFF","validate","composeValidators","string","hasValue","options","value","FieldGatewayBindType","SingleSelectFieldFF","defaultValue","FieldGatewayCompressed","type","CheckboxFieldFF","FieldGatewayConfigurationTemplate","helpText","optionApplicationJson","optionApplicationXml","optionFormUrlEncoded","optionTextPlain","FieldGatewayContentType","initialValue","FieldGatewayHost","FieldGatewayName","FieldGatewayNumberPlanIndicator","FIELD_GATEWAY_PASSWORD_NAME","FIELD_GATEWAY_PASSWORD_LABEL","FieldGatewayPassword","equalToPassword","createEqualTo","FIELD_GATEWAY_PASSWORD_CONFIRMATION_NAME","FieldGatewayPasswordConfirmation","FieldGatewayPort","integer","FieldGatewaySendUrlParameters","FieldGatewaySystemId","FieldGatewaySystemType","FieldGatewayTypeOfNumber","FieldGatewayUrlTemplate","url","FieldGatewayUseGet","FieldGatewayUsername","useForm","GatewayAddKeyValuePair","change","getState","button","parameters","values","header","encode","key","confidential","FormRow","cx","formRow","Form","GatewayBulkSMSForm","onSubmit","initialValues","submitText","keepDirtyOnReinitialize","handleSubmit","submitting","pristine","icon","CircularLoader","small","defaultProps","GatewayClickatellForm","GatewayGenericForm","map","_","index","GatewayKeyValuePair","useFormState","isStringWithLengthAtLeastOne","createFieldGatewayKeyValuePairValueName","GatewayKeyValuePairValueField","textInputs","keyInput","valueInput","checkboxGroup","checkbox","slice","removeKeyValueFromFormState","CancelDialog","onConfirmCancel","onAbortCancel","GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC","GATEWAY_CONFIG_FORM_EDIT_PATH","GatewayConfigFormEdit","_data$gateway","history","useHistory","id","useParams","showCancelDialog","setShowCancelDialog","useState","loading","error","loadError","data","jsonData","useReadGatewayQuery","saveGenericGateway","saveGenericGatewayError","useUpdateGenericGatewayMutation","saveBulkSMSGateway","saveBulkSMSGatewayError","useUpdateBulkSMSGatewayMutation","saveClickatellGateway","saveClickatellGatewayError","useUpdateClickatellGatewayMutation","saveSMPPGateway","saveSMPPGatewayError","useUpdateSMPPGatewayMutation","saveError","Fragment","CenteredContent","msg","NoticeBox","message","gateway","JSON","parse","gatewayType","FormComponent","GENERIC_FORM","BULK_SMS_FORM","CLICKATELL_FORM","SMPP_FORM","GatewaySMPPForm","Error","getFormComponent","uid","async","formValues","push","e","Promise","reject","GatewaysTable","allGatewaysChecked","checkedGateways","gateways","onGatewayToggle","onToggleAll","onMakeDefaultClick","Table","TableHead","TableRowHead","TableCellHead","Checkbox","onChange","checked","TableBody","TableRow","TableCell","checkboxCell","includes","typeCell","defaultCell","isDefault","isDefaultText","makeDefaultButton","editCell","rowActions","GatewayList","setCheckedGateways","processing","length","processingMessage","loadingContainer","findIndex","curId","newCheckedGateways","allGatewayIds","CREATE_BULK_SMS_GATEWAY_MUTATION","resource","username","password","CREATE_CLICKATELL_GATEWAY_MUTATION","authToken","urlTemplate","createGenericGateWayDataFromVariables","configurationTemplate","contentType","sendUrlParameters","useGet","CREATE_GENERIC_GATEWAY_MUTATION","CREATE_SMPP_GATEWAY_MUTATION","systemId","host","systemType","numberPlanIndicator","typeOfNumber","bindType","port","compressed","DELETE_GATEWAY_MUTATION","useDeleteGatewaysMutation","setLoading","setError","idToMutationRequest","engine","variables","mutate","idToMutationRequestFactory","useDataEngine","onDone","response","onError","ids","all","then","catch","GATEWAY_QUERY","useDataQuery","GATEWAYS_QUERY","params","fields","filter","SET_DEFAULT_GATEWAY_MUTATION","useUpdateGatewayMutation","query","updatedQuery","UPDATE_BULK_SMS_GATEWAY_MUTATION","UPDATE_CLICKATELL_GATEWAY_MUTATION","UPDATE_GENERIC_GATEWAY_MUTATION","UPDATE_SMPP_GATEWAY_MUTATION","Paragraph","paragraph","GATEWAY_CONFIG_FORM_NEW_PATH","GatewayConfigFormNew","visibleForm","setVisibleForm","useDataMutation","SingleSelectField","selected","SingleSelectOption","passwordRequired","GATEWAY_CONFIG_LIST_LABEL","GatewayConfigList","_data$gateways","_data$gateways$gatewa","showDeleteDialog","setShowDeleteDialog","loadingReadGateways","errorReadGateways","refetch","refetchReadGateways","_parsedData$gateways","join","rest","parsedData","useReadGatewaysQuery","deleteCheckedGateways","loadingDelete","errorDelete","makeGatewayDefault","loadingSetDefault","errorSetDefault","hasGateways","info","AlertContext","createContext","addAlert","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","AlertHandler","alerts","setAlerts","Provider","alert","timestamp","Date","now","AlertStack","AlertBar","inboundMutation","outboundMutation","DeleteSelectedButton","selectedIds","onComplete","useContext","mutation","useQueryParams","_useQueryParams","status","withDefault","StringParam","phoneNumber","page","NumberParam","pageSize","statusMap","ALL","FAILED","INCOMING","PROCESSED","PROCESSING","SENT","UNHANDLED","STATUS_FILTER_OPTIONS","Filter","setStatus","setPhoneNumber","onReset","inputStrip","inputWidth","InputField","large","PAGE_LENGTHS","Pagination","pageCount","total","firstItem","Math","min","lastItem","availablePages","Array","from","_x","toString","setQueryParams","setPage","verticalAlign","SingleSelect","dense","setPageSize","select","summary","buttonPrevious","availablePage","buttonNext","SmsTable","messages","pager","setSelectedIds","columns","rowRenderFn","selectedIdSet","Set","allSelected","column","colSpan","String","noResults","has","toggle","delete","add","TableFoot","date","formatted","moment","format","Time","time","ReceivedSmsTable","_message$user","_message$user$userCre","text","originator","smsstatus","user","userCredentials","receiveddate","RECEIVED_SMS_LIST_LABEL","inboundSms","order","filters","ReceivedSmsList","_data$inboundSms","queryParams","called","lazy","callback","debouncedRefetch","useDebouncedCallback","leading","useEffect","inboundsmss","undefined","subscription","SaveCommandButton","enabled","submitError","hasSubmitErrors","SubmitErrors","CommandFormActions","enableSubmit","onCancel","FIELD_COMMAND_COMPLETENESS_METHOD_NAME","FIELD_COMMAND_DEFAULT_MESSAGE_NAME","FIELD_COMMAND_ID_NAME","FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME","FIELD_COMMAND_NAME_NAME","FIELD_COMMAND_NO_USER_MESSAGE_NAME","FIELD_COMMAND_PARSER_NAME","FIELD_COMMAND_PROGAM_NAME","FIELD_COMMAND_PROGAM_STAGE_NAME","FIELD_COMMAND_SEPARATOR_NAME","FIELD_COMMAND_SMS_CODES_NAME","FIELD_COMMAND_SPECIAL_CHARS_NAME","FIELD_COMMAND_SUCCESS_MESSAGE_NAME","FIELD_COMMAND_USE_CURRENT_PERIOD_FOR_REPORTING_NAME","FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME","FIELD_COMMAND_CONFIRM_MESSAGE_NAME","CommandsAddSpecialCharacters","newSpecialChars","ALL_DATAVALUE","AT_LEAST_ONE_DATAVALUE","DO_NOT_MARK_COMPLETE","useField","DataElementTimesCategoryOptionCombosCompletenessMessage","input","completenessMethod","warning","DATA_ELEMENTS_QUERY","dataElement","FieldDataElementWithCategoryOptionComboAddFormulaButton","baseName","formulaDataElementName","setFormulaDataElementName","smsCode","formula","code","operator","dataElementId","displayName","finally","formulaInWords","formulaInWordsLabel","dataSet","useReadDataElementsOfDataSetQuery","dataSetId","setData","dataSetElements","sort","left","right","leftDisplayName","rightDisplayName","queryDataElementsOfDataSet","FIELD_DATA_SET_NAME","FieldDataSet","dataSets","errorText","validationText","DATA_SETS_QUERY","paging","FieldDataSetWithAutoLoad","showLoadingStatus","programs","FieldDataElementWithCategoryOptionComboFormula","combo","targetFieldName","onClose","form","initialFormula","useMemo","dataElementCode","modalDataTest","onRemove","newFormula","event","stopPropagation","FieldDataElementWithCategoryOptionCombo","categoryOptionCombo","showFormula","setShowFormula","DE_COC_toFormName","formulaName","field","invalid","touched","meta","codeField","formulaFieldName","DataElementTimesCategoryOptionCombos","DE_COC_combinations","allRequired","completenessMethods","FieldCommandCompletenessMethod","FieldCommandConfirmMessage","TextAreaFieldFF","FieldCommandDefaultMessage","FieldCommandMoreThanOneOrgUnitMessage","FieldCommandName","FieldCommandNoUserMessage","KEY_VALUE_PARSER","J2ME_PARSER","ALERT_PARSER","UNREGISTERED_PARSER","TRACKED_ENTITY_REGISTRATION_PARSER","PROGRAM_STAGE_DATAENTRY_PARSER","EVENT_REGISTRATION_PARSER","commandTypes","a","b","FieldCommandParser","FieldCommandSeparator","FieldCommandSmsCode","valueType","nextCode","trackedEntityAttribute","FieldCommandSpecialCharacter","onSpecialKeyRemoved","UiField","specialChars","FieldCommandSuccessMessage","FieldCommandUseCurrentPeriodForReporting","FieldCommandWrongFormatMessage","ProgramStageDataElements","programStageDataElements","smsCodes","cocCode","DeleteCommandsConfirmationDialog","isParserType","parserType","parser","CREATE_SMS_COMMAND_MUTATION","dataset","userGroup","program","programStage","DELETE_SMS_COMMAND_MUTATION","useDeleteSmsCommandMutation","READ_SMS_COMMAND_PARSER_TYPE_QUERY","smsCommand","SMS_COMMANDS_QUERY","smsCommands","FORM_ERROR","FinalForm","identity","REPLACE_SMS_COMMAND_MUTATION","commandId","UPDATE_SMS_COMMAND_MUTATION","partial","useUpdateCommand","onAfterChange","formatCommand","replace","allVariables","fallback","FieldUserGroup","userGroups","USER_GROUPS_QUERY","FieldUserGroupWithAutoLoad","CommandEditAlertParserForm","updateCommand","receivedMessage","FIELD_PROGRAM_NAME","FieldProgram","PROGRAMS_WITH_REGISTRATION","PROGRAMS_WITHOUT_REGISTRATION","ALL_PROGRAMS","PROGRAMS_QUERY","registration","FieldProgramWithAutoLoad","useReadProgramsQuery","FIELD_PROGRAM_STAGE_NAME","FieldProgramStage","programStages","iinitialValue","PROGRAM_STAGES_QUERY","programId","FieldProgramStageWithLoadingStates","_data$programStages2","_data$programStages3","useReadProgramStagesQuery","_data$programStages","_data$programStages$p","isEventRegistrationParser","programStageValueForEventRegistration","READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY","formatSmsCodes","updates","CommandEditEventRegistrationParserForm","command","selectedProgramOption","selectedProgramStageOption","separator","defaultMessage","wrongFormatMessage","noUserMessage","moreThanOneOrgUnitMessage","successMessage","reduce","curSmsCodes","getInitialFormState","READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY","FormSpy","globalValidate","hasErrors","errors","smsCodesFormState","smsCodesWithValue","entries","duplicates","curDuplicates","potentialDuplicates","curCode","curIndex","newlyFoundDuplicates","curWithCodeDuplicates","curName","getSmsCodeDuplicates","duplicateErrors","forEach","duplicate","formattedSmsCodes","compulsory","optionId","split","formattedSmsCode","DE_COC_combination_data","hasSpecialChars","selectedDataSetOption","specialKeyRemoved","setSpecialKeyRemoved","CommandEditWithDataSetForm","initialCompletenessMethod","loadingCommandError","commandData","useReadSmsCommandWithDataSetQuery","useCurrentPeriodForReporting","acc","specialCharacters","curCombinations","_dataElement$category","categoryCombo","combos","COC","dirty","CommandEditJ2MEParserForm","CommandEditKeyValueParserForm","READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY","CommandEditProgramStageDataEntryParserForm","programStageId","CommandEditTrackedEntityRegistrationParserForm","smsCodesOriginal","dynamicFields","programTrackedEntityAttributes","merged","dynamicField","CommandEditUnregisteredParserForm","SMS_COMMAND_FORM_EDIT_PATH_STATIC","SMS_COMMAND_FORM_EDIT_PATH","SmsCommandFormEdit","useReadSmsCommandParserTypeQuery","isParser","bind","getSmsCommandEditFormComponent","goBack","SMS_COMMAND_FORM_NEW_PATH","ActualForm","prevValues","setPrevValues","subscribe","batch","prevProgram","prevParserType","useResetFormFields","showDataSetField","showUserGroupField","showProgramField","showProgramStageField","shouldProgramsBeWithRegistration","disableProgramStage","SmsCommandFormNew","createSmsCommand","useCreateSmsCommandMutation","destroyOnUnregister","SMS_COMMAND_LIST_LABEL","SmsCommandList","_data$smsCommands2","_data$smsCommands2$sm","_data$smsCommands3","_data$smsCommands3$sm","_data$smsCommands4","_data$smsCommands4$sm","checkedSmsCommands","setCheckedSmsCommands","showDeleteConfirmationDialog","setShowDeleteConfirmationDialog","loadingReadSmsCommands","errorReadSmsCommands","deleteSmsCommands","allChecked","hasCommands","_data$smsCommands","find","checkedId","toggleSmsCommand","parserTypes","getLabelByParserTypes","editButtonCell","DELIVERED","ERROR","OUTBOUND","PENDING","SCHEDULED","SentSmsTable","recipients","recipient","StatusFilter","SENT_SMS_LIST_LABEL","sms","SentSmsList","_data$sms","outboundsmss","NavigationItem","path","exactMatch","active","routeMatch","useRouteMatch","isExact","useIsItemActive","MenuItem","item","defualtProps","Navigation","Menu","App","CssVariables","spacers","colors","HashRouter","QueryParamProvider","ReactRouterRoute","Route","sidebar","content","Switch","exact","Redirect"],"mappings":"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","file":"static/js/app.8459ad56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2zgzu\",\"sidebar\":\"App_sidebar__10tAV\",\"content\":\"App_content__3I8HS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"PageHeadline_headline__1llN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subHeadline\":\"PageSubHeadline_subHeadline__2c8Kn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__ODQuA\",\"explanation\":\"Home_explanation__10no3\",\"grid\":\"Home_grid__31J-5\",\"gridItem\":\"Home_gridItem__1gOsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeCard_container__1TCqS\",\"title\":\"HomeCard_title__1sPYs\",\"body\":\"HomeCard_body__2ubR4\",\"linkContainer\":\"HomeCard_linkContainer__2dWlg\",\"link\":\"HomeCard_link__QjOag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListActions_container__2mPW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"GatewayAddKeyValuePair_button__3hPEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"FormRow_formRow__3ALDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GatewayKeyValuePair_container__D-LyM\",\"textInputs\":\"GatewayKeyValuePair_textInputs__dJAb3\",\"keyInput\":\"GatewayKeyValuePair_keyInput__2WHV_\",\"valueInput\":\"GatewayKeyValuePair_valueInput__1uRVv\",\"checkboxGroup\":\"GatewayKeyValuePair_checkboxGroup__2k2Cu\",\"checkbox\":\"GatewayKeyValuePair_checkbox__2hg0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GatewayList_container__jCYee\",\"processingMessage\":\"GatewayList_processingMessage__1RE2H\",\"loadingContainer\":\"GatewayList_loadingContainer__7veW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GatewayConfigFormEdit_container__1d38w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowActions\":\"GatewaysTable_rowActions__2fK3j\",\"checkboxCell\":\"GatewaysTable_checkboxCell__3uvd3\",\"typeCell\":\"GatewaysTable_typeCell__Qx_fl\",\"editCell\":\"GatewaysTable_editCell__3mzrM\",\"defaultCell\":\"GatewaysTable_defaultCell__1huny\",\"makeDefaultButton\":\"GatewaysTable_makeDefaultButton__3gFiv\",\"isDefaultText\":\"GatewaysTable_isDefaultText__15qyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"Paragraph_paragraph__3yubY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GatewayConfigFormNew_container__pJ1_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GatewayConfigList_container__3BZQo\",\"actions\":\"GatewayConfigList_actions__yMRge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__zWNRg\",\"inputStrip\":\"Filter_inputStrip__28I4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReceivedSmsList_container__vRAw_\",\"header\":\"ReceivedSmsList_header__3rAnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__26a7H\",\"verticalAlign\":\"Pagination_verticalAlign__3fvjm\",\"select\":\"Pagination_select__34fjG\",\"buttonPrevious\":\"Pagination_buttonPrevious__1WGk7\",\"buttonNext\":\"Pagination_buttonNext__3vshM\",\"summary\":\"Pagination_summary__Vvjry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noResults\":\"SmsTable_noResults__1QKFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"Date_date__38K2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Time_time__3JCu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"originator\":\"ReceivedSmsTable_originator__1x92P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CommandFormActions_container__1p4Rc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"DataElementTimesCategoryOptionCombos_formRow__TGwSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldDataElementWithCategoryOptionCombo_container__2h1m8\",\"field\":\"FieldDataElementWithCategoryOptionCombo_field__mnPuJ\",\"codeField\":\"FieldDataElementWithCategoryOptionCombo_codeField__1wHw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formulaInWords\":\"FieldDataElementWithCategoryOptionComboAddFormulaButton_formulaInWords__1t-9F\",\"formulaInWordsLabel\":\"FieldDataElementWithCategoryOptionComboAddFormulaButton_formulaInWordsLabel__ZsD-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldCommandSpecialCharacter_container__2Vgvs\",\"field\":\"FieldCommandSpecialCharacter_field__-1mZE\",\"button\":\"FieldCommandSpecialCharacter_button__2XK2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandFormEdit_container__2r8xI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandFormNew_container__34D_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandList_container__2tb7Z\",\"editButtonCell\":\"SmsCommandList_editButtonCell__1OBCC\",\"checkbox\":\"SmsCommandList_checkbox__1mJm5\",\"noResults\":\"SmsCommandList_noResults__j0ImP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SentSmsList_container__2FUki\",\"header\":\"SentSmsList_header__3biA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipient\":\"SentSmsTable_recipient__RJvSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatusFilter_container__2FH_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavigationItem_item__3hR7s\"};","const defaultPrefix = 'dhis2-smsconfiguration';\nexport const dataTest = (name, prefix = defaultPrefix) => \"\".concat(prefix, \"-\").concat(name);","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport styles from './PageHeadline.module.css';\nexport const PageHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h1\", {\n  className: styles.headline,\n  \"data-test\": dataTest('headline-pageheadline')\n}, children);\nPageHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport styles from './PageSubHeadline.module.css';\nexport const PageSubHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h2\", {\n  className: styles.subHeadline,\n  \"data-test\": dataTest('headline-pagesubheadline')\n}, children);\nPageSubHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { PropTypes } from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport s from './HomeCard.module.css';\n\nconst HomeCard = ({\n  titleText,\n  bodyText,\n  linkText,\n  to\n}) => {\n  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.container\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: s.title\n  }, titleText), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.body\n  }, bodyText), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.linkContainer\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: to\n  }, linkText))));\n};\n\nHomeCard.propTypes = {\n  bodyText: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired,\n  titleText: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired\n};\nexport default HomeCard;","import React from 'react';\nimport { GATEWAY_CONFIG_LIST_PATH, SMS_COMMAND_LIST_PATH, SENT_SMS_LIST_PATH, RECEIVED_SMS_LIST_PATH } from '../';\nimport { dataTest } from '../../dataTest';\nimport { PageHeadline } from '../../headline';\nimport i18n from '../../locales';\nimport s from './Home.module.css';\nimport HomeCard from './HomeCard';\nexport const HOME_PATH = '/';\nexport const HOME_LABEL = 'Overview';\nexport const Home = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-home'),\n    className: s.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Overview: SMS Configuration', {\n    nsSeparator: '>'\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.explanation\n  }, i18n.t('Configure settings for SMS sending, receiving, data reporting, alerts, registration and more.')), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.grid\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Gateway Configuration'),\n    bodyText: i18n.t('Add and manage gateways for sending and receiving SMS messages in DHIS2.'),\n    linkText: i18n.t('Set up gateways'),\n    to: GATEWAY_CONFIG_LIST_PATH\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('SMS Commands'),\n    bodyText: i18n.t('Add and manage commands triggered by incoming SMS messages to register, alert and more.'),\n    linkText: i18n.t('Set up SMS commands'),\n    to: SMS_COMMAND_LIST_PATH\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Sent SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages sent from DHIS2.'),\n    linkText: i18n.t('View all sent SMS'),\n    to: SENT_SMS_LIST_PATH\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Received SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages received by DHIS2.'),\n    linkText: i18n.t('View all received SMS'),\n    to: RECEIVED_SMS_LIST_PATH\n  }))));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ButtonStrip, Button } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport styles from './ListActions.module.css';\nexport const ListActions = ({\n  addLabel,\n  deleteLabel,\n  dataTest: dataTestProp,\n  onAddClick,\n  onDeleteClick,\n  disableAdd,\n  disableDelete\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    \"data-test\": dataTest(\"\".concat(dataTestProp, \"-actions\"))\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onAddClick,\n    disabled: disableAdd,\n    dataTest: dataTest(\"\".concat(dataTestProp, \"-add\"))\n  }, addLabel), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: onDeleteClick,\n    disabled: disableDelete,\n    dataTest: dataTest(\"\".concat(dataTestProp, \"-delete\"))\n  }, deleteLabel)));\n};\nListActions.propTypes = {\n  addLabel: PropTypes.string.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  deleteLabel: PropTypes.string.isRequired,\n  onAddClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  disableAdd: PropTypes.bool,\n  disableDelete: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nexport const DeleteGatewaysConfirmationDialog = ({\n  onCancelClick,\n  onDeleteClick\n}) => /*#__PURE__*/React.createElement(Modal, {\n  dataTest: dataTest('gateways-deleteconfirmationdialog')\n}, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Confirm deletion')), /*#__PURE__*/React.createElement(ModalContent, null, i18n.t('Are you sure you want to delete the selected gateways?')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n  secondary: true,\n  onClick: onCancelClick,\n  dataTest: dataTest('gateways-deleteconfirmationdialog-cancel')\n}, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n  destructive: true,\n  onClick: onDeleteClick,\n  dataTest: dataTest('gateways-deleteconfirmationdialog-confirm')\n}, \"Delete\"))));\nDeleteGatewaysConfirmationDialog.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayAuthToken = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayauthtoken'),\n  name: \"authToken\",\n  label: i18n.t('Auth token'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'BIND_TX',\n  value: 'BIND_TX'\n}, {\n  label: 'BIND_RX',\n  value: 'BIND_RX'\n}, {\n  label: 'BIND_TRX',\n  value: 'BIND_TRX'\n}];\nexport const FieldGatewayBindType = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaybindtype'),\n  name: \"bindType\",\n  label: i18n.t('Bind type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayCompressed = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaycompressed'),\n  name: \"compressed\",\n  type: \"checkbox\",\n  label: i18n.t('Compressed'),\n  component: CheckboxFieldFF,\n  defaultValue: false\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayConfigurationTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayconfigurationtemplate'),\n  name: \"configurationTemplate\",\n  label: i18n.t('Configuration template'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue),\n  helpText: i18n.t('Please refer to the documentation for possible values')\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nconst optionApplicationJson = {\n  label: i18n.t('Application/json'),\n  value: 'APPLICATION_JSON'\n};\nconst optionApplicationXml = {\n  label: i18n.t('Application/xml'),\n  value: 'APPLICATION_XML'\n};\nconst optionFormUrlEncoded = {\n  label: i18n.t('Form url encoded'),\n  value: 'FORM_URL_ENCODED'\n};\nconst optionTextPlain = {\n  label: i18n.t('Plain text'),\n  value: 'TEXT_PLAIN'\n};\nconst options = [optionApplicationJson, optionApplicationXml, optionFormUrlEncoded, optionTextPlain];\nexport const FieldGatewayContentType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaycontenttype'),\n  name: \"contentType\",\n  label: i18n.t('Content type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  initialValue: optionApplicationJson.value\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayHost = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayhost'),\n  name: \"host\",\n  label: i18n.t('Host'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayname'),\n  name: \"name\",\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'ISDN',\n  value: 'ISDN'\n}, {\n  label: 'DATA',\n  value: 'DATA'\n}, {\n  label: 'TELEX',\n  value: 'TELEX'\n}, {\n  label: 'LAND_MOBILE',\n  value: 'LAND_MOBILE'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'PRIVATE',\n  value: 'PRIVATE'\n}, {\n  label: 'ERMES',\n  value: 'ERMES'\n}, {\n  label: 'INTERNET',\n  value: 'INTERNET'\n}, {\n  label: 'WAP',\n  value: 'WAP'\n}];\nexport const FieldGatewayNumberPlanIndicator = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaynumberplanindicator'),\n  name: \"numberPlanIndicator\",\n  label: i18n.t('Number plan indicator'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_GATEWAY_PASSWORD_NAME = 'password';\nexport const FIELD_GATEWAY_PASSWORD_LABEL = i18n.t('Password');\nexport const FieldGatewayPassword = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('gateways-fieldgatewaypassword'),\n  name: FIELD_GATEWAY_PASSWORD_NAME,\n  label: FIELD_GATEWAY_PASSWORD_LABEL,\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, createEqualTo, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_GATEWAY_PASSWORD_LABEL, FIELD_GATEWAY_PASSWORD_NAME } from './FieldGatewayPassword';\nconst {\n  Field\n} = ReactFinalForm;\nconst equalToPassword = createEqualTo(FIELD_GATEWAY_PASSWORD_NAME, FIELD_GATEWAY_PASSWORD_LABEL);\nexport const FIELD_GATEWAY_PASSWORD_CONFIRMATION_NAME = 'password-confirmation';\nexport const FieldGatewayPasswordConfirmation = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('gateways-fieldgatewaypasswordconfirmation'),\n  name: FIELD_GATEWAY_PASSWORD_CONFIRMATION_NAME,\n  label: i18n.t('Confirm password'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue, equalToPassword)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, integer } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayPort = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayport'),\n  name: \"port\",\n  label: i18n.t('Port'),\n  component: InputFieldFF,\n  validate: composeValidators(integer, hasValue)\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewaySendUrlParameters = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('gateways-fieldgatewaysendurlparameters'),\n  name: \"sendUrlParameters\",\n  label: i18n.t('Send url parameters'),\n  component: CheckboxFieldFF\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewaySystemId = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaysystemid'),\n  name: \"systemId\",\n  label: i18n.t('System id'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewaySystemType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaysystemtype'),\n  name: \"systemType\",\n  label: i18n.t('System type'),\n  component: InputFieldFF,\n  defaultValue: \"\"\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'INTERNATIONAL',\n  value: 'INTERNATIONAL'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'NETWORK_SPECIFIC',\n  value: 'NETWORK_SPECIFIC'\n}, {\n  label: 'SUBSCRIBER_NUMBER',\n  value: 'SUBSCRIBER_NUMBER'\n}, {\n  label: 'ALPHANUMERIC',\n  value: 'ALPHANUMERIC'\n}, {\n  label: 'ABBREVIATED',\n  value: 'ABBREVIATED'\n}];\nexport const FieldGatewayTypeOfNumber = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaytypeofnumber'),\n  name: \"typeOfNumber\",\n  label: i18n.t('Type of number'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, url } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayUrlTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayurltemplate'),\n  name: \"urlTemplate\",\n  label: i18n.t('Url template'),\n  component: InputFieldFF,\n  validate: composeValidators(url, hasValue)\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayUseGet = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('gateways-fieldgatewayuseget'),\n  name: \"useGet\",\n  label: i18n.t('Use GET'),\n  component: CheckboxFieldFF,\n  helpText: i18n.t('Use GET instead of POST to send data to gateway')\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayUsername = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayusername'),\n  name: \"username\",\n  label: i18n.t('User name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport styles from './GatewayAddKeyValuePair.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const GatewayAddKeyValuePair = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addKeyValueToFormState = () => {\n    const {\n      parameters\n    } = getState().values;\n    change('parameters', [...parameters, {\n      header: false,\n      encode: false,\n      key: '',\n      value: '',\n      confidential: false\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: addKeyValueToFormState,\n    dataTest: dataTest('gateways-gatewayaddkeyvaluepair')\n  }, i18n.t('Add key value pair'));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport cx from 'classnames';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport styles from './FormRow.module.css';\nexport const FormRow = ({\n  children,\n  className\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.formRow, className),\n  \"data-test\": dataTest('forms-formrow')\n}, children);\nFormRow.propTypes = {\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport { FieldGatewayName, FieldGatewayUsername, FieldGatewayPassword, FieldGatewayPasswordConfirmation } from '../gateways';\nimport i18n from '../locales';\nconst {\n  Form\n} = ReactFinalForm;\nexport const GatewayBulkSMSForm = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaybulksmsform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayPasswordConfirmation, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaybulksmsform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nGatewayBulkSMSForm.defaultProps = {\n  initialValues: {}\n};\nGatewayBulkSMSForm.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport { FieldGatewayAuthToken, FieldGatewayName, FieldGatewayUrlTemplate, FieldGatewayUsername } from '../gateways';\nimport i18n from '../locales';\nconst {\n  Form\n} = ReactFinalForm;\nexport const GatewayClickatellForm = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewayclickatellform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayAuthToken, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayUrlTemplate, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewayclickatellform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nGatewayClickatellForm.defaultProps = {\n  initialValues: {}\n};\nGatewayClickatellForm.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport { FieldGatewayName, FieldGatewayUrlTemplate, GatewayAddKeyValuePair, GatewayKeyValuePair } from '../gateways';\nimport { PageSubHeadline } from '../headline';\nimport i18n from '../locales';\nimport { FieldGatewayConfigurationTemplate } from './FieldGatewayConfigurationTemplate';\nimport { FieldGatewayContentType } from './FieldGatewayContentType';\nimport { FieldGatewaySendUrlParameters } from './FieldGatewaySendUrlParameters';\nimport { FieldGatewayUseGet } from './FieldGatewayUseGet';\nconst {\n  Form\n} = ReactFinalForm;\nexport const GatewayGenericForm = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    values,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaygenericform')\n  }, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Gateway setup')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayUrlTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayConfigurationTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayContentType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayUseGet, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewaySendUrlParameters, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Key value pairs')), values.parameters.map((_, index) => /*#__PURE__*/React.createElement(GatewayKeyValuePair, {\n    index: index,\n    key: index\n  })), /*#__PURE__*/React.createElement(GatewayAddKeyValuePair, null), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    dataTest: dataTest('forms-gatewaygenericform-submit'),\n    disabled: submitting,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nGatewayGenericForm.defaultProps = {\n  initialValues: {\n    parameters: []\n  }\n};\nGatewayGenericForm.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm, composeValidators, string, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const createFieldGatewayKeyValuePairValueName = index => \"parameters[\".concat(index, \"].value\");\nexport const GatewayKeyValuePairValueField = ({\n  index\n}) => {\n  const {\n    confidential\n  } = useFormState().values.parameters[index];\n  return /*#__PURE__*/React.createElement(Field, {\n    type: confidential ? 'password' : 'text',\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-value'),\n    name: createFieldGatewayKeyValuePairValueName(index),\n    label: i18n.t('Value'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  });\n};\nGatewayKeyValuePairValueField.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CheckboxFieldFF, InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport styles from './GatewayKeyValuePair.module.css';\nimport { GatewayKeyValuePairValueField } from './GatewayKeyValuePairValueField';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const GatewayKeyValuePair = ({\n  index\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeKeyValueFromFormState = index => {\n    const {\n      parameters\n    } = getState().values;\n\n    if (index === 0) {\n      change('parameters', parameters.slice(1));\n    } else {\n      change('parameters', [...parameters.slice(0, index), ...parameters.slice(index + 1)]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('gateways-gatewaykeyvaluepair')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textInputs\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-key'),\n    className: styles.keyInput,\n    name: \"parameters[\".concat(index, \"].key\"),\n    label: i18n.t('Key'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.valueInput\n  }, /*#__PURE__*/React.createElement(GatewayKeyValuePairValueField, {\n    index: index\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.checkboxGroup\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isheader'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].header\"),\n    label: i18n.t('Send as header'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isencoded'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].encode\"),\n    label: i18n.t('Encode'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isconfidential'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].confidential\"),\n    label: i18n.t('Confidential'),\n    component: CheckboxFieldFF\n  })), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-remove'),\n    onClick: () => removeKeyValueFromFormState(index)\n  }, i18n.t('Remove key value pair')));\n};\nGatewayKeyValuePair.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalTitle, ModalActions } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../locales';\nexport const CancelDialog = ({\n  onConfirmCancel,\n  onAbortCancel\n}) => /*#__PURE__*/React.createElement(Modal, null, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Are you sure you want to cancel? Unsaved changes will be lost')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n  onClick: onAbortCancel\n}, i18n.t('No, stay on page')), /*#__PURE__*/React.createElement(Button, {\n  primary: true,\n  onClick: onConfirmCancel\n}, i18n.t('Yes, cancel')))));\nCancelDialog.propTypes = {\n  onAbortCancel: PropTypes.func.isRequired,\n  onConfirmCancel: PropTypes.func.isRequired\n};","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { CancelDialog } from '../../cancelDialog';\nimport { dataTest } from '../../dataTest';\nimport { GENERIC_FORM, BULK_SMS_FORM, CLICKATELL_FORM, SMPP_FORM, FIELD_GATEWAY_PASSWORD_CONFIRMATION_NAME, FIELD_GATEWAY_PASSWORD_NAME, GatewayBulkSMSForm, GatewayClickatellForm, GatewayGenericForm, GatewaySMPPForm, useReadGatewayQuery, useUpdateGenericGatewayMutation, useUpdateBulkSMSGatewayMutation, useUpdateClickatellGatewayMutation, useUpdateSMPPGatewayMutation } from '../../gateways';\nimport { PageHeadline } from '../../headline';\nimport i18n from '../../locales';\nimport styles from './GatewayConfigFormEdit.module.css';\nimport { GATEWAY_CONFIG_LIST_PATH } from './GatewayConfigList';\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC = '/sms-gateway/edit';\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH = \"\".concat(GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC, \"/:id\");\n\nconst getFormComponent = gatewayType => {\n  if (gatewayType === GENERIC_FORM) {\n    return GatewayGenericForm;\n  }\n\n  if (gatewayType === BULK_SMS_FORM) {\n    return GatewayBulkSMSForm;\n  }\n\n  if (gatewayType === CLICKATELL_FORM) {\n    return GatewayClickatellForm;\n  }\n\n  if (gatewayType === SMPP_FORM) {\n    return GatewaySMPPForm;\n  }\n\n  throw new Error(\"The gateway type does not exist, got \\\"\".concat(gatewayType, \"\\\"\"));\n};\n\nconst getInitialValues = gateway => {\n  if (gateway.type === BULK_SMS_FORM) {\n    return { ...gateway,\n      [FIELD_GATEWAY_PASSWORD_CONFIRMATION_NAME]: gateway[FIELD_GATEWAY_PASSWORD_NAME]\n    };\n  }\n\n  return gateway;\n};\n\nexport const GatewayConfigFormEdit = () => {\n  var _data$gateway;\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const {\n    loading,\n    error: loadError,\n    data: jsonData\n  } = useReadGatewayQuery(id);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useUpdateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useUpdateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useUpdateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useUpdateSMPPGatewayMutation();\n  const saveError = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (loadError) {\n    const msg = i18n.t('Something went wrong whilst loading gateways');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadError.message));\n  }\n\n  const data =\n  /**\n   * @TODO:\n   *   * The response does not contain the right content type header\n   *     -> https://jira.dhis2.org/browse/DHIS2-9252\n   */\n  jsonData && typeof jsonData.gateway === 'string' ? {\n    gateway: JSON.parse(jsonData.gateway)\n  } : jsonData;\n  const gatewayType = data === null || data === void 0 ? void 0 : (_data$gateway = data.gateway) === null || _data$gateway === void 0 ? void 0 : _data$gateway.type;\n\n  const onSubmit = async formValues => {\n    const values = { ...formValues,\n      id: data.gateway.uid\n    };\n\n    try {\n      if (values.type === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (values.type === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (values.type === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (values.type === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push(GATEWAY_CONFIG_LIST_PATH);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const FormComponent = getFormComponent(gatewayType);\n  const initialValues = gatewayType && getInitialValues(data.gateway);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformedit'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit gateway')), gatewayType ? /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformedit-formcontainer'),\n    \"data-gateway-id\": data.gateway.uid\n  }, saveError && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving gateways')\n  }, saveError.message), /*#__PURE__*/React.createElement(FormComponent, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    onCancelClick: pristine => pristine ? history.push(GATEWAY_CONFIG_LIST_PATH) : setShowCancelDialog(true)\n  })) : /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Gateway not found')\n  }, i18n.t('The requested gateway could not be loaded')), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push(GATEWAY_CONFIG_LIST_PATH),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }));\n};","import i18n from '../locales';\n/**\n * @param {string} type\n * @returns {string}\n */\n\nexport const getTypeLabelByType = type => {\n  if (type === 'bulksms') {\n    return i18n.t('BulkSMS');\n  }\n\n  if (type === 'clickatell') {\n    return i18n.t('Clickatell');\n  }\n\n  if (type === 'http' || !type) {\n    return i18n.t('Generic');\n  }\n\n  return type;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Checkbox, Table, TableHead, TableBody, TableRowHead, TableCellHead, TableRow, TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC } from '../views/gateway_configuration/GatewayConfigFormEdit';\nimport styles from './GatewaysTable.module.css';\nimport { getTypeLabelByType } from './getTypeLabelByType';\nexport const GatewaysTable = ({\n  allGatewaysChecked,\n  checkedGateways,\n  gateways,\n  onGatewayToggle,\n  onToggleAll,\n  onMakeDefaultClick\n}) => {\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('gateways-gatewaystable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, {\n    dataTest: dataTest('gateways-gatewaystable-checkall')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: onToggleAll,\n    checked: allGatewaysChecked\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, gateways.map(gateway => /*#__PURE__*/React.createElement(TableRow, {\n    key: gateway.uid,\n    dataTest: dataTest('gateways-gatewaystable-row')\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkboxCell,\n    dataTest: dataTest('gateways-gatewaystable-checkbox')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    value: gateway.uid,\n    onChange: () => onGatewayToggle(gateway.uid),\n    checked: checkedGateways.includes(gateway.uid),\n    dataTest: dataTest('gateways-gatewaystable-id')\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('gateways-gatewaystable-name')\n  }, gateway.name), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.typeCell,\n    dataTest: dataTest('gateways-gatewaystable-type')\n  }, getTypeLabelByType(gateway.type)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.defaultCell\n  }, !gateway.isDefault ? /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('gateways-gatewaystable-makedefault'),\n    onClick: () => onMakeDefaultClick(gateway.uid),\n    className: styles.makeDefaultButton\n  }, i18n.t('Make default')) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.isDefaultText,\n    \"data-test\": dataTest('gateways-gatewaystable-isdefault')\n  }, i18n.t('Default gateway'))), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('gateways-gatewaystable-actions'),\n    className: styles.editCell\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    className: styles.rowActions\n  }, /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('gateways-gatewaystable-edit'),\n    onClick: () => {\n      history.push(\"\".concat(GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC, \"/\").concat(gateway.uid));\n    }\n  }, i18n.t('Edit'))))))));\n};\nGatewaysTable.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    isDefault: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired\n  })).isRequired,\n  onGatewayToggle: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  onToggleAll: PropTypes.func.isRequired,\n  allGatewaysChecked: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport styles from './GatewayList.module.css';\nimport { GatewaysTable } from './GatewaysTable';\nexport const GatewayList = ({\n  checkedGateways,\n  gateways,\n  setCheckedGateways,\n  onMakeDefaultClick,\n  processing\n}) => {\n  const allGatewaysChecked = checkedGateways.length === gateways.length;\n\n  const toggleGateway = id => {\n    if (checkedGateways.includes(id)) {\n      const index = checkedGateways.findIndex(curId => curId === id);\n      const newCheckedGateways = index === 0 ? checkedGateways.slice(1) : [...checkedGateways.slice(0, index), ...checkedGateways.slice(index + 1)];\n      setCheckedGateways(newCheckedGateways);\n    } else {\n      setCheckedGateways([...checkedGateways, id]);\n    }\n  };\n\n  const toggleAll = () => {\n    if (!allGatewaysChecked) {\n      const allGatewayIds = gateways.map(({\n        uid\n      }) => uid);\n      setCheckedGateways(allGatewayIds);\n    } else {\n      setCheckedGateways([]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('gateways-gatewaylist')\n  }, processing && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.processingMessage\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loadingContainer\n  }, /*#__PURE__*/React.createElement(CircularLoader, null))), /*#__PURE__*/React.createElement(GatewaysTable, {\n    allGatewaysChecked: allGatewaysChecked,\n    gateways: gateways,\n    checkedGateways: checkedGateways,\n    onGatewayToggle: toggleGateway,\n    onMakeDefaultClick: onMakeDefaultClick,\n    onToggleAll: toggleAll\n  }));\n};\nGatewayList.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    isDefault: PropTypes.bool\n  })).isRequired,\n  setCheckedGateways: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  processing: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport { FieldGatewayBindType, FieldGatewayCompressed, FieldGatewayHost, FieldGatewayName, FieldGatewayNumberPlanIndicator, FieldGatewayPassword, FieldGatewayPort, FieldGatewaySystemId, FieldGatewaySystemType, FieldGatewayTypeOfNumber } from '../gateways';\nimport i18n from '../locales';\nconst {\n  Form\n} = ReactFinalForm;\nexport const GatewaySMPPForm = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaysmppform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewaySystemId, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayHost, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewaySystemType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayNumberPlanIndicator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayTypeOfNumber, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayBindType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayPort, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayCompressed, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaysmppform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nGatewaySMPPForm.defaultProps = {\n  initialValues: {}\n};\nGatewaySMPPForm.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","export const GENERIC_FORM = 'http';\nexport const BULK_SMS_FORM = 'bulksms';\nexport const CLICKATELL_FORM = 'clickatell';\nexport const SMPP_FORM = 'smpp';","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useCreateBulkSMSGatewayMutation = () => useDataMutation(CREATE_BULK_SMS_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useCreateClickatellGatewayMutation = () => useDataMutation(CREATE_CLICKATELL_GATEWAY_MUTATION);","/**\n * This the shape of the additional fields\n * that can be added to a generic config\n *\n * @typedef {Object} Parameter\n * @prop {string} key\n * @prop {string} value\n * @prop {bool} header\n * @prop {bool} encode\n * @prop {bool} confidential\n */\n\n/**\n * @param {Object} args\n * @param {string} args.configurationTemplate\n * @param {string} args.contentType\n * @param {string} args.name\n * @param {string} args.urlTemplate\n * @param {bool} args.sendUrlParameters\n * @param {bool} args.useGet\n * @param {Parameter[]} args.parameters\n *\n * @returns {Object}\n */\nexport const createGenericGateWayDataFromVariables = ({\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n}) => ({\n  type: 'http',\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n});","import { useDataMutation } from '@dhis2/app-runtime';\nimport { createGenericGateWayDataFromVariables } from './createGenericGateWayDataFromVariables';\nexport const CREATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useCreateGenericGatewayMutation = () => useDataMutation(CREATE_GENERIC_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useCreateSMPPGatewayMutation = () => useDataMutation(CREATE_SMPP_GATEWAY_MUTATION);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_GATEWAY_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteGatewaysMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n *   * Api does not return password of BulkSMS gateway configs\n *     -> https://jira.dhis2.org/browse/DHIS2-9248\n */\n\nexport const GATEWAY_QUERY = {\n  gateway: {\n    resource: 'gateways',\n    id: ({\n      id\n    }) => id\n  }\n};\nexport const useReadGatewayQuery = id => useDataQuery(GATEWAY_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The endpoint requires a `.json`, ignores \"Accept\" header\n *     -> https://jira.dhis2.org/browse/DHIS2-9250\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n */\n\nexport const GATEWAYS_QUERY = {\n  gateways: {\n    resource: 'gateways.json',\n    params: ({\n      fields,\n      filter\n    }) => {\n      const params = {};\n\n      if (fields) {\n        params.fields = fields;\n      }\n\n      if (filter) {\n        params.filter = filter;\n      }\n\n      return params;\n    }\n  }\n};\n/**\n * @param {string[]} [ids]\n * @return {Object}\n */\n\nexport const useReadGatewaysQuery = ids => {\n  var _parsedData$gateways;\n\n  /*\n   * @TODO(filtering): Currently the `id:in:[...]` doesn't work\n   *   -> https://jira.dhis2.org/browse/DHIS2-9259\n   *\n   * This is because filtering doesn't work right now\n   * So there's no need for sending any variables\n   */\n  const filter = \"id:in:[\".concat(ids === null || ids === void 0 ? void 0 : ids.join(','), \"]\");\n  const variables = false && ids ? {\n    filter\n  } : {}; // eslint-disable-line no-constant-condition\n\n  const {\n    data: jsonData,\n    ...rest\n  } = useDataQuery(GATEWAYS_QUERY, {\n    variables\n  });\n  const parsedData =\n  /**\n   * @TODO:\n   *   Create Jira issue for:\n   *   The response does not contain the right content type header\n   */\n  jsonData && typeof jsonData.gateways === 'string' ? {\n    gateways: JSON.parse(jsonData.gateways)\n  } : jsonData;\n  const data = ids && (parsedData === null || parsedData === void 0 ? void 0 : (_parsedData$gateways = parsedData.gateways) === null || _parsedData$gateways === void 0 ? void 0 : _parsedData$gateways.gateways) ? {\n    gateways: {\n      gateways: parsedData.gateways.gateways.filter(({\n        uid\n      }) => ids.includes(uid))\n    }\n  } : parsedData;\n  return {\n    data,\n    ...rest\n  };\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const SET_DEFAULT_GATEWAY_MUTATION = {\n  resource: 'gateways/default',\n  type: 'replace',\n  id: ({\n    id\n  }) => id\n};\nexport const useSetDefaultGatewayMutation = () => useDataMutation(SET_DEFAULT_GATEWAY_MUTATION);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\n/**\n * @TODO\n *   * Create jira issue: Make `useDataMutation` accept function for \"id\"\n */\n\n/**\n * @param {Object} query\n * @returns {Object}\n */\n\nexport const useUpdateGatewayMutation = query => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n\n  const doFetch = variables => {\n    const updatedQuery = { ...query,\n      id: variables.id\n    };\n    setLoading(true);\n    setError(null);\n    return engine.mutate(updatedQuery, {\n      variables\n    }).then(data => {\n      setLoading(false);\n      return data;\n    }).catch(error => {\n      setLoading(false);\n      setError(error);\n      throw error;\n    });\n  };\n\n  return [doFetch, {\n    loading,\n    error\n  }];\n};","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useUpdateBulkSMSGatewayMutation = () => useUpdateGatewayMutation(UPDATE_BULK_SMS_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useUpdateClickatellGatewayMutation = () => useUpdateGatewayMutation(UPDATE_CLICKATELL_GATEWAY_MUTATION);","import { createGenericGateWayDataFromVariables } from './createGenericGateWayDataFromVariables';\nimport { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'replace',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useUpdateGenericGatewayMutation = () => useUpdateGatewayMutation(UPDATE_GENERIC_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useUpdateSMPPGatewayMutation = () => useUpdateGatewayMutation(UPDATE_SMPP_GATEWAY_MUTATION);","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport styles from './Paragraph.module.css';\nexport const Paragraph = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.paragraph,\n  \"data-test\": dataTest('text-paragraph')\n}, children);\nParagraph.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { SingleSelectField, SingleSelectOption, NoticeBox } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { dataTest } from '../../dataTest';\nimport { FormRow } from '../../forms';\nimport { GENERIC_FORM, BULK_SMS_FORM, CLICKATELL_FORM, SMPP_FORM } from '../../gateways';\nimport { GatewayBulkSMSForm, GatewayClickatellForm, GatewayGenericForm, GatewaySMPPForm, useCreateBulkSMSGatewayMutation, useCreateClickatellGatewayMutation, useCreateSMPPGatewayMutation, useCreateGenericGatewayMutation } from '../../gateways';\nimport { PageHeadline } from '../../headline';\nimport i18n from '../../locales';\nimport styles from './GatewayConfigFormNew.module.css';\nimport { GATEWAY_CONFIG_LIST_PATH } from './GatewayConfigList';\nexport const GATEWAY_CONFIG_FORM_NEW_PATH = '/sms-gateway/new';\nexport const GatewayConfigFormNew = () => {\n  const history = useHistory();\n  const [visibleForm, setVisibleForm] = useState(GENERIC_FORM);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useCreateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useCreateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useCreateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useCreateSMPPGatewayMutation();\n  const error = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst saving the gateway');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-gatewayconfigformnew')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const onSubmit = async values => {\n    try {\n      if (visibleForm === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (visibleForm === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (visibleForm === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (visibleForm === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push(GATEWAY_CONFIG_LIST_PATH);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const onCancelClick = () => history.push(GATEWAY_CONFIG_LIST_PATH);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformnew'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Type'),\n    onChange: ({\n      selected\n    }) => setVisibleForm(selected),\n    selected: visibleForm,\n    dataTest: dataTest('views-gatewayconfigformnew-gatewaytype')\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: GENERIC_FORM,\n    label: i18n.t('Generic')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: BULK_SMS_FORM,\n    label: i18n.t('BulkSMS')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: CLICKATELL_FORM,\n    label: i18n.t('Clickatell')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: SMPP_FORM,\n    label: i18n.t('SMPP')\n  }))), /*#__PURE__*/React.createElement(FormRow, null, visibleForm === GENERIC_FORM && /*#__PURE__*/React.createElement(GatewayGenericForm, {\n    onSubmit: onSubmit,\n    onCancelClick: onCancelClick\n  }), visibleForm === BULK_SMS_FORM && /*#__PURE__*/React.createElement(GatewayBulkSMSForm, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === CLICKATELL_FORM && /*#__PURE__*/React.createElement(GatewayClickatellForm, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === SMPP_FORM && /*#__PURE__*/React.createElement(GatewaySMPPForm, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  })));\n};","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ListActions } from '../../dataList';\nimport { dataTest } from '../../dataTest';\nimport { DeleteGatewaysConfirmationDialog, GatewayList, useDeleteGatewaysMutation, useReadGatewaysQuery, useSetDefaultGatewayMutation } from '../../gateways';\nimport { PageHeadline } from '../../headline';\nimport i18n from '../../locales';\nimport { Paragraph } from '../../text';\nimport { GATEWAY_CONFIG_FORM_NEW_PATH } from './GatewayConfigFormNew';\nimport styles from './GatewayConfigList.module.css';\nexport const GATEWAY_CONFIG_LIST_PATH = '/sms-gateway';\nexport const GATEWAY_CONFIG_LIST_LABEL = 'Gateway configuration';\nexport const GatewayConfigList = () => {\n  var _data$gateways, _data$gateways$gatewa;\n\n  const history = useHistory();\n\n  const onAddGatewayClick = () => history.push(GATEWAY_CONFIG_FORM_NEW_PATH);\n\n  const [checkedGateways, setCheckedGateways] = useState([]);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const {\n    loading: loadingReadGateways,\n    error: errorReadGateways,\n    data,\n    refetch: refetchReadGateways\n  } = useReadGatewaysQuery();\n  const [deleteCheckedGateways, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteGatewaysMutation();\n  const [makeGatewayDefault, {\n    loading: loadingSetDefault,\n    error: errorSetDefault\n  }] = useSetDefaultGatewayMutation();\n\n  const onDeleteClick = () => {\n    const variables = {\n      ids: checkedGateways\n    };\n    deleteCheckedGateways(variables).then(refetchReadGateways);\n    setShowDeleteDialog(false);\n  };\n\n  const onMakeDefaultClick = id => {\n    const variables = {\n      id\n    };\n    makeGatewayDefault(variables).then(refetchReadGateways);\n  };\n\n  const loading = loadingReadGateways || loadingDelete || loadingSetDefault;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = errorReadGateways || errorDelete || errorSetDefault;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const hasGateways = !!(data === null || data === void 0 ? void 0 : (_data$gateways = data.gateways) === null || _data$gateways === void 0 ? void 0 : (_data$gateways$gatewa = _data$gateways.gateways) === null || _data$gateways$gatewa === void 0 ? void 0 : _data$gateways$gatewa.length);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('views-gatewayconfiglist')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('An SMS gateway lets a DHIS2 instance send and receive SMS messages. Different gateway types can be added and configured below. At least one gateway is needed to send and receive SMS messages. Load balancing will use all gateways if there are multiple available. Read about gateway configuration in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add gateway'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"views-gatewayconfiglist\",\n    onAddClick: onAddGatewayClick,\n    onDeleteClick: () => setShowDeleteDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedGateways.length || loadingDelete\n  }), hasGateways ? /*#__PURE__*/React.createElement(GatewayList, {\n    processing: loading,\n    checkedGateways: checkedGateways,\n    setCheckedGateways: setCheckedGateways,\n    gateways: data.gateways.gateways,\n    onMakeDefaultClick: onMakeDefaultClick\n  }) : /*#__PURE__*/React.createElement(NoticeBox, {\n    info: true,\n    title: i18n.t('No gateways found')\n  }, i18n.t(\"It looks like there aren't any configured gateways, or they couldn't be loaded.\")), showDeleteDialog && /*#__PURE__*/React.createElement(DeleteGatewaysConfirmationDialog, {\n    onCancelClick: () => setShowDeleteDialog(false),\n    onDeleteClick: onDeleteClick\n  }));\n};","import { createContext } from 'react';\nexport const AlertContext = /*#__PURE__*/createContext({\n  addAlert: () => {\n    throw new Error('AlertContext has not been initialized yet!');\n  }\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { dataTest } from '../dataTest';\nimport { AlertContext } from './AlertContext';\nexport const AlertHandler = ({\n  children\n}) => {\n  const [alerts, setAlerts] = useState([]);\n\n  const addAlert = ({\n    message,\n    type\n  }) => {\n    const alert = {\n      message,\n      type,\n      // Ensure that identical messages can be distinguished\n      timestamp: Date.now()\n    };\n    setAlerts([...alerts, alert]);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      addAlert\n    }\n  }, children, /*#__PURE__*/React.createElement(AlertStack, {\n    dataTest: dataTest('notifications-alerthandler')\n  }, alerts.map(({\n    message,\n    type,\n    timestamp\n  }) => /*#__PURE__*/React.createElement(AlertBar, _extends({\n    dataTest: dataTest('notifications-alert'),\n    key: \"\".concat(message).concat(timestamp)\n  }, {\n    [type]: true\n  }), message))));\n};\nAlertHandler.propTypes = {\n  children: PropTypes.any\n};","import { useDataMutation } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport React, { useContext } from 'react';\nimport { AlertContext } from '../notifications';\nconst inboundMutation = {\n  resource: 'sms/inbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nconst outboundMutation = {\n  resource: 'sms/outbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nexport const DeleteSelectedButton = ({\n  selectedIds,\n  type,\n  onComplete\n}) => {\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const mutation = type == 'inbound' ? inboundMutation : outboundMutation;\n  const [mutate] = useDataMutation(mutation, {\n    onComplete,\n    onError: error => {\n      addAlert({\n        type: 'critical',\n        message: error.message\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => mutate({\n      ids: selectedIds.join()\n    }),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected'));\n};\nDeleteSelectedButton.propTypes = {\n  selectedIds: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  type: PropTypes.oneOf(['inbound', 'outbound']).isRequired,\n  onComplete: PropTypes.func.isRequired\n};","import { useQueryParams as _useQueryParams, StringParam, NumberParam, withDefault } from 'use-query-params';\nexport const useQueryParams = () => _useQueryParams({\n  status: withDefault(StringParam, 'ALL'),\n  phoneNumber: withDefault(StringParam, ''),\n  page: withDefault(NumberParam, 1),\n  pageSize: withDefault(NumberParam, 50)\n});","import i18n from '@dhis2/d2-i18n';\nexport const statusMap = {\n  ALL: i18n.t('All'),\n  FAILED: i18n.t('Failed'),\n  INCOMING: i18n.t('Incoming'),\n  PROCESSED: i18n.t('Processed'),\n  PROCESSING: i18n.t('Processing'),\n  SENT: i18n.t('Sent'),\n  UNHANDLED: i18n.t('Unhandled')\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../dataTest';\nimport styles from './Filter.module.css';\nimport { statusMap } from './translations'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/incoming/SmsMessageStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'FAILED', 'INCOMING', 'PROCESSED', 'PROCESSING', 'SENT', 'UNHANDLED'].map(status => ({\n  value: status,\n  label: statusMap[status]\n}));\nexport const Filter = ({\n  status,\n  setStatus,\n  phoneNumber,\n  setPhoneNumber,\n  onReset\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('views-receivedsms-filter'),\n  className: styles.container\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.inputStrip\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: \"status-filter\"\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))), /*#__PURE__*/React.createElement(InputField, {\n  label: i18n.t('Filter by phone number'),\n  inputWidth: \"250px\",\n  value: phoneNumber,\n  onChange: ({\n    value\n  }) => setPhoneNumber(value),\n  dataTest: \"phone-number-filter\"\n}), /*#__PURE__*/React.createElement(Button, {\n  large: true,\n  onClick: onReset,\n  dataTest: \"reset-filter-btn\"\n}, i18n.t('Reset filter'))));\nFilter.propTypes = {\n  phoneNumber: PropTypes.string.isRequired,\n  setPhoneNumber: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelect, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport { useQueryParams } from '../hooks';\nimport styles from './Pagination.module.css';\nconst PAGE_LENGTHS = ['1', '2', '10', '20', '30', '40', '50', '100'];\nexport const Pagination = ({\n  page,\n  pageCount,\n  pageSize,\n  total\n}) => {\n  const firstItem = Math.min((page - 1) * pageSize + 1, total);\n  const lastItem = Math.min(firstItem + pageSize - 1, total);\n  const availablePages = Array.from({\n    length: pageCount\n  }, (_x, i) => (i + 1).toString());\n  const [, setQueryParams] = useQueryParams();\n\n  const setPage = page => {\n    setQueryParams({\n      page\n    });\n  };\n\n  const setPageSize = pageSize => {\n    setQueryParams({\n      pageSize,\n      page: 1\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, i18n.t('Show'), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    selected: pageSize.toString(),\n    onChange: ({\n      selected\n    }) => setPageSize(selected),\n    className: styles.select\n  }, PAGE_LENGTHS.map(length => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: length,\n    value: length,\n    label: length\n  }))), i18n.t('per page')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.summary\n  }, i18n.t('Viewing {{firstItem}}-{{lastItem}} of {{total}}', {\n    firstItem,\n    lastItem,\n    total\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonPrevious,\n    small: true,\n    disabled: page === 1,\n    onClick: () => setPage(page - 1)\n  }, i18n.t('Previous')), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Page')), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    inputWidth: \"600px\",\n    selected: page.toString(),\n    onChange: ({\n      selected\n    }) => setPage(selected),\n    className: styles.select\n  }, availablePages.map(availablePage => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: availablePage,\n    value: availablePage,\n    label: availablePage\n  }))), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('of {{pageCount}}', {\n    pageCount\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonNext,\n    small: true,\n    disabled: page === pageCount,\n    onClick: () => setPage(page + 1)\n  }, i18n.t('Next'))));\n};\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Checkbox, Table, TableBody, TableCell, TableCellHead, TableFoot, TableHead, TableRow, TableRowHead } from '@dhis2/ui';\nimport React from 'react';\nimport { Pagination } from '../pagination/Pagination';\nimport styles from './SmsTable.module.css';\nexport const SmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds,\n  columns,\n  rowRenderFn\n}) => {\n  const selectedIdSet = new Set(selectedIds);\n  const allSelected = messages.length > 0 && selectedIds.length === messages.length;\n\n  const toggle = id => {\n    if (selectedIdSet.has(id)) {\n      selectedIdSet.delete(id);\n    } else {\n      selectedIdSet.add(id);\n    }\n\n    setSelectedIds(Array.from(selectedIdSet));\n  };\n\n  const toggleAll = () => {\n    if (allSelected) {\n      setSelectedIds([]);\n    } else {\n      setSelectedIds(messages.map(({\n        id\n      }) => id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    disabled: messages.length === 0,\n    onChange: toggleAll,\n    checked: allSelected\n  })), columns.map(column => /*#__PURE__*/React.createElement(TableCellHead, {\n    key: column\n  }, column)))), /*#__PURE__*/React.createElement(TableBody, null, messages.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length),\n    className: styles.noResults\n  }, i18n.t('No SMSes to display'))) : messages.map(message => /*#__PURE__*/React.createElement(TableRow, {\n    key: message.id\n  }, /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedIdSet.has(message.id),\n    onChange: () => toggle(message.id)\n  })), rowRenderFn(message)))), /*#__PURE__*/React.createElement(TableFoot, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length)\n  }, /*#__PURE__*/React.createElement(Pagination, pager)))));\n};\nSmsTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  rowRenderFn: PropTypes.func.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Date.module.css';\nexport const Date = ({\n  date\n}) => {\n  const momentDate = moment(date);\n  const formatted = momentDate.format('DD MMM YYYY');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.date\n  }, formatted);\n};\nDate.propTypes = {\n  date: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Time.module.css';\nexport const Time = ({\n  time\n}) => {\n  const momentDate = moment(time);\n  const formatted = momentDate.format('HH:mm:ss');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.time\n  }, formatted);\n};\nTime.propTypes = {\n  time: PropTypes.string.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { SmsTable } from '../../sms_table/SmsTable';\nimport { Date, Time } from '../../time';\nimport styles from './ReceivedSmsTable.module.css';\nimport { statusMap } from './translations';\nexport const ReceivedSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Phone number'), i18n.t('Status'), i18n.t('Sender'), i18n.t('Received')],\n  rowRenderFn: message => {\n    var _message$user, _message$user$userCre;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.text), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.originator\n    }, message.originator)), /*#__PURE__*/React.createElement(TableCell, null, statusMap[message.smsstatus]), /*#__PURE__*/React.createElement(TableCell, null, ((_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$userCre = _message$user.userCredentials) === null || _message$user$userCre === void 0 ? void 0 : _message$user$userCre.username) || i18n.t('Unknown')), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n      date: message.receiveddate\n    }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n      time: message.receiveddate\n    })));\n  }\n});\nReceivedSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { dataTest } from '../../dataTest';\nimport { DeleteSelectedButton } from '../../delete_selected_button/DeleteSelectedButton';\nimport { PageHeadline } from '../../headline';\nimport { useQueryParams } from '../../hooks';\nimport i18n from '../../locales';\nimport { Filter } from './Filter';\nimport styles from './ReceivedSmsList.module.css';\nimport { ReceivedSmsTable } from './ReceivedSmsTable';\nexport const RECEIVED_SMS_LIST_LABEL = i18n.t('Received');\nexport const RECEIVED_SMS_LIST_PATH = '/received';\n\nconst parseParams = ({\n  page,\n  pageSize,\n  phoneNumber,\n  status\n}) => {\n  const params = {\n    page,\n    pageSize,\n    fields: ['id', 'text', 'originator', 'smsstatus', 'user[userCredentials[username]]', // sender\n    'receiveddate'],\n    order: 'receiveddate:desc'\n  };\n  const filters = [];\n\n  if (phoneNumber) {\n    filters.push(\"originator:ilike:\".concat(phoneNumber));\n  }\n\n  if (status && status !== 'ALL') {\n    filters.push(\"smsstatus:eq:\".concat(status));\n  }\n\n  if (filters.length > 0) {\n    params.filter = filters;\n  }\n\n  return params;\n};\n\nconst query = {\n  inboundSms: {\n    resource: 'sms/inbound',\n    params: parseParams\n  }\n};\nexport const ReceivedSmsList = () => {\n  var _data$inboundSms;\n\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    phoneNumber,\n    status\n  } = queryParams;\n\n  const setPhoneNumber = phoneNumber => {\n    setQueryParams({\n      phoneNumber,\n      page: 1\n    }, 'replaceIn');\n  };\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const handleFilterReset = () => {\n    setQueryParams({\n      phoneNumber: undefined,\n      status: undefined,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n\n  const refetchAndClear = () => {\n    refetch();\n    setSelectedIds([]);\n  };\n\n  const {\n    callback: debouncedRefetch\n  } = useDebouncedCallback(refetch, 500, {\n    leading: true\n  });\n  useEffect(() => {\n    debouncedRefetch({\n      page,\n      pageSize,\n      phoneNumber,\n      status\n    });\n  }, [page, pageSize, phoneNumber, status]);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading received SMSes');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$inboundSms = data.inboundSms) === null || _data$inboundSms === void 0 ? void 0 : _data$inboundSms.inboundsmss) || [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-receivedsmslist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(Filter, {\n    status: status,\n    setStatus: setStatus,\n    phoneNumber: phoneNumber,\n    setPhoneNumber: setPhoneNumber,\n    onReset: handleFilterReset\n  }), /*#__PURE__*/React.createElement(DeleteSelectedButton, {\n    selectedIds: selectedIds,\n    type: \"inbound\",\n    onComplete: refetchAndClear\n  })), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(ReceivedSmsTable, {\n    messages: messages,\n    pager: data.inboundSms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  }));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CircularLoader, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../locales';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitting: true,\n  pristine: true\n};\nexport const SaveCommandButton = ({\n  enabled\n}) => {\n  const {\n    submitting,\n    pristine\n  } = useFormState({\n    subscription\n  });\n  const disabled = pristine || submitting;\n  return /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: !enabled && disabled,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, i18n.t('Save command'));\n};\nSaveCommandButton.defaultProps = {\n  enabled: false\n};\nSaveCommandButton.propTypes = {\n  /*\n   * This prop is used when fields, stored as array entries\n   * in the form state, are being removed while the form\n   * is still pristine.\n   *\n   * Form some reasons, RFF doesn't recognize this as a change\n   * and keeps the form state's pristine value `true`\n   */\n  enabled: PropTypes.bool\n};","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { FormRow } from '../forms';\nimport i18n from '../locales';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitError: true,\n  hasSubmitErrors: true\n};\nexport const SubmitErrors = () => {\n  const {\n    submitError,\n    hasSubmitErrors\n  } = useFormState({\n    subscription\n  });\n  if (!hasSubmitErrors) return null;\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst submitting the form')\n  }, submitError));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../locales';\nimport styles from './CommandFormActions.module.css';\nimport { SaveCommandButton } from './SaveCommandButton';\nimport { SubmitErrors } from './SubmitErrors';\nexport const CommandFormActions = ({\n  enableSubmit,\n  onCancel\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container\n}, /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(SaveCommandButton, {\n  enabled: enableSubmit\n}), /*#__PURE__*/React.createElement(Button, {\n  onClick: onCancel\n}, i18n.t('Cancel'))));\nCommandFormActions.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  enableSubmit: PropTypes.bool\n};","export const FIELD_COMMAND_COMPLETENESS_METHOD_NAME = 'completenessMethod';\nexport const FIELD_COMMAND_DEFAULT_MESSAGE_NAME = 'defaultMessage';\nexport const FIELD_COMMAND_ID_NAME = 'id';\nexport const FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME = 'moreThanOneOrgUnitMessage';\nexport const FIELD_COMMAND_NAME_NAME = 'name';\nexport const FIELD_COMMAND_NO_USER_MESSAGE_NAME = 'noUserMessage';\nexport const FIELD_COMMAND_PARSER_NAME = 'parserType';\nexport const FIELD_COMMAND_PROGAM_NAME = 'program';\nexport const FIELD_COMMAND_PROGAM_STAGE_NAME = 'programStage';\nexport const FIELD_COMMAND_SEPARATOR_NAME = 'separator';\nexport const FIELD_COMMAND_SMS_CODES_NAME = 'smsCodes';\nexport const FIELD_COMMAND_SPECIAL_CHARS_NAME = 'specialCharacters';\nexport const FIELD_COMMAND_SUCCESS_MESSAGE_NAME = 'successMessage';\nexport const FIELD_COMMAND_USE_CURRENT_PERIOD_FOR_REPORTING_NAME = 'currentPeriodUsedForReporting';\nexport const FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME = 'wrongFormatMessage';\nexport const FIELD_COMMAND_CONFIRM_MESSAGE_NAME = 'receivedMessage';","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_SPECIAL_CHARS_NAME } from './fieldNames';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const CommandsAddSpecialCharacters = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addSpecialKeyFieldsToFormState = () => {\n    const specialChars = getState().values[FIELD_COMMAND_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars, {\n      name: '',\n      value: ''\n    }];\n    change(FIELD_COMMAND_SPECIAL_CHARS_NAME, newSpecialChars);\n  };\n\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: addSpecialKeyFieldsToFormState,\n    dataTest: dataTest('forms-commandsaddspecialcharacters')\n  }, i18n.t('Add special character')));\n};","import i18n from '../locales/index';\nexport const ALL_DATAVALUE = {\n  value: 'ALL_DATAVALUE',\n  label: i18n.t('Receive all data values')\n};\nexport const AT_LEAST_ONE_DATAVALUE = {\n  value: 'AT_LEAST_ONE_DATAVALUE',\n  label: i18n.t('Receive at least one data value')\n};\nexport const DO_NOT_MARK_COMPLETE = {\n  value: 'DO_NOT_MARK_COMPLETE',\n  label: i18n.t('Do not mark as complete')\n};","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { FormRow } from '../forms';\nimport i18n from '../locales';\nimport { ALL_DATAVALUE, AT_LEAST_ONE_DATAVALUE, FIELD_COMMAND_COMPLETENESS_METHOD_NAME } from '../smsCommandFields';\nconst {\n  useField\n} = ReactFinalForm;\nexport const DataElementTimesCategoryOptionCombosCompletenessMessage = () => {\n  const {\n    input\n  } = useField(FIELD_COMMAND_COMPLETENESS_METHOD_NAME, {\n    subscription: {\n      value: true\n    }\n  });\n  const completenessMethod = input.value;\n  const title = i18n.t('Required values notice');\n\n  if (completenessMethod === ALL_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(\"Make sure all SMS short codes are provided when completeness method \\\"\".concat(ALL_DATAVALUE.label, \"\\\" is chosen, otherwise received messages will not be processed.\"))));\n  }\n\n  if (completenessMethod === AT_LEAST_ONE_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(\"Make sure at least one SMS short code is provided when completeness method \\\"\".concat(AT_LEAST_ONE_DATAVALUE.label, \"\\\" is chosen, otherwise received messages will not be processed.\"))));\n  }\n\n  return null;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport styles from './FieldDataElementWithCategoryOptionComboAddFormulaButton.module.css';\nconst {\n  useField\n} = ReactFinalForm;\nconst DATA_ELEMENTS_QUERY = {\n  dataElement: {\n    resource: 'dataElements',\n    id: ({\n      id\n    }) => id,\n    params: () => ({\n      fields: 'displayName'\n    })\n  }\n};\nexport const FieldDataElementWithCategoryOptionComboAddFormulaButton = ({\n  baseName,\n  onClick,\n  disabled\n}) => {\n  const engine = useDataEngine();\n  const [loading, setLoading] = useState(false);\n  const [formulaDataElementName, setFormulaDataElementName] = useState('');\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const {\n    formula,\n    code\n  } = smsCode;\n  const operator = formula && formula[0];\n  const dataElementId = formula && formula.slice(1);\n  useEffect(() => {\n    if (dataElementId) {\n      setLoading(true);\n      engine.query(DATA_ELEMENTS_QUERY, {\n        variables: {\n          id: dataElementId\n        }\n      }).then(response => {\n        const {\n          displayName\n        } = response.dataElement;\n        setFormulaDataElementName(displayName);\n      }).finally(() => setLoading(false));\n    }\n  }, [dataElementId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, code && formula && formulaDataElementName && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWords,\n    \"data-test\": dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboaddformulabutton-formulainwords')\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWordsLabel\n  }, i18n.t('Formula'), \":\"), loading && i18n.t('Loading formula'), !loading && \"\".concat(code, \" \").concat(operator, \" \").concat(formulaDataElementName)), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: onClick,\n    disabled: disabled,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboaddformulabutton-button')\n  }, formula ? i18n.t('Edit formula') : i18n.t('Add formula')));\n};\nFieldDataElementWithCategoryOptionComboAddFormulaButton.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react';\nexport const DATA_ELEMENTS_QUERY = {\n  dataSet: {\n    resource: 'dataSets',\n    id: ({\n      id\n    }) => id,\n    params: ({\n      filter\n    }) => ({\n      filter,\n      fields: 'dataSetElements[dataElement[id,code,displayName]]'\n    })\n  }\n};\nexport const queryDataElementsOfDataSet = (engine, variables) => engine.query(DATA_ELEMENTS_QUERY, {\n  variables\n}).then(data => {\n  const {\n    dataSet\n  } = data;\n  const {\n    dataSetElements\n  } = dataSet;\n  const formatted = dataSetElements.map(({\n    dataElement\n  }) => dataElement);\n  formatted.sort((left, right) => {\n    const leftDisplayName = left.displayName;\n    const rightDisplayName = right.displayName;\n\n    if (leftDisplayName === rightDisplayName) {\n      return 0;\n    }\n\n    if (leftDisplayName < rightDisplayName) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return formatted;\n});\nexport const useReadDataElementsOfDataSetQuery = (dataSetId, filter) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return queryDataElementsOfDataSet(engine, variables).then(setData).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id: dataSetId,\n      filter\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm; // The \"s\" from \"set\" is not capitalized\n// as the property on the java-model\n// does not have a capitalized \"s\" either\n//\n// @TODO: Create issue to make it consistent\n\nexport const FIELD_DATA_SET_NAME = 'dataset';\nexport const FieldDataSet = ({\n  dataSets,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fielddataset'),\n  name: FIELD_DATA_SET_NAME,\n  label: i18n.t('Data set'),\n  component: SingleSelectFieldFF,\n  options: dataSets,\n  validate: hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldDataSet.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldDataSet.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const DATA_SETS_QUERY = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadDataSetsQuery = () => useDataQuery(DATA_SETS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldDataSet } from './FieldDataSet';\nimport { useReadDataSetsQuery } from './useReadDataSetsQuery';\nexport const FieldDataSetWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataSetsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      loading: true,\n      showLoadingStatus: true,\n      required: required,\n      dataSets: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    dataSets\n  } = data.dataSets;\n  const options = dataSets.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldDataSet, {\n    required: required,\n    dataSets: options,\n    validate: validate\n  });\n};\nFieldDataSetWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldDataSetWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const DATA_SET_QUERY = {\n  dataSet: {\n    resource: 'dataSets',\n    id: ({\n      id\n    }) => id,\n    params: ({\n      fields = ['id', 'displayName']\n    } = {}) => ({\n      fields\n    })\n  }\n};\nexport const queryDataSet = (engine, variables) => engine.query(DATA_SET_QUERY, {\n  variables\n});\nexport const useReadDataSetQuery = id => useDataQuery(DATA_SET_QUERY, {\n  variables: {\n    id\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, CircularLoader, Modal, ModalActions, ModalContent, ModalTitle, NoticeBox, ReactFinalForm, SingleSelectFieldFF, hasValue } from '@dhis2/ui';\nimport React, { useMemo } from 'react';\nimport { useReadDataElementsOfDataSetQuery } from '../dataElement';\nimport { FIELD_DATA_SET_NAME } from '../dataSet';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport i18n from '../locales';\nconst {\n  Field,\n  Form,\n  useForm,\n  useField\n} = ReactFinalForm;\nexport const FieldDataElementWithCategoryOptionComboFormula = ({\n  baseName,\n  combo,\n  targetFieldName,\n  onClose\n}) => {\n  const form = useForm();\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const dataSetId = useField(FIELD_DATA_SET_NAME, {\n    subscription: {\n      value: true\n    }\n  }).input.value.id;\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataElementsOfDataSetQuery(dataSetId); // Using memo so changing the form does not change the \"initialValues\"\n  // which would cause the form to update unnecessarily\n\n  const initialFormula = smsCode.formula;\n  const initialOperator = useMemo(() => initialFormula ? initialFormula[0] : '+', []);\n  const initialDataElementCode = useMemo(() => initialFormula ? initialFormula.slice(1) : '', []);\n  const initialValues = {\n    operator: initialOperator,\n    dataElementCode: initialDataElementCode\n  };\n  const modalDataTest = dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula');\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Modal, {\n      dataTest: modalDataTest\n    }, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const options = data.map(dataElement => {\n    const {\n      id,\n      displayName\n    } = dataElement;\n    return {\n      value: id,\n      label: displayName\n    };\n  });\n\n  const onSubmit = values => {\n    const newFormula = \"\".concat(values.operator).concat(values.dataElementCode);\n    form.change(targetFieldName, newFormula);\n    onClose();\n  };\n\n  const onRemove = () => {\n    form.change(targetFieldName, null);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(Modal, {\n    dataTest: modalDataTest\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.stopPropagation();\n      handleSubmit(event);\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Formula for {{combo}}', {\n    combo\n  })), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-dataelement'),\n    name: \"dataElementCode\",\n    label: i18n.t('Data element'),\n    component: SingleSelectFieldFF,\n    options: options,\n    validate: hasValue\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-operator'),\n    name: \"operator\",\n    label: i18n.t('formula operator'),\n    component: SingleSelectFieldFF,\n    initialValue: \"+\",\n    options: [{\n      value: '+',\n      label: '+'\n    }, {\n      value: '-',\n      label: '-'\n    }]\n  })), error && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving')\n  }, error.message))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRemove,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-remove')\n  }, i18n.t('Remove')), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-save')\n  }, i18n.t('Save')))))));\n};\nFieldDataElementWithCategoryOptionComboFormula.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  combo: PropTypes.string.isRequired,\n  targetFieldName: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../locales';\nimport { DE_COC_toFormName } from '../smsCommand';\nimport styles from './FieldDataElementWithCategoryOptionCombo.module.css';\nimport { FieldDataElementWithCategoryOptionComboAddFormulaButton } from './FieldDataElementWithCategoryOptionComboAddFormulaButton';\nimport { FieldDataElementWithCategoryOptionComboFormula } from './FieldDataElementWithCategoryOptionComboFormula';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldDataElementWithCategoryOptionCombo = ({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  const [showFormula, setShowFormula] = useState(false);\n  const label = categoryOptionCombo ? \"\".concat(dataElement.displayName, \" \").concat(categoryOptionCombo.displayName) : \"\".concat(dataElement.displayName, \" \").concat(i18n.t('default'));\n  const baseName = DE_COC_toFormName(dataElement, categoryOptionCombo);\n  const name = \"\".concat(baseName, \".code\");\n  const formulaName = \"\".concat(baseName, \".formula\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: styles.field,\n    label: label,\n    name: name,\n    subscription: {\n      value: true,\n      error: true,\n      invalid: true,\n      touched: true\n    }\n  }, ({\n    input,\n    meta,\n    ...rest\n  }) => {\n    const code = input.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputFieldFF, _extends({}, rest, {\n      className: styles.codeField,\n      input: input,\n      meta: meta,\n      error: !!meta.error\n    })), /*#__PURE__*/React.createElement(FieldDataElementWithCategoryOptionComboAddFormulaButton, {\n      disabled: !code,\n      baseName: baseName,\n      formulaFieldName: formulaName,\n      onClick: () => setShowFormula(true)\n    }), showFormula && /*#__PURE__*/React.createElement(FieldDataElementWithCategoryOptionComboFormula, {\n      baseName: baseName,\n      combo: label,\n      targetFieldName: formulaName,\n      onClose: () => setShowFormula(false)\n    }));\n  }));\n};\nFieldDataElementWithCategoryOptionCombo.defaultProps = {\n  categoryOptionCombo: null,\n  formula: ''\n};\nFieldDataElementWithCategoryOptionCombo.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  categoryOptionCombo: PropTypes.shape({\n    code: PropTypes.string.isRequired,\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport { PageSubHeadline } from '../headline';\nimport i18n from '../locales';\nimport styles from './DataElementTimesCategoryOptionCombos.module.css';\nimport { DataElementTimesCategoryOptionCombosCompletenessMessage } from './DataElementTimesCategoryOptionCombosCompletenessMessage';\nimport { FieldDataElementWithCategoryOptionCombo } from './FieldDataElementWithCategoryOptionCombo';\nexport const DataElementTimesCategoryOptionCombos = ({\n  DE_COC_combinations\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommandfields-dataelementtimescategoryoptioncombos')\n}, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombosCompletenessMessage, null), /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommandfields-dataelementtimescategoryoptioncombos-rows')\n}, DE_COC_combinations.map(({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  return /*#__PURE__*/React.createElement(FormRow, {\n    className: styles.formRow,\n    key: dataElement.id + (categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.id)\n  }, /*#__PURE__*/React.createElement(FieldDataElementWithCategoryOptionCombo, {\n    dataElement: dataElement,\n    categoryOptionCombo: categoryOptionCombo\n  }));\n})));\nDataElementTimesCategoryOptionCombos.defaultProps = {\n  allRequired: false\n};\nDataElementTimesCategoryOptionCombos.propTypes = {\n  DE_COC_combinations: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport * as completenessMethods from './completenessMethods';\nimport { FIELD_COMMAND_COMPLETENESS_METHOD_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(completenessMethods);\nexport const FieldCommandCompletenessMethod = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommandfields-fieldcommandcompletenessmethod'),\n  name: FIELD_COMMAND_COMPLETENESS_METHOD_NAME,\n  label: i18n.t('Completeness method'),\n  component: SingleSelectFieldFF,\n  options: options\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_CONFIRM_MESSAGE_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandConfirmMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('commands-fieldcommandconfirmmessage'),\n  name: FIELD_COMMAND_CONFIRM_MESSAGE_NAME,\n  label: i18n.t('Confirm message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_DEFAULT_MESSAGE_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandDefaultMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommanddefaultmessage'),\n  name: FIELD_COMMAND_DEFAULT_MESSAGE_NAME,\n  label: i18n.t('Reply message if no codes are sent (only the command)'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandMoreThanOneOrgUnitMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandmorethanoneorgunitmessage'),\n  name: FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME,\n  label: i18n.t('More than one orgunit message'),\n  component: TextAreaFieldFF\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_NAME_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('commands-fieldcommandname'),\n  name: FIELD_COMMAND_NAME_NAME,\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_NO_USER_MESSAGE_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandNoUserMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandnousermessage'),\n  name: FIELD_COMMAND_NO_USER_MESSAGE_NAME,\n  label: i18n.t('No user message'),\n  component: TextAreaFieldFF\n});","import i18n from '../locales/index';\nexport const KEY_VALUE_PARSER = {\n  value: 'KEY_VALUE_PARSER',\n  label: i18n.t('Key value parser')\n}; // @TODO: This parser is not listed in the docs,\n//        but it's listed in the original source code\n//   -> docs: https://docs.dhis2.org/master/en/dhis2_developer_manual/web-api.html#sms-command-values\n//   -> code: https://github.com/dhis2/dhis2-core/blob/79bd77ecf52051b00e3ba96eb1aca4d0a6063ed1/dhis-2/dhis-web/dhis-web-maintenance/dhis-web-maintenance-mobile/src/main/webapp/dhis-web-maintenance-mobile/smscommand/edit-sms-command.vm#L188\n\nexport const J2ME_PARSER = {\n  value: 'J2ME_PARSER',\n  label: i18n.t('J2ME parser')\n};\nexport const ALERT_PARSER = {\n  value: 'ALERT_PARSER',\n  label: i18n.t('Alert parser')\n};\nexport const UNREGISTERED_PARSER = {\n  value: 'UNREGISTERED_PARSER',\n  label: i18n.t('Unregistered parser')\n};\nexport const TRACKED_ENTITY_REGISTRATION_PARSER = {\n  value: 'TRACKED_ENTITY_REGISTRATION_PARSER',\n  label: i18n.t('Tracked entity registration parser')\n};\nexport const PROGRAM_STAGE_DATAENTRY_PARSER = {\n  value: 'PROGRAM_STAGE_DATAENTRY_PARSER',\n  label: i18n.t('Program stage data entry parser')\n};\nexport const EVENT_REGISTRATION_PARSER = {\n  value: 'EVENT_REGISTRATION_PARSER',\n  label: i18n.t('Event registration parser')\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_PARSER_NAME } from './fieldNames';\nimport * as commandTypes from './parserTypes';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(commandTypes).sort((a, b) => {\n  if (a.label < b.label) {\n    return -1;\n  }\n\n  if (a.label > b.label) {\n    return 1;\n  }\n\n  return 0;\n});\nexport const FieldCommandParser = ({\n  disabled\n}) => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  disabled: disabled,\n  dataTest: dataTest('forms-fieldcommandparser'),\n  name: FIELD_COMMAND_PARSER_NAME,\n  label: i18n.t('Parser'),\n  component: SingleSelectFieldFF,\n  options: options,\n  validate: hasValue\n});\nFieldCommandParser.defaultProps = {\n  disabled: false\n};\nFieldCommandParser.propTypes = {\n  disabled: PropTypes.bool\n};","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_SEPARATOR_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandSeparator = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandseparator'),\n  name: FIELD_COMMAND_SEPARATOR_NAME,\n  label: i18n.t('Field separator'),\n  component: InputFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { FIELD_COMMAND_SMS_CODES_NAME } from './fieldNames';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  values: true\n};\nexport const FieldCommandSmsCode = ({\n  id,\n  displayName,\n  valueType\n}) => {\n  const {\n    values\n  } = useFormState({\n    subscription\n  });\n  const smsCode = values[FIELD_COMMAND_SMS_CODES_NAME][id];\n  /**\n   * This uses a dynamic, nested name for storing the field value in the\n   * form state. You can't submit the data as is though, since the backend\n   * expects a different shape. So I was thinking of dealing with that\n   * in the submit handler. Since you have the ids and the field value\n   * you should be able to transform it into any shape you need.\n   */\n\n  return /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    name: \"\".concat(FIELD_COMMAND_SMS_CODES_NAME, \".\").concat(id),\n    label: displayName,\n    component: InputFieldFF,\n    format: code => (code === null || code === void 0 ? void 0 : code.code) || '',\n    parse: nextCode => !smsCode ? {\n      code: nextCode,\n      trackedEntityAttribute: {\n        id,\n        displayName,\n        valueType\n      }\n    } : { ...smsCode,\n      code: nextCode\n    }\n  });\n};\nFieldCommandSmsCode.propTypes = {\n  displayName: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  valueType: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, Field as UiField, InputFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport styles from './FieldCommandSpecialCharacter.module.css';\nimport { FIELD_COMMAND_SPECIAL_CHARS_NAME } from './fieldNames';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nexport const FieldCommandSpecialCharacter = ({\n  index,\n  onSpecialKeyRemoved\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeSpecialKeyFieldsFromFormState = () => {\n    const specialChars = getState().values[FIELD_COMMAND_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars.slice(0, index), ...specialChars.slice(index + 1)];\n    change(FIELD_COMMAND_SPECIAL_CHARS_NAME, newSpecialChars);\n    onSpecialKeyRemoved();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('@TODO'),\n    label: i18n.t('Special character name'),\n    name: \"\".concat(FIELD_COMMAND_SPECIAL_CHARS_NAME, \"[\").concat(index, \"].name\"),\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('@TODO'),\n    label: i18n.t('Special character value'),\n    name: \"\".concat(FIELD_COMMAND_SPECIAL_CHARS_NAME, \"[\").concat(index, \"].value\"),\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(UiField, {\n    label: \"\\xA0\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: removeSpecialKeyFieldsFromFormState\n  }, i18n.t('Remove'))));\n};\nFieldCommandSpecialCharacter.propTypes = {\n  index: PropTypes.number.isRequired,\n  onSpecialKeyRemoved: PropTypes.func.isRequired\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_SUCCESS_MESSAGE_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandSuccessMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandsuccessmessage'),\n  name: FIELD_COMMAND_SUCCESS_MESSAGE_NAME,\n  label: i18n.t('Success message'),\n  component: TextAreaFieldFF\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandUseCurrentPeriodForReporting = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smscommandfields-fieldcommandusecurrentperiodforreporting'),\n  name: FIELD_COMMAND_USE_CURRENT_PERIOD_FOR_REPORTING_NAME,\n  label: i18n.t('Use current period for reporting'),\n  component: CheckboxFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nimport { FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCommandWrongFormatMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandwrongformatmessage'),\n  name: FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME,\n  label: i18n.t('Wrong format message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FIELD_COMMAND_SMS_CODES_NAME } from './fieldNames';\nconst {\n  Field\n} = ReactFinalForm;\nexport const ProgramStageDataElements = ({\n  programStageDataElements,\n  smsCodes\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, programStageDataElements.map(({\n    dataElement\n  }) => /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smscommandfields-programstagedataelements-row'),\n    key: dataElement.id,\n    name: \"\".concat(FIELD_COMMAND_SMS_CODES_NAME, \".\").concat(dataElement.id),\n    label: dataElement.displayName,\n    component: InputFieldFF,\n    format: value => (value === null || value === void 0 ? void 0 : value.code) || null,\n    parse: code => {\n      const currentValue = smsCodes[dataElement.id];\n      const newValue = { ...currentValue,\n        code: code || '',\n        dataElement\n      };\n      return newValue;\n    }\n  })));\n};\nProgramStageDataElements.propTypes = {\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  smsCodes: PropTypes.objectOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    code: PropTypes.string,\n    compulsory: PropTypes.bool,\n    optionId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }))\n};","import { FIELD_COMMAND_SMS_CODES_NAME } from '../smsCommandFields';\nexport const DE_COC_toFormName = (dataElement, categoryOptionCombo) => {\n  const dataElementId = dataElement.id;\n  const cocCode = categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.code;\n  const isDefault = cocCode === 'default';\n\n  if (!cocCode || isDefault) {\n    return \"\".concat(FIELD_COMMAND_SMS_CODES_NAME, \".\").concat(dataElementId);\n  }\n\n  return \"\".concat(FIELD_COMMAND_SMS_CODES_NAME, \".\").concat(dataElementId, \"-\").concat(cocCode);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nexport const DeleteCommandsConfirmationDialog = ({\n  onCancelClick,\n  onDeleteClick\n}) => {\n  return /*#__PURE__*/React.createElement(Modal, {\n    dataTest: dataTest('commands-deleteconfirmationdialog')\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Confirm deletion')), /*#__PURE__*/React.createElement(ModalContent, null, i18n.t('Are you sure you want to delete the selected commands?')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onCancelClick,\n    dataTest: dataTest('commands-deleteconfirmationdialog-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onDeleteClick,\n    dataTest: dataTest('commands-deleteconfirmationdialog-confirm')\n  }, i18n.t('Delete')))));\n};\nDeleteCommandsConfirmationDialog.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};","/**\n * @param {string} parserType\n * @param {Object} parser\n * @param {string} parser.value\n * @returns {bool}\n */\nexport const isParserType = (parserType, parser) => parserType === parser.value;","import { useDataMutation } from '@dhis2/app-runtime';\nimport { ALERT_PARSER, EVENT_REGISTRATION_PARSER, J2ME_PARSER, KEY_VALUE_PARSER, PROGRAM_STAGE_DATAENTRY_PARSER, TRACKED_ENTITY_REGISTRATION_PARSER, UNREGISTERED_PARSER } from '../smsCommandFields';\nexport const CREATE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'create',\n\n  /*\n   * @param {Object} args\n   * @param {string} args.parserType\n   * @param {string} args.name\n   * @param {string} args.dataset (id)\n   * @param {string} args.userGroup (id)\n   * @param {string} args.program (id)\n   * @param {string} args.programStage (id)\n   * @returns {Object}\n   */\n  data: ({\n    parserType,\n    name,\n    dataset,\n    userGroup,\n    program,\n    programStage\n  }) => {\n    if (parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value) {\n      return {\n        parserType,\n        name,\n        dataset\n      };\n    }\n\n    if (parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value) {\n      return {\n        parserType,\n        name,\n        userGroup: {\n          id: userGroup\n        }\n      };\n    }\n\n    if (parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program\n      };\n    }\n\n    if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program,\n        programStage\n      };\n    }\n\n    throw new Error(\"You provided an unrecognized parserType \\\"\".concat(parserType, \"\\\"\"));\n  }\n};\nexport const useCreateSmsCommandMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(CREATE_SMS_COMMAND_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_SMS_COMMAND_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteSmsCommandMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_PARSER_TYPE_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: 'parserType',\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandParserTypeQuery = id => useDataQuery(READ_SMS_COMMAND_PARSER_TYPE_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataQuery } from '@dhis2/app-runtime';\nexport const SMS_COMMANDS_QUERY = {\n  smsCommands: {\n    resource: 'smsCommands',\n    pager: false,\n    params: ({\n      ids\n    } = {}) => ({\n      // @TODO: Why is `paging: false` not working?\n      paging: 'false',\n      fields: '*',\n      filter: ids ? \"ids:in:[\".concat(ids.join(','), \"]\") : undefined\n    })\n  }\n};\nexport const useReadSmsCommandsQuery = () => useDataQuery(SMS_COMMANDS_QUERY);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { FinalForm } from '@dhis2/ui';\nimport { useContext } from 'react';\nimport i18n from '../locales';\nimport { AlertContext } from '../notifications';\nconst {\n  FORM_ERROR\n} = FinalForm;\n\nconst identity = input => input;\n\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => params\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommand = ({\n  onAfterChange,\n  commandId,\n  formatCommand = identity,\n  replace = false\n}) => {\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const engine = useDataEngine();\n  return variables => {\n    const allVariables = {\n      variables: { ...formatCommand(variables),\n        commandId\n      }\n    };\n    const mutation = replace ? UPDATE_SMS_COMMAND_MUTATION : REPLACE_SMS_COMMAND_MUTATION;\n    return engine.mutate(mutation, allVariables).then(onAfterChange).catch(error => {\n      const isValidationError = error.type === 'access'; // Potential validation error, return it in a format final-form can handle\n\n      if (isValidationError) {\n        const fallback = 'No error message was provided';\n        const message = error.message || i18n.t(fallback);\n        return {\n          [FORM_ERROR]: message\n        };\n      } // Notify on unexpected errors\n\n\n      addAlert({\n        type: 'critical',\n        message: error.message\n      });\n    });\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USER_GROUP_NAME = 'userGroup';\nexport const FieldUserGroup = ({\n  userGroups,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fieldusergroup'),\n  name: FIELD_USER_GROUP_NAME,\n  label: i18n.t('User group'),\n  component: SingleSelectFieldFF,\n  options: userGroups,\n  validate: required && hasValue\n});\nFieldUserGroup.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldUserGroup.propTypes = {\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const USER_GROUPS_QUERY = {\n  userGroups: {\n    resource: 'userGroups',\n    params: {\n      paging: 'false'\n    }\n  }\n};\nexport const useReadUserGroupsQuery = () => useDataQuery(USER_GROUPS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldUserGroup } from './FieldUserGroup';\nimport { useReadUserGroupsQuery } from './useReadUserGroupsQuery';\nexport const FieldUserGroupWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadUserGroupsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      userGroups: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      disabled: true,\n      userGroups: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    userGroups\n  } = data.userGroups;\n  const options = userGroups.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldUserGroup, {\n    required: required,\n    userGroups: options,\n    validate: validate\n  });\n};\nFieldUserGroupWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldUserGroupWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport i18n from '../locales';\nimport { CommandFormActions, useUpdateCommand } from '../smsCommand';\nimport { FieldCommandName, FieldCommandParser, FieldCommandConfirmMessage } from '../smsCommandFields';\nimport { FieldUserGroup } from '../userGroup';\nconst {\n  Form\n} = ReactFinalForm;\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const CommandEditAlertParserForm = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const updateCommand = useUpdateCommand({\n    commandId,\n    onAfterChange,\n    replace: true\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query, {\n    variables: {\n      commandId\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading the sms command');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  const {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  } = data.smsCommand;\n  const initialValues = {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup: userGroup.id\n  };\n  const userGroups = [{\n    value: userGroup.id,\n    label: userGroup.name\n  }];\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditalertparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n    disabled: true,\n    userGroups: userGroups\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandConfirmMessage, null)), /*#__PURE__*/React.createElement(CommandFormActions, {\n    onCancel: () => onCancel(pristine)\n  })));\n};\nCommandEditAlertParserForm.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_NAME = 'program';\nexport const FieldProgram = ({\n  programs,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  error: !!errorText,\n  validationText: errorText,\n  disabled: disabled,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fieldprogram'),\n  name: FIELD_PROGRAM_NAME,\n  label: i18n.t('Program'),\n  component: SingleSelectFieldFF,\n  options: programs,\n  validate: required && hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldProgram.defaultProps = {\n  disabled: false,\n  errorText: '',\n  loading: false,\n  required: false\n};\nFieldProgram.propTypes = {\n  programs: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAMS_WITH_REGISTRATION = 'PROGRAMS_WITH_REGISTRATION';\nexport const PROGRAMS_WITHOUT_REGISTRATION = 'PROGRAMS_WITHOUT_REGISTRATION';\nexport const ALL_PROGRAMS = 'ALL_PROGRAMS';\nexport const PROGRAMS_QUERY = {\n  programs: {\n    resource: 'programs',\n    params: ({\n      registration\n    }) => {\n      const params = {\n        paging: 'false'\n      };\n\n      if (registration === PROGRAMS_WITH_REGISTRATION) {\n        params.filter = 'programType:eq:WITH_REGISTRATION';\n      } else if (registration === PROGRAMS_WITHOUT_REGISTRATION) {\n        params.filter = 'programType:eq:WITHOUT_REGISTRATION';\n      }\n\n      return params;\n    }\n  }\n};\nexport const useReadProgramsQuery = registration => useDataQuery(PROGRAMS_QUERY, {\n  variables: {\n    registration\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { FIELD_PROGRAM_NAME, FieldProgram } from './FieldProgram';\nimport { ALL_PROGRAMS, useReadProgramsQuery } from './useReadProgramsQuery';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const FieldProgramWithAutoLoad = ({\n  required,\n  registration\n}) => {\n  const form = useForm();\n  const validate = required ? hasValue : undefined;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramsQuery({\n    lazy: true\n  });\n  useEffect(() => {\n    const variables = {\n      registration\n    };\n    form.change(FIELD_PROGRAM_NAME, null);\n    refetch(variables);\n  }, [registration]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      programs: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    programs\n  } = data.programs;\n  const options = programs.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgram, {\n    required: required,\n    programs: options,\n    validate: validate\n  });\n};\nFieldProgramWithAutoLoad.defaultProps = {\n  required: false,\n  registration: ALL_PROGRAMS\n};\nFieldProgramWithAutoLoad.propTypes = {\n  registration: PropTypes.string,\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport i18n from '../locales';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_STAGE_NAME = 'programStage';\nexport const FieldProgramStage = ({\n  programStages,\n  disabled,\n  loading,\n  initialValue,\n  required,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  component: SingleSelectFieldFF,\n  dataTest: dataTest('forms-fieldprogramstage'),\n  disabled: disabled,\n  error: !!errorText,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  iinitialValue: initialValue,\n  label: i18n.t('Program stage'),\n  loading: loading,\n  name: FIELD_PROGRAM_STAGE_NAME,\n  options: programStages,\n  parse: id => ({\n    id\n  }),\n  required: required,\n  validate: required && hasValue,\n  validationText: errorText\n});\nFieldProgramStage.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldProgramStage.propTypes = {\n  programStages: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  initialValue: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAM_STAGES_QUERY = {\n  programStages: {\n    resource: 'programStages',\n    params: ({\n      programId\n    }) => ({\n      paging: 'false',\n      filter: programId ? \"program.id:eq:\".concat(programId) : undefined\n    })\n  }\n};\nexport const useReadProgramStagesQuery = ({\n  programId,\n  lazy\n}) => useDataQuery(PROGRAM_STAGES_QUERY, {\n  variables: {\n    programId\n  },\n  lazy\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { EVENT_REGISTRATION_PARSER } from '../smsCommandFields';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStage } from './FieldProgramStage';\nimport { useReadProgramStagesQuery } from './useReadProgramStagesQuery';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const FieldProgramStageWithLoadingStates = ({\n  parserType,\n  programId,\n  disabled,\n  required\n}) => {\n  var _data$programStages2, _data$programStages3;\n\n  const form = useForm();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramStagesQuery({\n    lazy: true\n  });\n  const validate = required ? hasValue : undefined;\n  useEffect(() => {\n    if (programId) refetch({\n      programId\n    });\n  }, [programId]);\n  useEffect(() => {\n    var _data$programStages, _data$programStages$p;\n\n    const isEventRegistrationParser = parserType === EVENT_REGISTRATION_PARSER.value;\n    const programStageValueForEventRegistration = {\n      id: data === null || data === void 0 ? void 0 : (_data$programStages = data.programStages) === null || _data$programStages === void 0 ? void 0 : (_data$programStages$p = _data$programStages.programStages[0]) === null || _data$programStages$p === void 0 ? void 0 : _data$programStages$p.id\n    };\n    const initialValue = isEventRegistrationParser ? programStageValueForEventRegistration : undefined;\n    form.change(FIELD_PROGRAM_STAGE_NAME, initialValue);\n  }, [parserType, data === null || data === void 0 ? void 0 : (_data$programStages2 = data.programStages) === null || _data$programStages2 === void 0 ? void 0 : _data$programStages2.programStages]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      loading: true,\n      disabled: disabled,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      errorText: error.message,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (!programId || !data) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  const programStages = (data === null || data === void 0 ? void 0 : (_data$programStages3 = data.programStages) === null || _data$programStages3 === void 0 ? void 0 : _data$programStages3.programStages) || [];\n  const options = programStages.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: disabled,\n    required: required,\n    programStages: options\n  });\n};\nFieldProgramStageWithLoadingStates.defaultProps = {\n  disabled: false,\n  required: false\n};\nFieldProgramStageWithLoadingStates.propTypes = {\n  parserType: PropTypes.string.isRequired,\n  programId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[id,dataElement[id,displayName]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandEventRegistrationParserQuery = id => useDataQuery(READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY, {\n  variables: {\n    id\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport { PageSubHeadline } from '../headline';\nimport i18n from '../locales';\nimport { FieldProgram } from '../program';\nimport { FieldProgramStage } from '../programStage';\nimport { CommandFormActions, useUpdateCommand } from '../smsCommand';\nimport { EVENT_REGISTRATION_PARSER, FIELD_COMMAND_DEFAULT_MESSAGE_NAME, FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME, FIELD_COMMAND_NAME_NAME, FIELD_COMMAND_NO_USER_MESSAGE_NAME, FIELD_COMMAND_PARSER_NAME, FIELD_COMMAND_PROGAM_NAME, FIELD_COMMAND_PROGAM_STAGE_NAME, FIELD_COMMAND_SEPARATOR_NAME, FIELD_COMMAND_SMS_CODES_NAME, FIELD_COMMAND_SUCCESS_MESSAGE_NAME, FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME, FieldCommandDefaultMessage, FieldCommandMoreThanOneOrgUnitMessage, FieldCommandName, FieldCommandNoUserMessage, FieldCommandParser, FieldCommandSeparator, FieldCommandSuccessMessage, FieldCommandWrongFormatMessage, ProgramStageDataElements } from '../smsCommandFields';\nimport { useReadSmsCommandEventRegistrationParserQuery } from './useReadSmsCommandEventRegistrationParserQuery';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME_NAME];\n  const program = command[FIELD_COMMAND_PROGAM_NAME];\n  const programStage = command[FIELD_COMMAND_PROGAM_STAGE_NAME];\n  const separator = command[FIELD_COMMAND_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_COMMAND_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_COMMAND_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_COMMAND_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_COMMAND_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME_NAME]: name,\n    [FIELD_COMMAND_PARSER_NAME]: EVENT_REGISTRATION_PARSER.value,\n    [FIELD_COMMAND_PROGAM_NAME]: program,\n    [FIELD_COMMAND_PROGAM_STAGE_NAME]: programStage,\n    [FIELD_COMMAND_SEPARATOR_NAME]: separator,\n    [FIELD_COMMAND_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_COMMAND_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_COMMAND_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_COMMAND_SMS_CODES_NAME]: smsCodes\n  };\n};\n\nconst formatSmsCodes = updates => ({ ...updates,\n  [FIELD_COMMAND_SMS_CODES_NAME]: Object.values(updates[FIELD_COMMAND_SMS_CODES_NAME])\n});\n\nexport const CommandEditEventRegistrationParserForm = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    error,\n    data: {\n      smsCommand: command\n    } = {}\n  } = useReadSmsCommandEventRegistrationParserQuery(commandId);\n  const updateCommand = useUpdateCommand({\n    commandId,\n    onAfterChange,\n    formatCommand: formatSmsCodes\n  });\n\n  if (error) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  const programStageDataElements = command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    initialValues: initialValues,\n    onSubmit: updateCommand\n  }, ({\n    handleSubmit,\n    values,\n    pristine\n  }) => {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      \"data-test\": dataTest('smscommandeventregistrationparser-commandediteventregistrationparserform')\n    }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandParser, {\n      disabled: true\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n      disabled: true,\n      programs: [selectedProgramOption]\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      programStages: [selectedProgramStageOption]\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(ProgramStageDataElements, {\n      programStageDataElements: programStageDataElements,\n      smsCodes: values[FIELD_COMMAND_SMS_CODES_NAME]\n    })), /*#__PURE__*/React.createElement(CommandFormActions, {\n      onCancel: () => onCancel(pristine)\n    }));\n  });\n};\nCommandEditEventRegistrationParserForm.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'dataset[id,displayName,dataSetElements[dataElement[id,displayName,categoryCombo[categoryOptionCombos[id,displayName,code]]]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandWithDataSetQuery = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { FIELD_DATA_SET_NAME, FieldDataSet } from '../dataSet';\nimport { FormRow } from '../forms';\nimport { PageSubHeadline } from '../headline';\nimport i18n from '../locales';\nimport { CommandFormActions, getSmsCodeDuplicates, useUpdateCommand } from '../smsCommand';\nimport { ALL_DATAVALUE, CommandsAddSpecialCharacters, DataElementTimesCategoryOptionCombos, FIELD_COMMAND_COMPLETENESS_METHOD_NAME, FIELD_COMMAND_DEFAULT_MESSAGE_NAME, FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME, FIELD_COMMAND_NAME_NAME, FIELD_COMMAND_NO_USER_MESSAGE_NAME, FIELD_COMMAND_PARSER_NAME, FIELD_COMMAND_SEPARATOR_NAME, FIELD_COMMAND_SMS_CODES_NAME, FIELD_COMMAND_SPECIAL_CHARS_NAME, FIELD_COMMAND_SUCCESS_MESSAGE_NAME, FIELD_COMMAND_USE_CURRENT_PERIOD_FOR_REPORTING_NAME, FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME, FieldCommandCompletenessMethod, FieldCommandDefaultMessage, FieldCommandMoreThanOneOrgUnitMessage, FieldCommandName, FieldCommandNoUserMessage, FieldCommandParser, FieldCommandSeparator, FieldCommandSpecialCharacter, FieldCommandSuccessMessage, FieldCommandUseCurrentPeriodForReporting, FieldCommandWrongFormatMessage, KEY_VALUE_PARSER } from '../smsCommandFields';\nimport { useReadSmsCommandWithDataSetQuery } from './useReadSmsCommandWithDataSetQuery';\nconst {\n  Form,\n  FormSpy\n} = ReactFinalForm;\n\nconst getInitialFormState = (command, initialCompletenessMethod) => {\n  const name = command[FIELD_COMMAND_NAME_NAME];\n  const parserType = KEY_VALUE_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_COMMAND_SEPARATOR_NAME];\n  const completenessMethod = initialCompletenessMethod || command[FIELD_COMMAND_COMPLETENESS_METHOD_NAME] || ALL_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_COMMAND_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_COMMAND_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_COMMAND_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_COMMAND_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_COMMAND_SMS_CODES_NAME].reduce((acc, {\n    code,\n    compulsory,\n    formula,\n    optionId,\n    dataElement\n  }) => {\n    const key = optionId < 10 ? dataElement.id : \"\".concat(dataElement.id, \"-\").concat(optionId);\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_COMMAND_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME_NAME]: name,\n    [FIELD_COMMAND_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_COMMAND_SEPARATOR_NAME]: separator,\n    [FIELD_COMMAND_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_COMMAND_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_COMMAND_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_COMMAND_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_COMMAND_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};\n\nconst globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_COMMAND_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_COMMAND_SMS_CODES_NAME] = errors[FIELD_COMMAND_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_COMMAND_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};\n\nconst formatSmsCodes = updates => {\n  const smsCodes = updates[FIELD_COMMAND_SMS_CODES_NAME];\n  const formattedSmsCodes = Object.entries(smsCodes).map(([id, {\n    code,\n    formula,\n    compulsory,\n    optionId\n  }]) => {\n    const [dataElementId] = id.split('-');\n    const formattedSmsCode = {\n      code,\n      compulsory,\n      dataElement: {\n        id: dataElementId\n      }\n    };\n\n    if (formula) {\n      formattedSmsCode.formula = formula;\n    }\n\n    if (optionId) {\n      formattedSmsCode.optionId = optionId;\n    }\n\n    return formattedSmsCode;\n  });\n  return { ...updates,\n    [FIELD_COMMAND_SMS_CODES_NAME]: formattedSmsCodes\n  };\n};\n\nconst FormComponent = ({\n  DE_COC_combination_data,\n  dataTest,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_COMMAND_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldCommandSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(CommandsAddSpecialCharacters, null), /*#__PURE__*/React.createElement(CommandFormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\n\nFormComponent.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};\nexport const CommandEditWithDataSetForm = ({\n  commandId,\n  onAfterChange,\n  dataTest,\n  initialCompletenessMethod,\n  onCancel\n}) => {\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useReadSmsCommandWithDataSetQuery(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommand({\n    commandId,\n    onAfterChange,\n    formatCommand: formatSmsCodes\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command, initialCompletenessMethod);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombo;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_COMMAND_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars === null || specialChars === void 0 ? void 0 : specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dataTest: dataTest,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nCommandEditWithDataSetForm.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  dataTest: PropTypes.string,\n  initialCompletenessMethod: PropTypes.string\n};","export const getSmsCodeDuplicates = smsCodes => {\n  const duplicates = smsCodes.reduce((curDuplicates, smsCode, index) => {\n    const [name, code] = smsCode;\n    const errorAlreadyPresent = curDuplicates.includes(name);\n\n    if (errorAlreadyPresent) {\n      return curDuplicates;\n    }\n\n    const potentialDuplicates = smsCodes.filter( // eslint-disable-next-line no-unused-vars\n    ([_, curCode], curIndex) => {\n      return curCode.code === code.code && curIndex !== index;\n    });\n    const noDuplicates = !potentialDuplicates.length;\n\n    if (noDuplicates) {\n      return curDuplicates;\n    }\n\n    const newlyFoundDuplicates = potentialDuplicates.reduce((curWithCodeDuplicates, [curName]) => {\n      return [...curWithCodeDuplicates, curName];\n    }, [name]);\n    return [...curDuplicates, ...newlyFoundDuplicates];\n  }, []);\n  return duplicates;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { AT_LEAST_ONE_DATAVALUE } from '../smsCommandFields';\nimport { CommandEditWithDataSetForm } from '../smsCommandWithDataSet';\nexport const CommandEditJ2MEParserForm = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => /*#__PURE__*/React.createElement(CommandEditWithDataSetForm, {\n  dataTest: dataTest('smscommandkeyvalueparser-commandeditj2meparserform'),\n  commandId: commandId,\n  onAfterChange: onAfterChange,\n  onCancel: onCancel,\n  initialCompletenessMethod: AT_LEAST_ONE_DATAVALUE.value\n});\nCommandEditJ2MEParserForm.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { CommandEditWithDataSetForm } from '../smsCommandWithDataSet';\nexport const CommandEditKeyValueParserForm = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => /*#__PURE__*/React.createElement(CommandEditWithDataSetForm, {\n  dataTest: dataTest('smscommandkeyvalueparser-commandeditkeyvalueparserform'),\n  commandId: commandId,\n  onAfterChange: onAfterChange,\n  onCancel: onCancel\n});\nCommandEditKeyValueParserForm.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[dataElement[id,displayName]]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandProgramStageDataEntryParserQuery = programStageId => useDataQuery(READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY, {\n  variables: {\n    id: programStageId\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport { PageSubHeadline } from '../headline';\nimport i18n from '../locales';\nimport { FieldProgram } from '../program';\nimport { FieldProgramStage } from '../programStage';\nimport { CommandFormActions, useUpdateCommand } from '../smsCommand';\nimport { FIELD_COMMAND_DEFAULT_MESSAGE_NAME, FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME, FIELD_COMMAND_NAME_NAME, FIELD_COMMAND_NO_USER_MESSAGE_NAME, FIELD_COMMAND_PARSER_NAME, FIELD_COMMAND_PROGAM_NAME, FIELD_COMMAND_PROGAM_STAGE_NAME, FIELD_COMMAND_SEPARATOR_NAME, FIELD_COMMAND_SMS_CODES_NAME, FIELD_COMMAND_SUCCESS_MESSAGE_NAME, FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME, FieldCommandDefaultMessage, FieldCommandMoreThanOneOrgUnitMessage, FieldCommandName, FieldCommandNoUserMessage, FieldCommandParser, FieldCommandSeparator, FieldCommandSuccessMessage, FieldCommandWrongFormatMessage, PROGRAM_STAGE_DATAENTRY_PARSER, ProgramStageDataElements } from '../smsCommandFields';\nimport { useReadSmsCommandProgramStageDataEntryParserQuery } from './useReadSmsCommandProgramStageDataEntryParserQuery';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME_NAME];\n  const program = command[FIELD_COMMAND_PROGAM_NAME];\n  const programStage = command[FIELD_COMMAND_PROGAM_STAGE_NAME];\n  const separator = command[FIELD_COMMAND_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_COMMAND_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_COMMAND_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_COMMAND_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_COMMAND_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME_NAME]: name,\n    [FIELD_COMMAND_PARSER_NAME]: PROGRAM_STAGE_DATAENTRY_PARSER.value,\n    [FIELD_COMMAND_PROGAM_NAME]: program,\n    [FIELD_COMMAND_PROGAM_STAGE_NAME]: programStage,\n    [FIELD_COMMAND_SEPARATOR_NAME]: separator,\n    [FIELD_COMMAND_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_COMMAND_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_COMMAND_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_COMMAND_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_COMMAND_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_COMMAND_SMS_CODES_NAME]: smsCodes\n  };\n};\n\nconst formatSmsCodes = updates => ({ ...updates,\n  [FIELD_COMMAND_SMS_CODES_NAME]: Object.values(updates[FIELD_COMMAND_SMS_CODES_NAME])\n});\n\nexport const CommandEditProgramStageDataEntryParserForm = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useReadSmsCommandProgramStageDataEntryParserQuery(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const programStageDataElements = command === null || command === void 0 ? void 0 : command.programStage.programStageDataElements;\n  const updateCommand = useUpdateCommand({\n    commandId,\n    onAfterChange,\n    formatCommand: formatSmsCodes\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const initialValues = getInitialFormState(command);\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    values,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditprogramstagedataentryparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(ProgramStageDataElements, {\n    programStageDataElements: programStageDataElements,\n    smsCodes: values[FIELD_COMMAND_SMS_CODES_NAME]\n  })), /*#__PURE__*/React.createElement(CommandFormActions, {\n    onCancel: () => onCancel(pristine)\n  })));\n};\nCommandEditProgramStageDataEntryParserForm.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { FormRow } from '../forms';\nimport { PageSubHeadline } from '../headline';\nimport i18n from '../locales';\nimport { FieldProgram } from '../program';\nimport { CommandFormActions, useUpdateCommand } from '../smsCommand';\nimport { FIELD_COMMAND_SMS_CODES_NAME, FieldCommandName, FieldCommandSeparator, FieldCommandParser, FieldCommandDefaultMessage, FieldCommandWrongFormatMessage, FieldCommandNoUserMessage, FieldCommandMoreThanOneOrgUnitMessage, FieldCommandSuccessMessage, FieldCommandSmsCode } from '../smsCommandFields';\nconst {\n  Form\n} = ReactFinalForm;\n\nconst formatSmsCodes = updates => ({ ...updates,\n  [FIELD_COMMAND_SMS_CODES_NAME]: Object.values(updates[FIELD_COMMAND_SMS_CODES_NAME])\n});\n\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'separator', 'defaultMessage', 'wrongFormatMessage', 'noUserMessage', 'moreThanOneOrgUnitMessage', 'successMessage', // The queries below should be reduced to only the data we need\n      'program[id,displayName,programTrackedEntityAttributes[trackedEntityAttribute[:all,id,displayName]]]', 'smsCodes[:all,trackedEntityAttribute[id,displayName,valueType]]']\n    }\n  }\n};\nexport const CommandEditTrackedEntityRegistrationParserForm = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const updateCommand = useUpdateCommand({\n    commandId,\n    onAfterChange,\n    formatCommand: formatSmsCodes //partial: true,\n\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query, {\n    variables: {\n      commandId\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading the sms command');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  const {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes: smsCodesOriginal\n  } = data.smsCommand;\n  const smsCodes = smsCodesOriginal.reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.trackedEntityAttribute.id]: smsCode\n  }), {});\n  const initialValues = {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes\n  };\n  const selectedProgramOption = {\n    value: program.id,\n    label: program.displayName\n  };\n  /**\n   * Create usable data for the dynamic fields\n   */\n  // The tracked entity attributes here have the right order for the fields\n\n  const trackedEntityAttributes = program.programTrackedEntityAttributes.map(({\n    trackedEntityAttribute\n  }) => trackedEntityAttribute); // Creating an array with only the data we need to render our dynamic form fields\n\n  const dynamicFields = trackedEntityAttributes.map(trackedEntityAttribute => {\n    const {\n      id,\n      displayName,\n      valueType\n    } = trackedEntityAttribute;\n    const merged = {\n      id,\n      displayName,\n      valueType\n    };\n    const smsCode = smsCodes[id];\n\n    if (smsCode) {\n      // This contains the actual value of the field\n      merged.initialValue = smsCode.code;\n    }\n\n    return merged;\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), dynamicFields.map(dynamicField => {\n    // I assume this should switch field types based on `valueType`\n    // which can be 'TEXT', 'NUMBER', etc. Currently this renders\n    // a regular input for everything.\n    return /*#__PURE__*/React.createElement(FormRow, {\n      key: dynamicField.id\n    }, /*#__PURE__*/React.createElement(FieldCommandSmsCode, {\n      id: dynamicField.id,\n      displayName: dynamicField.displayName,\n      valueType: dynamicField.valueType\n    }));\n  }), /*#__PURE__*/React.createElement(CommandFormActions, {\n    onCancel: () => onCancel(pristine)\n  })));\n};\nCommandEditTrackedEntityRegistrationParserForm.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { FormRow } from '../forms';\nimport i18n from '../locales';\nimport { CommandFormActions, useUpdateCommand } from '../smsCommand';\nimport { FieldCommandConfirmMessage, FieldCommandName, FieldCommandParser } from '../smsCommandFields';\nimport { FieldUserGroup } from '../userGroup';\nconst {\n  Form\n} = ReactFinalForm;\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const CommandEditUnregisteredParserForm = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const updateCommand = useUpdateCommand({\n    commandId,\n    onAfterChange,\n    replace: true\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useDataQuery(query, {\n    variables: {\n      commandId\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading the sms command');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  const {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  } = data.smsCommand;\n  const initialValues = {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup: userGroup.id\n  };\n  const userGroups = [{\n    value: userGroup.id,\n    label: userGroup.name\n  }];\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandunregisteredparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n    disabled: true,\n    userGroups: userGroups\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandConfirmMessage, null)), /*#__PURE__*/React.createElement(CommandFormActions, {\n    onCancel: () => onCancel(pristine)\n  })));\n};\nCommandEditUnregisteredParserForm.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { CancelDialog } from '../../cancelDialog';\nimport { dataTest } from '../../dataTest';\nimport { PageHeadline } from '../../headline';\nimport i18n from '../../locales';\nimport { isParserType, useReadSmsCommandParserTypeQuery } from '../../smsCommand';\nimport { CommandEditAlertParserForm } from '../../smsCommandAlertParser';\nimport { CommandEditEventRegistrationParserForm } from '../../smsCommandEventRegistrationParser';\nimport { ALERT_PARSER, EVENT_REGISTRATION_PARSER, J2ME_PARSER, KEY_VALUE_PARSER, PROGRAM_STAGE_DATAENTRY_PARSER, TRACKED_ENTITY_REGISTRATION_PARSER, UNREGISTERED_PARSER, FIELD_COMMAND_PARSER_NAME } from '../../smsCommandFields';\nimport { CommandEditJ2MEParserForm } from '../../smsCommandJ2MEParser';\nimport { CommandEditKeyValueParserForm } from '../../smsCommandKeyValueParser';\nimport { CommandEditProgramStageDataEntryParserForm } from '../../smsCommandProgramStageDataEntryParser';\nimport { CommandEditTrackedEntityRegistrationParserForm } from '../../smsCommandTrackedEntityRegistrationParser';\nimport { CommandEditUnregisteredParserForm } from '../../smsCommandUnregisteredParser';\nimport styles from './SmsCommandFormEdit.module.css';\nimport { SMS_COMMAND_LIST_PATH } from './SmsCommandList';\nexport const SMS_COMMAND_FORM_EDIT_PATH_STATIC = '/sms-config/edit';\nexport const SMS_COMMAND_FORM_EDIT_PATH = \"\".concat(SMS_COMMAND_FORM_EDIT_PATH_STATIC, \"/:id\");\n\nconst getSmsCommandEditFormComponent = parserType => {\n  const isParser = isParserType.bind(null, parserType);\n\n  if (parserType && isParser(KEY_VALUE_PARSER)) {\n    return CommandEditKeyValueParserForm;\n  }\n\n  if (parserType && isParser(J2ME_PARSER)) {\n    return CommandEditJ2MEParserForm;\n  }\n\n  if (parserType && isParser(ALERT_PARSER)) {\n    return CommandEditAlertParserForm;\n  }\n\n  if (parserType && isParser(PROGRAM_STAGE_DATAENTRY_PARSER)) {\n    return CommandEditProgramStageDataEntryParserForm;\n  }\n\n  if (parserType && isParser(UNREGISTERED_PARSER)) {\n    return CommandEditUnregisteredParserForm;\n  }\n\n  if (parserType && isParser(EVENT_REGISTRATION_PARSER)) {\n    return CommandEditEventRegistrationParserForm;\n  }\n\n  if (parserType && isParser(TRACKED_ENTITY_REGISTRATION_PARSER)) {\n    return CommandEditTrackedEntityRegistrationParserForm;\n  }\n\n  return null;\n};\n\nexport const SmsCommandFormEdit = () => {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useReadSmsCommandParserTypeQuery(id);\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n\n  const onAfterChange = () => history.push(SMS_COMMAND_LIST_PATH);\n\n  const onCancel = pristine => pristine ? history.goBack() : setShowCancelDialog(true);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading commands');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  const parserType = data === null || data === void 0 ? void 0 : data.smsCommand[FIELD_COMMAND_PARSER_NAME];\n  const FormComponent = getSmsCommandEditFormComponent(parserType);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('views-smscommandformedit')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit command')), FormComponent && /*#__PURE__*/React.createElement(FormComponent, {\n    commandId: id,\n    onCancel: onCancel,\n    onAfterChange: onAfterChange\n  }), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push(SMS_COMMAND_LIST_PATH),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }), !parserType && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Unrecognised parser type')\n  }, i18n.t('Could not find the requested parser type')));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FieldDataSetWithAutoLoad } from '../../dataSet';\nimport { dataTest } from '../../dataTest';\nimport { FormRow } from '../../forms';\nimport { PageHeadline } from '../../headline';\nimport i18n from '../../locales';\nimport { ALL_PROGRAMS, FIELD_PROGRAM_NAME, PROGRAMS_WITH_REGISTRATION, PROGRAMS_WITHOUT_REGISTRATION, FieldProgramWithAutoLoad } from '../../program';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStageWithLoadingStates } from '../../programStage';\nimport { useCreateSmsCommandMutation } from '../../smsCommand';\nimport { ALERT_PARSER, EVENT_REGISTRATION_PARSER, FIELD_COMMAND_PARSER_NAME, J2ME_PARSER, KEY_VALUE_PARSER, PROGRAM_STAGE_DATAENTRY_PARSER, TRACKED_ENTITY_REGISTRATION_PARSER, UNREGISTERED_PARSER, FieldCommandName, FieldCommandParser } from '../../smsCommandFields';\nimport { FieldUserGroupWithAutoLoad } from '../../userGroup';\nimport styles from './SmsCommandFormNew.module.css';\nimport { SMS_COMMAND_LIST_PATH } from './SmsCommandList';\nconst {\n  Form,\n  useForm\n} = ReactFinalForm;\nexport const SMS_COMMAND_FORM_NEW_PATH = '/sms-config/new';\n\nconst useResetFormFields = () => {\n  const form = useForm();\n  const [prevValues, setPrevValues] = useState(form.getState().values);\n  useEffect(() => form.subscribe(({\n    values\n  }) => {\n    form.batch(() => {\n      const parserType = values[FIELD_COMMAND_PARSER_NAME];\n      const program = values[FIELD_PROGRAM_NAME];\n      const programStage = values[FIELD_PROGRAM_STAGE_NAME];\n      const prevProgram = prevValues[FIELD_PROGRAM_NAME];\n      const prevParserType = prevValues[FIELD_COMMAND_PARSER_NAME];\n      const programChanged = prevProgram && program !== prevProgram;\n      const parserTypeChanged = prevParserType && parserType !== prevParserType;\n\n      if ( // only unset program stage if one exists already\n      programStage && (programChanged || parserTypeChanged)) {\n        form.change(FIELD_PROGRAM_STAGE_NAME, null);\n      }\n    });\n    setPrevValues(values);\n  }, {\n    values: true\n  }), [prevValues]);\n}; // undefined = all, false = program.programType --> WITHOUT_REGISTRATION\n\n\nconst shouldProgramsBeWithRegistration = parserType => {\n  // EVENT_REGISTRATION uses event programs\n  if (parserType === EVENT_REGISTRATION_PARSER.value) {\n    return PROGRAMS_WITHOUT_REGISTRATION;\n  } // This is for programs of type tracker,\n  // which can have multiple program stages\n\n\n  if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value) {\n    return PROGRAMS_WITH_REGISTRATION;\n  } // Unrelated yet, but in case all program stages are need in the future\n\n\n  return ALL_PROGRAMS;\n};\n\nconst ActualForm = ({\n  handleSubmit,\n  submitting\n}) => {\n  // This is required to unset form fields that depend\n  // on the selected value of a previous field\n  useResetFormFields();\n  const history = useHistory();\n  const form = useForm();\n  const {\n    values\n  } = form.getState();\n  const parserType = values[FIELD_COMMAND_PARSER_NAME];\n  const program = values[FIELD_PROGRAM_NAME];\n  const showDataSetField = parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value;\n  const showUserGroupField = parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value;\n  const showProgramField = parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value;\n  const showProgramStageField = parserType === EVENT_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value;\n  const registration = shouldProgramsBeWithRegistration(parserType);\n  const disableProgramStage = parserType === EVENT_REGISTRATION_PARSER.value;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add command')), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandParser, null)), showDataSetField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSetWithAutoLoad, {\n    required: true\n  })), showUserGroupField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroupWithAutoLoad, {\n    required: true\n  })), showProgramField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramWithAutoLoad, {\n    required: true,\n    registration: registration\n  })), showProgramStageField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageWithLoadingStates, {\n    disabled: disableProgramStage,\n    required: true,\n    programId: (program === null || program === void 0 ? void 0 : program.id) || '',\n    parserType: parserType,\n    helpText: disableProgramStage ? i18n.t('Automatically selected by selecting a program') : undefined\n  })), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting\n  }, i18n.t('Add command')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.goBack()\n  }, i18n.t('Cancel')))));\n};\n\nActualForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\nexport const SmsCommandFormNew = () => {\n  const history = useHistory();\n  const [createSmsCommand] = useCreateSmsCommandMutation({\n    onComplete: () => history.push(SMS_COMMAND_LIST_PATH)\n  });\n\n  const onSubmit = values => createSmsCommand(values);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandformnew')\n  }, /*#__PURE__*/React.createElement(Form, {\n    destroyOnUnregister: true,\n    onSubmit: onSubmit\n  }, ({\n    handleSubmit,\n    submitting\n  }) => /*#__PURE__*/React.createElement(ActualForm, {\n    handleSubmit: handleSubmit,\n    submitting: submitting\n  })));\n};","import { Button, Checkbox, Table, TableHead, TableBody, TableRow, TableRowHead, TableCell, TableCellHead, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ListActions } from '../../dataList';\nimport { dataTest } from '../../dataTest';\nimport { PageHeadline } from '../../headline';\nimport i18n from '../../locales';\nimport { DeleteCommandsConfirmationDialog, getLabelByParserTypes, useDeleteSmsCommandMutation, useReadSmsCommandsQuery } from '../../smsCommand';\nimport { Paragraph } from '../../text';\nimport { SMS_COMMAND_FORM_EDIT_PATH_STATIC } from './SmsCommandFormEdit';\nimport { SMS_COMMAND_FORM_NEW_PATH } from './SmsCommandFormNew';\nimport styles from './SmsCommandList.module.css';\nexport const SMS_COMMAND_LIST_LABEL = i18n.t('Commands');\nexport const SMS_COMMAND_LIST_PATH = '/sms-config';\nexport const SmsCommandList = () => {\n  var _data$smsCommands2, _data$smsCommands2$sm, _data$smsCommands3, _data$smsCommands3$sm, _data$smsCommands4, _data$smsCommands4$sm;\n\n  const history = useHistory();\n\n  const onAddCommandClick = () => history.push(SMS_COMMAND_FORM_NEW_PATH);\n\n  const [checkedSmsCommands, setCheckedSmsCommands] = useState([]);\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const {\n    loading: loadingReadSmsCommands,\n    error: errorReadSmsCommands,\n    data,\n    refetch\n  } = useReadSmsCommandsQuery();\n  const [deleteSmsCommands, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteSmsCommandMutation();\n\n  if (loadingReadSmsCommands) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = errorReadSmsCommands || errorDelete;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const onToggleCallChange = () => {\n    var _data$smsCommands;\n\n    const smsCommands = data === null || data === void 0 ? void 0 : (_data$smsCommands = data.smsCommands) === null || _data$smsCommands === void 0 ? void 0 : _data$smsCommands.smsCommands;\n\n    if (!smsCommands) {\n      return;\n    }\n\n    if (checkedSmsCommands.length === smsCommands.length) {\n      setCheckedSmsCommands([]);\n    } else {\n      setCheckedSmsCommands(smsCommands.map(({\n        id,\n        displayName\n      }) => ({\n        id,\n        displayName\n      })));\n    }\n  };\n\n  const toggleSmsCommand = smsCommand => {\n    const {\n      id\n    } = smsCommand;\n\n    if (checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId)) {\n      const index = checkedSmsCommands.findIndex(({\n        id: checkedId\n      }) => id === checkedId);\n      return setCheckedSmsCommands([...checkedSmsCommands.slice(0, index), ...checkedSmsCommands.slice(index + 1)]);\n    }\n\n    return setCheckedSmsCommands([...checkedSmsCommands, smsCommand]);\n  };\n\n  const onDeleteClick = async () => {\n    const ids = checkedSmsCommands.map(({\n      id\n    }) => id);\n    await deleteSmsCommands({\n      ids\n    });\n    setCheckedSmsCommands([]);\n    setShowDeleteConfirmationDialog(false);\n    refetch();\n  };\n\n  const allChecked = checkedSmsCommands.length === (data === null || data === void 0 ? void 0 : (_data$smsCommands2 = data.smsCommands) === null || _data$smsCommands2 === void 0 ? void 0 : (_data$smsCommands2$sm = _data$smsCommands2.smsCommands) === null || _data$smsCommands2$sm === void 0 ? void 0 : _data$smsCommands2$sm.length);\n  const hasCommands = (data === null || data === void 0 ? void 0 : (_data$smsCommands3 = data.smsCommands) === null || _data$smsCommands3 === void 0 ? void 0 : (_data$smsCommands3$sm = _data$smsCommands3.smsCommands) === null || _data$smsCommands3$sm === void 0 ? void 0 : _data$smsCommands3$sm.length) > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandlist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('SMS commands process SMS messages received by a DHIS2 instance, taking certain actions depending on the command and message content. Multiple SMS commands can be set up to process and handle data in multiple ways. Add and configure SMS commands below. Read about SMS commands in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add command'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"views-smscommandlist\",\n    onAddClick: onAddCommandClick,\n    onDeleteClick: () => setShowDeleteConfirmationDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedSmsCommands.length || loadingDelete\n  }), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteCommandsConfirmationDialog, {\n    onCancelClick: () => setShowDeleteConfirmationDialog(false),\n    onDeleteClick: onDeleteClick\n  }), /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('views-smscommandlist-commandtable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: allChecked,\n    onChange: onToggleCallChange\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Sms command')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Parser')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, hasCommands ? data === null || data === void 0 ? void 0 : (_data$smsCommands4 = data.smsCommands) === null || _data$smsCommands4 === void 0 ? void 0 : (_data$smsCommands4$sm = _data$smsCommands4.smsCommands) === null || _data$smsCommands4$sm === void 0 ? void 0 : _data$smsCommands4$sm.map(({\n    id,\n    displayName,\n    parserType\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    key: id\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: !!checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId),\n    onChange: () => toggleSmsCommand({\n      id,\n      displayName\n    })\n  })), /*#__PURE__*/React.createElement(TableCell, null, displayName), /*#__PURE__*/React.createElement(TableCell, null, getLabelByParserTypes(parserType)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.editButtonCell\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push(\"\".concat(SMS_COMMAND_FORM_EDIT_PATH_STATIC, \"/\").concat(id))\n  }, i18n.t('Edit'))))) : /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: \"4\",\n    className: styles.noResults\n  }, i18n.t('No commands to display'))))));\n};","import * as parserTypes from '../smsCommandFields';\nexport const getLabelByParserTypes = parserType => {\n  const type = Object.values(parserTypes).find(({\n    value\n  }) => value === parserType);\n  return (type === null || type === void 0 ? void 0 : type.label) || parserType;\n};","import i18n from '@dhis2/d2-i18n';\nexport const statusMap = {\n  ALL: i18n.t('All'),\n  DELIVERED: i18n.t('Delivered'),\n  ERROR: i18n.t('Error'),\n  FAILED: i18n.t('Failed'),\n  OUTBOUND: i18n.t('Outbound'),\n  PENDING: i18n.t('Pending'),\n  SCHEDULED: i18n.t('Scheduled'),\n  SENT: i18n.t('Sent')\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { SmsTable } from '../../sms_table/SmsTable';\nimport { Date, Time } from '../../time';\nimport styles from './SentSmsTable.module.css';\nimport { statusMap } from './translations';\nexport const SentSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Recipients'), i18n.t('Status'), i18n.t('Sent')],\n  rowRenderFn: message => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.message), /*#__PURE__*/React.createElement(TableCell, null, (message.recipients || []).map((recipient, index, all) => /*#__PURE__*/React.createElement(\"span\", {\n    key: recipient + index,\n    className: styles.recipient\n  }, recipient, index !== all.length - 1 && ', '))), /*#__PURE__*/React.createElement(TableCell, null, statusMap[message.status]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n    date: message.date\n  }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n    time: message.date\n  })))\n});\nSentSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport styles from './StatusFilter.module.css';\nimport { statusMap } from './translations'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/outbound/OutboundSmsStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'DELIVERED', 'ERROR', 'FAILED', 'OUTBOUND', 'PENDING', 'SCHEDULED', 'SENT'].map(status => ({\n  value: status,\n  label: statusMap[status]\n}));\nexport const StatusFilter = ({\n  status,\n  setStatus\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: \"status-filter\"\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))));\nStatusFilter.propTypes = {\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect } from 'react';\nimport { DeleteSelectedButton } from '../../delete_selected_button/DeleteSelectedButton';\nimport { PageHeadline } from '../../headline';\nimport { useQueryParams } from '../../hooks';\nimport i18n from '../../locales';\nimport styles from './SentSmsList.module.css';\nimport { SentSmsTable } from './SentSmsTable';\nimport { StatusFilter } from './StatusFilter';\nexport const SENT_SMS_LIST_LABEL = i18n.t('Sent');\nexport const SENT_SMS_LIST_PATH = '/sent';\n\nconst parseParams = ({\n  status,\n  page,\n  pageSize\n}) => {\n  const params = {\n    pageSize,\n    page,\n    fields: ['id', 'message', 'status', 'date', 'recipients'],\n    order: 'date:desc'\n  };\n\n  if (status && status !== 'ALL') {\n    params.filter = \"status:eq:\".concat(status);\n  }\n\n  return params;\n};\n\nconst query = {\n  sms: {\n    resource: 'sms/outbound',\n    params: parseParams\n  }\n};\nexport const SentSmsList = () => {\n  var _data$sms;\n\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    status\n  } = queryParams;\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n\n  const refetchAndClear = () => {\n    refetch();\n    setSelectedIds([]);\n  };\n\n  useEffect(() => {\n    refetch({\n      page,\n      pageSize,\n      status\n    });\n  }, [page, pageSize, status]);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading sent SMSes');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$sms = data.sms) === null || _data$sms === void 0 ? void 0 : _data$sms.outboundsmss) || [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(StatusFilter, {\n    status: status,\n    setStatus: setStatus\n  }), /*#__PURE__*/React.createElement(DeleteSelectedButton, {\n    selectedIds: selectedIds,\n    type: \"outbound\",\n    onComplete: refetchAndClear\n  })), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(SentSmsTable, {\n    messages: messages,\n    pager: data.sms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  }));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { dataTest } from '../dataTest';\nimport styles from './NavigationItem.module.css';\n\nconst useIsItemActive = (path, exactMatch) => {\n  const routeMatch = useRouteMatch(path);\n  if (!routeMatch) return false;\n  if (exactMatch) return routeMatch.isExact;\n  return true;\n};\n\nexport const NavigationItem = ({\n  label,\n  path,\n  exactMatch\n}) => {\n  const history = useHistory();\n  const active = useIsItemActive(path, exactMatch);\n\n  const navigateToPath = () => history.push(path);\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    className: styles.item,\n    onClick: navigateToPath,\n    active: active,\n    label: label,\n    dataTest: dataTest('navigation-navigationitem')\n  });\n};\nNavigationItem.defualtProps = {\n  exactMatch: false\n};\nNavigationItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  exactMatch: PropTypes.bool\n};","import { Menu } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../dataTest';\nimport { GATEWAY_CONFIG_LIST_LABEL, GATEWAY_CONFIG_LIST_PATH, SMS_COMMAND_LIST_LABEL, SMS_COMMAND_LIST_PATH, SENT_SMS_LIST_LABEL, SENT_SMS_LIST_PATH, HOME_PATH, HOME_LABEL, RECEIVED_SMS_LIST_PATH, RECEIVED_SMS_LIST_LABEL } from '../views';\nimport { NavigationItem } from './NavigationItem';\nexport const Navigation = () => /*#__PURE__*/React.createElement(Menu, {\n  dataTest: dataTest('navigation-navigation')\n}, /*#__PURE__*/React.createElement(NavigationItem, {\n  path: HOME_PATH,\n  label: HOME_LABEL,\n  exactMatch: true\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: GATEWAY_CONFIG_LIST_PATH,\n  label: GATEWAY_CONFIG_LIST_LABEL\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: SMS_COMMAND_LIST_PATH,\n  label: SMS_COMMAND_LIST_LABEL\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: SENT_SMS_LIST_PATH,\n  label: SENT_SMS_LIST_LABEL\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: RECEIVED_SMS_LIST_PATH,\n  label: RECEIVED_SMS_LIST_LABEL\n}));","import { CssVariables } from '@dhis2/ui';\nimport React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport styles from './App.module.css';\nimport { dataTest } from './dataTest';\nimport { Navigation } from './navigation';\nimport { AlertHandler } from './notifications';\nimport { GATEWAY_CONFIG_FORM_EDIT_PATH, GATEWAY_CONFIG_FORM_NEW_PATH, GATEWAY_CONFIG_LIST_PATH, RECEIVED_SMS_LIST_PATH, SMS_COMMAND_LIST_PATH, SMS_COMMAND_FORM_EDIT_PATH, SMS_COMMAND_FORM_NEW_PATH, SENT_SMS_LIST_PATH, GatewayConfigFormEdit, GatewayConfigFormNew, GatewayConfigList, ReceivedSmsList, SmsCommandList, SmsCommandFormEdit, SmsCommandFormNew, SentSmsList, HOME_PATH, Home } from './views';\n\nconst App = () => /*#__PURE__*/React.createElement(AlertHandler, null, /*#__PURE__*/React.createElement(CssVariables, {\n  spacers: true,\n  colors: true\n}), /*#__PURE__*/React.createElement(HashRouter, null, /*#__PURE__*/React.createElement(QueryParamProvider, {\n  ReactRouterRoute: Route\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container,\n  \"data-test\": dataTest('app')\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.sidebar\n}, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(\"main\", {\n  className: styles.content\n}, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: HOME_PATH,\n  component: Home\n}),\n/* Gateway configuration */\n'', /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: GATEWAY_CONFIG_LIST_PATH,\n  component: GatewayConfigList\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: GATEWAY_CONFIG_FORM_EDIT_PATH,\n  component: GatewayConfigFormEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: GATEWAY_CONFIG_FORM_NEW_PATH,\n  component: GatewayConfigFormNew\n}),\n/* Sms command */\n'', /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: SMS_COMMAND_LIST_PATH,\n  component: SmsCommandList\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: SMS_COMMAND_FORM_EDIT_PATH,\n  component: SmsCommandFormEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: SMS_COMMAND_FORM_NEW_PATH,\n  component: SmsCommandFormNew\n}),\n/* View sent sms */\n'', /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: SENT_SMS_LIST_PATH,\n  component: SentSmsList\n}),\n/* View received sms */\n'', /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: RECEIVED_SMS_LIST_PATH,\n  component: ReceivedSmsList\n}), /*#__PURE__*/React.createElement(Redirect, {\n  from: \"*\",\n  to: HOME_PATH\n})))))));\n\nexport default App;"],"sourceRoot":""}