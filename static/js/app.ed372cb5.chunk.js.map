{"version":3,"sources":["D2App/shared/components/Date/Date.module.css","D2App/shared/components/FormRow/FormRow.module.css","D2App/shared/components/ListActions/ListActions.module.css","D2App/shared/components/Navigation/NavigationItem.module.css","D2App/shared/components/PageHeadline/PageHeadline.module.css","D2App/shared/components/PageSubHeadline/PageSubHeadline.module.css","D2App/shared/components/pagination/Pagination.module.css","D2App/shared/components/SmsTable/SmsTable.module.css","D2App/shared/components/Template/LayoutContainer.module.css","D2App/shared/components/Template/LayoutContent.module.css","D2App/shared/components/Template/LayoutSidebar.module.css","D2App/shared/components/Time/Time.module.css","D2App/sms-overview/components/HomeCard/HomeCard.module.css","D2App/sms-overview/views/Overview/Overview.module.css","D2App/sms-received/components/Filter/Filter.module.css","D2App/sms-received/components/ReceivedSmsTable/ReceivedSmsTable.module.css","D2App/sms-received/views/ReceivedSmsList/ReceivedSmsList.module.css","D2App/sms-sent/components/SentSmsTable/SentSmsTable.module.css","D2App/sms-sent/components/StatusFilter/StatusFilter.module.css","D2App/sms-sent/views/SentSmsList/SentSmsList.module.css","D2App/sms-command/components/FieldSpecialCharacter/FieldSpecialCharacter.module.css","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/AddFormulaButton.module.css","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.module.css","D2App/sms-command/components/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.module.css","D2App/sms-command/views/SmsCommandAdd/SmsCommandAdd.module.css","D2App/sms-command/views/SmsCommandEdit/SmsCommandEdit.module.css","D2App/shared/components/text/Paragraph.module.css","D2App/sms-command/views/SmsCommandList/SmsCommandList.module.css","D2App/sms-gateway/components/ActionAddKeyValuePair/ActionAddKeyValuePair.module.css","D2App/sms-gateway/components/FieldKeyValuePair/FieldKeyValuePair.module.css","D2App/sms-gateway/views/SmsGatewayAdd/SmsGatewayAdd.module.css","D2App/sms-gateway/views/SmsGatewayEdit/SmsGatewayEdit.module.css","D2App/sms-gateway/views/SmsGatewayList/GatewaysTable.module.css","D2App/sms-gateway/views/SmsGatewayList/List.module.css","D2App/sms-gateway/views/SmsGatewayList/SmsGatewayList.module.css","D2App/locales/index.js","D2App/shared/components/AlertHandler/AlertContext.js","D2App/shared/utils/dataTest/dataTest.js","D2App/shared/utils/useSubmit/useSubmit.js","D2App/shared/components/AlertHandler/AlertHandler.js","D2App/shared/components/CancelDialog/CancelDialog.js","D2App/shared/components/ContentLoading/ContentLoading.js","D2App/shared/components/ContentLoadingError/ContentLoadingError.js","D2App/shared/components/Date/Date.js","D2App/shared/components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","D2App/shared/components/FieldUserGroup/FieldUserGroup.js","D2App/shared/components/FieldUserGroup/useReadUserGroupsQuery.js","D2App/shared/components/FieldUserGroup/FieldUserGroupWithAutoLoad.js","D2App/shared/components/FormRow/FormRow.js","D2App/shared/components/ListActions/ListActions.js","D2App/shared/components/Navigation/NavigationItem.js","D2App/shared/components/Navigation/Navigation.js","D2App/shared/components/PageHeadline/PageHeadline.js","D2App/shared/components/PageSubHeadline/PageSubHeadline.js","D2App/shared/hooks/useQueryParam/useQueryParams.js","D2App/shared/components/pagination/Pagination.js","D2App/shared/components/SmsTable/SmsTable.js","D2App/shared/components/Template/LayoutContainer.js","D2App/shared/components/Template/LayoutContent.js","D2App/shared/components/Template/LayoutSidebar.js","D2App/shared/components/Template/TemplateSidebarNavContent.js","D2App/shared/components/Time/Time.js","D2App/AppWrapper.js","D2App/sms-overview/components/HomeCard/HomeCard.js","D2App/sms-overview/views/Overview/Overview.js","D2App/routes/index.js","D2App/sms-received/utils/translations/translations.js","D2App/sms-received/components/Filter/Filter.js","D2App/sms-received/components/ReceivedSmsTable/ReceivedSmsTable.js","D2App/sms-received/views/ReceivedSmsList/useDeleteMutation.js","D2App/sms-received/views/ReceivedSmsList/ReceivedSmsList.js","D2App/routes/received.js","D2App/sms-sent/utils/translations/translations.js","D2App/sms-sent/components/SentSmsTable/SentSmsTable.js","D2App/sms-sent/components/StatusFilter/StatusFilter.js","D2App/sms-sent/views/SentSmsList/useDeleteMutation.js","D2App/sms-sent/views/SentSmsList/SentSmsList.js","D2App/routes/sent.js","D2App/sms-command/components/FieldSpecialCharacter/FieldSpecialCharacter.js","D2App/sms-command/components/AddSpecialCharacters/AddSpecialCharacters.js","D2App/sms-command/components/FieldSmsCode/FieldSmsCode.js","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/AddFormulaButton.js","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/useReadDataElementsOfDataSetQuery.js","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/CurrentFormula.js","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.js","D2App/sms-command/components/FieldCompletenessMethod/completenessMethods.js","D2App/sms-command/components/FieldCompletenessMethod/FieldCompletenessMethod.js","D2App/sms-command/components/DataElementTimesCategoryOptionCombos/CompletenessMessage.js","D2App/sms-command/components/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.js","D2App/sms-command/components/FieldCommandName/FieldCommandName.js","D2App/sms-command/components/FieldConfirmMessage/FieldConfirmMessage.js","D2App/sms-command/components/FieldDataSet/FieldDataSet.js","D2App/sms-command/components/FieldDataSet/useReadDataSetsQuery.js","D2App/sms-command/components/FieldDataSet/FieldDataSetWithAutoLoad.js","D2App/sms-command/components/FieldDefaultMessage/FieldDefaultMessage.js","D2App/sms-command/components/FieldMoreThanOneOrgUnitMessage/FieldMoreThanOneOrgUnitMessage.js","D2App/sms-command/components/FieldNoUserMessage/FieldNoUserMessage.js","D2App/sms-command/components/FieldParser/parserTypes.js","D2App/sms-command/components/FieldParser/FieldParser.js","D2App/sms-command/components/FieldProgram/FieldProgram.js","D2App/sms-command/components/FieldProgram/useReadProgramsQuery.js","D2App/sms-command/components/FieldProgram/FieldProgramWithAutoLoad.js","D2App/sms-command/components/FieldProgramStage/FieldProgramStage.js","D2App/sms-command/components/FieldProgramStage/useReadProgramStagesQuery.js","D2App/sms-command/components/FieldProgramStage/FieldProgramStageWithLoadingStates.js","D2App/sms-command/components/FieldProgramStageDataElements/FieldProgramStageDataElements.js","D2App/sms-command/components/FieldSeparator/FieldSeparator.js","D2App/sms-command/components/FieldSuccessMessage/FieldSuccessMessage.js","D2App/sms-command/components/FieldUseCurrentPeriodForReporting/FieldUseCurrentPeriodForReporting.js","D2App/sms-command/components/FieldWrongFormatMessage/FieldWrongFormatMessage.js","D2App/sms-command/components/FormActions/SaveCommandButton.js","D2App/sms-command/components/FormActions/FormActions.js","D2App/sms-command/components/SubmitErrors/SubmitErrors.js","D2App/sms-command/components/FormAlertParser/useAlertDataQuery.js","D2App/sms-command/components/FormAlertParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormAlertParser/FormAlertParser.js","D2App/sms-command/components/FormAlertParser/createInitialValues.js","D2App/sms-command/components/FormAlertParser/createUserGroupOptions.js","D2App/sms-command/components/FormEventRegistrationParser/FormComponent.js","D2App/sms-command/components/FormEventRegistrationParser/getInitialFormState.js","D2App/sms-command/components/FormEventRegistrationParser/useCommandQuery.js","D2App/sms-command/components/FormEventRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormEventRegistrationParser/FormEventRegistrationParser.js","D2App/sms-command/components/FormJ2meParser/FormComponent.js","D2App/sms-command/components/FormJ2meParser/getInitialFormState.js","D2App/sms-command/utils/getSmsCodeDuplicates/getSmsCodeDuplicates.js","D2App/sms-command/components/FormJ2meParser/globalValidate.js","D2App/sms-command/components/FormJ2meParser/useCommandData.js","D2App/sms-command/components/FormJ2meParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormJ2meParser/FormJ2meParser.js","D2App/sms-command/components/FormKeyValueParser/FormComponent.js","D2App/sms-command/components/FormKeyValueParser/getInitialFormState.js","D2App/sms-command/components/FormKeyValueParser/globalValidate.js","D2App/sms-command/components/FormKeyValueParser/useCommandData.js","D2App/sms-command/components/FormKeyValueParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormKeyValueParser/FormKeyValueParser.js","D2App/sms-command/components/FormProgramStageDataEntryParser/FormComponent.js","D2App/sms-command/components/FormProgramStageDataEntryParser/getInitialFormState.js","D2App/sms-command/components/FormProgramStageDataEntryParser/useCommandData.js","D2App/sms-command/components/FormProgramStageDataEntryParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormProgramStageDataEntryParser/FormProgramStageDataEntryParser.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/FormComponent.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/useCommandData.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/FormTrackedEntityRegistrationParser.js","D2App/sms-command/components/FormUnregisteredParser/useCommandData.js","D2App/sms-command/components/FormUnregisteredParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormUnregisteredParser/FormUnregisteredParser.js","D2App/sms-command/hooks/useCreateSmsCommandMutation.js","D2App/sms-command/hooks/useDeleteSmsCommandMutation.js","D2App/sms-command/hooks/useReadSmsCommandParserTypeQuery.js","D2App/sms-command/hooks/useReadSmsCommandsQuery.js","D2App/sms-command/views/SmsCommandAdd/SmsCommandAdd.js","D2App/sms-command/views/SmsCommandEdit/SmsCommandEdit.js","D2App/shared/components/text/Paragraph.js","D2App/sms-command/views/SmsCommandList/SmsCommandList.js","D2App/routes/sms-command.js","D2App/routes/sms-command/[id].js","D2App/routes/sms-command/new.js","D2App/sms-gateway/components/ActionAddKeyValuePair/ActionAddKeyValuePair.js","D2App/sms-gateway/components/FieldAuthToken/FieldAuthToken.js","D2App/sms-gateway/components/FieldBindType/FieldBindType.js","D2App/sms-gateway/components/FieldCompressed/FieldCompressed.js","D2App/sms-gateway/components/FieldConfigurationTemplate/FieldConfigurationTemplate.js","D2App/sms-gateway/components/FieldContentType/FieldContentType.js","D2App/sms-gateway/components/FieldGatewayName/FieldGatewayName.js","D2App/sms-gateway/components/FieldHost/FieldHost.js","D2App/sms-gateway/components/FieldKeyValuePair/ValueField.js","D2App/sms-gateway/components/FieldKeyValuePair/FieldKeyValuePair.js","D2App/sms-gateway/components/FieldNumberPlanIndicator/FieldNumberPlanIndicator.js","D2App/sms-gateway/components/FieldPassword/FieldPassword.js","D2App/sms-gateway/components/FieldPasswordConfirmation/FieldPasswordConfirmation.js","D2App/sms-gateway/components/FieldPort/FieldPort.js","D2App/sms-gateway/components/FieldSendUrlParameters/FieldSendUrlParameters.js","D2App/sms-gateway/components/FieldSystemId/FieldSystemId.js","D2App/sms-gateway/components/FieldSystemType/FieldSystemType.js","D2App/sms-gateway/components/FieldTypeOfNumber/FieldTypeOfNumber.js","D2App/sms-gateway/components/FieldUrlTemplate/FieldUrlTemplate.js","D2App/sms-gateway/components/FieldUseGet/FieldUseGet.js","D2App/sms-gateway/components/FieldUsername/FieldUsername.js","D2App/sms-gateway/components/FormBulkSMS/FormBulkSMS.js","D2App/sms-gateway/components/FormClickatell/FormClickatell.js","D2App/sms-gateway/components/FormGeneric/FormGeneric.js","D2App/sms-gateway/components/FormSMPP/FromSMPP.js","D2App/sms-gateway/utils/createGenericGateWayDataFromVariables/createGenericGateWayDataFromVariables.js","D2App/sms-gateway/utils/gatewayTypes/gatewayTypes.js","D2App/sms-gateway/views/SmsGatewayAdd/useCreateBulkSMSGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayAdd/useCreateClickatellGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayAdd/useCreateGenericGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayAdd/useCreateSMPPGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayAdd/SmsGatewayAdd.js","D2App/sms-gateway/views/SmsGatewayEdit/useReadGatewayQuery.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateBulkSMSGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateClickatellGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateGenericGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateSMPPGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/SmsGatewayEdit.js","D2App/sms-gateway/views/SmsGatewayList/getTypeLabelByType.js","D2App/sms-gateway/views/SmsGatewayList/GatewaysTable.js","D2App/sms-gateway/views/SmsGatewayList/List.js","D2App/sms-gateway/views/SmsGatewayList/useDeleteGatewaysMutation.js","D2App/sms-gateway/views/SmsGatewayList/useReadGatewaysQuery.js","D2App/sms-gateway/views/SmsGatewayList/useSetDefaultGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayList/SmsGatewayList.js","D2App/routes/sms-gateway.js","D2App/routes/sms-gateway/[id].js","D2App/routes/sms-gateway/new.js","D2App/index.js","D2App/App.js"],"names":["module","exports","namespace","i18n","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","AlertContext","createContext","addAlert","Error","dataTest","name","prefix","concat","FORM_ERROR","FinalForm","useSubmit","onSubmit","useContext","args","catch","e","message","t","type","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","AlertHandler","children","alerts","setAlerts","useState","React","createElement","Provider","value","alert","timestamp","Date","now","AlertStack","map","AlertBar","CancelDialog","onConfirmCancel","onAbortCancel","Modal","ModalTitle","ModalActions","ButtonStrip","Button","onClick","primary","ContentLoading","CenteredContent","CircularLoader","ContentLoadingError","title","errorMessage","NoticeBox","error","date","formatted","moment","format","className","styles","DeleteConfirmationDialog","onCancelClick","onDeleteClick","ModalContent","secondary","Field","ReactFinalForm","FieldUserGroup","userGroups","loading","required","disabled","errorText","validationText","label","component","SingleSelectFieldFF","options","validate","hasValue","defaultProps","USER_GROUPS_QUERY","resource","params","paging","FieldUserGroupWithAutoLoad","data","useDataQuery","undefined","showLoadingStatus","id","displayName","FormRow","cx","formRow","ListActions","addLabel","deleteLabel","dataTestProp","onAddClick","disableAdd","disableDelete","container","destructive","NavigationItem","path","exactMatch","history","useHistory","active","routeMatch","useRouteMatch","isExact","useIsItemActive","MenuItem","item","push","defualtProps","Navigation","Menu","PageHeadline","headline","PageSubHeadline","subHeadline","useQueryParams","_useQueryParams","status","withDefault","StringParam","phoneNumber","page","NumberParam","pageSize","PAGE_LENGTHS","Pagination","pageCount","total","firstItem","Math","min","lastItem","availablePages","Array","from","_x","toString","setQueryParams","setPage","verticalAlign","SingleSelect","dense","selected","onChange","setPageSize","select","SingleSelectOption","summary","buttonPrevious","small","inputWidth","availablePage","buttonNext","SmsTable","messages","pager","selectedIds","setSelectedIds","columns","rowRenderFn","selectedIdSet","Set","allSelected","Table","TableHead","TableRowHead","TableCellHead","Checkbox","checked","column","TableBody","TableRow","TableCell","colSpan","String","noResults","has","toggle","delete","add","TableFoot","LayoutContainer","LayoutContent","content","LayoutSidebar","sidebar","TemplateSidebarNavContent","Time","time","AppWrapper","CssVariables","spacers","colors","HashRouter","QueryParamProvider","ReactRouterRoute","Route","HomeCard","titleText","bodyText","linkText","to","Card","s","body","linkContainer","Link","link","Overview","nsSeparator","explanation","grid","gridItem","RouteHome","translations","ALL","FAILED","INCOMING","PROCESSED","PROCESSING","SENT","UNHANDLED","STATUS_FILTER_OPTIONS","Filter","setStatus","setPhoneNumber","onReset","inputStrip","SingleSelectField","InputField","large","ReceivedSmsTable","_message$user","_message$user$userCre","Fragment","text","originator","smsstatus","user","userCredentials","username","receiveddate","DELETE_INBOUND_SMS_MUTATION","ids","RECEIVED_SMS_LIST_LABEL","query","inboundSms","fields","order","filters","filter","ReceivedSmsList","_data$inboundSms","showDeleteConfirmationDialog","setShowDeleteConfirmationDialog","queryParams","called","refetch","lazy","callback","debouncedRefetch","useDebouncedCallback","leading","useEffect","deleteSms","onComplete","onError","useDataMutation","useDeleteMutation","msg","inboundsmss","header","RouteSmsCommand","DELIVERED","ERROR","OUTBOUND","PENDING","SCHEDULED","SentSmsTable","recipients","recipient","index","all","StatusFilter","DELETE_OUTBOUND_SMS_MUTATION","SENT_SMS_LIST_LABEL","sms","SentSmsList","_data$sms","outboundsmss","useForm","FIELD_SPECIAL_CHARS_NAME","FieldSpecialCharacter","onSpecialKeyRemoved","change","getState","field","InputFieldFF","UiField","button","specialChars","values","newSpecialChars","slice","AddSpecialCharacters","useFormState","subscription","FIELD_SMS_CODES_NAME","FieldSmsCode","valueType","smsCode","code","parse","nextCode","trackedEntityAttribute","useField","DATA_ELEMENTS_QUERY","dataElement","AddFormulaButton","baseName","engine","useDataEngine","setLoading","formulaDataElementName","setFormulaDataElementName","input","formula","operator","dataElementId","variables","then","response","finally","formulaInWords","formulaInWordsLabel","dataSet","useReadDataElementsOfDataSetQuery","dataSetId","setError","setData","dataSetElements","sort","left","right","leftDisplayName","rightDisplayName","queryDataElementsOfDataSet","Form","CurrentFormula","combo","targetFieldName","onClose","form","FIELD_DATA_SET_NAME","initialFormula","initialValues","useMemo","dataElementCode","modalDataTest","onRemove","newFormula","handleSubmit","event","stopPropagation","initialValue","FieldDataElementWithCategoryOptionCombo","categoryOptionCombo","showFormula","setShowFormula","cocCode","DE_COC_toFormName","formulaName","invalid","touched","meta","rest","codeField","formulaFieldName","completenessMethods","ALL_DATAVALUE","AT_LEAST_ONE_DATAVALUE","DO_NOT_MARK_COMPLETE","FIELD_COMPLETENESS_METHOD_NAME","FieldCompletenessMethod","CompletenessMessage","completenessMethod","warning","DataElementTimesCategoryOptionCombos","DE_COC_combinations","allRequired","FIELD_COMMAND_NAME","FieldCommandName","composeValidators","string","FieldConfirmMessage","TextAreaFieldFF","FieldDataSet","dataSets","DATA_SETS_QUERY","FieldDataSetWithAutoLoad","programs","FIELD_DEFAULT_MESSAGE_NAME","FieldDefaultMessage","FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME","FieldMoreThanOneOrgUnitMessage","FIELD_NO_USER_MESSAGE_NAME","FieldNoUserMessage","parserTypes","KEY_VALUE_PARSER","J2ME_PARSER","ALERT_PARSER","UNREGISTERED_PARSER","TRACKED_ENTITY_REGISTRATION_PARSER","PROGRAM_STAGE_DATAENTRY_PARSER","EVENT_REGISTRATION_PARSER","a","b","FIELD_PARSER_NAME","FieldParser","FIELD_PROGRAM_NAME","FieldProgram","PROGRAMS_WITH_REGISTRATION","PROGRAMS_WITHOUT_REGISTRATION","ALL_PROGRAMS","PROGRAMS_QUERY","registration","FieldProgramWithAutoLoad","useReadProgramsQuery","FIELD_PROGRAM_STAGE_NAME","FieldProgramStage","programStages","iinitialValue","PROGRAM_STAGES_QUERY","programId","FieldProgramStageWithLoadingStates","parserType","_data$programStages2","_data$programStages3","useReadProgramStagesQuery","_data$programStages","_data$programStages$p","isEventRegistrationParser","programStageValueForEventRegistration","FieldProgramStageDataElements","programStageDataElements","smsCodes","FIELD_SEPARATOR_NAME","FieldSeparator","FIELD_SUCCESS_MESSAGE_NAME","FieldSuccessMessage","FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME","FieldUseCurrentPeriodForReporting","CheckboxFieldFF","FIELD_WRONG_FORMAT_MESSAGE_NAME","FieldWrongFormatMessage","submitting","pristine","SaveCommandButton","enabled","icon","FormActions","enableSubmit","onCancel","submitError","hasSubmitErrors","SubmitErrors","ALERT_DATA_QUERY","smsCommand","commandId","updateAlertParserMutation","partial","receivedMessage","userGroup","FormAlertParser","onAfterChange","useAlertDataQuery","updateCommand","mutate","useUpdateCommandMutation","createInitialValues","keepDirtyOnReinitialize","FormComponent","selectedProgramOption","selectedProgramStageOption","READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY","updateEventRegistrationParserMutation","command","program","programStage","separator","defaultMessage","wrongFormatMessage","noUserMessage","moreThanOneOrgUnitMessage","successMessage","FormEventRegistrationParser","reduce","curSmsCodes","getInitialFormState","FormSpy","DE_COC_combination_data","hasSpecialChars","selectedDataSetOption","specialKeyRemoved","setSpecialKeyRemoved","_","getSmsCodeDuplicates","curDuplicates","includes","potentialDuplicates","curCode","curIndex","newlyFoundDuplicates","curWithCodeDuplicates","curName","globalValidate","hasErrors","errors","smsCodesFormState","smsCodesWithValue","entries","duplicates","duplicateErrors","forEach","duplicate","READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY","replace","updateJ2meParserMutation","useCurrentPeriodForReporting","specialCharacters","compulsory","optionId","split","formattedSmsCode","FormJ2meParser","createDataTestValue","loadingCommandError","commandData","dataset","useCommandData","acc","curCombinations","_dataElement$category","categoryCombo","combos","COC","dirty","updateKeyValueParserMutation","FormKeyValueParser","READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY","REPLACE_SMS_COMMAND_MUTATION","FormProgramStageDataEntryParser","programStageId","dynamicFields","dynamicField","FormTrackedEntityRegistrationParser","smsCodesOriginal","programTrackedEntityAttributes","merged","UPDATE_COMMAND_MUTATION","FormUnregisteredParser","CREATE_SMS_COMMAND_MUTATION","DELETE_SMS_COMMAND_MUTATION","useDeleteSmsCommandMutation","idToMutationRequest","idToMutationRequestFactory","onDone","Promise","READ_SMS_COMMAND_PARSER_TYPE_QUERY","SMS_COMMANDS_QUERY","smsCommands","join","ActualForm","prevValues","setPrevValues","subscribe","batch","prevProgram","prevParserType","useResetFormFields","showDataSetField","showUserGroupField","showProgramField","showProgramStageField","shouldProgramsBeWithRegistration","disableProgramStage","helpText","goBack","SmsCommandAdd","createSmsCommand","useCreateSmsCommandMutation","destroyOnUnregister","isParserType","parser","SmsCommandEdit","useParams","useReadSmsCommandParserTypeQuery","showCancelDialog","setShowCancelDialog","isParser","bind","getSmsCommandEditFormComponent","Paragraph","paragraph","SMS_COMMAND_LIST_LABEL","SmsCommandList","_data$smsCommands2","_data$smsCommands2$sm","_data$smsCommands3","_data$smsCommands3$sm","_data$smsCommands4","_data$smsCommands4$sm","checkedSmsCommands","setCheckedSmsCommands","loadingReadSmsCommands","errorReadSmsCommands","deleteSmsCommands","loadingDelete","errorDelete","allChecked","hasCommands","async","_data$smsCommands","checkbox","find","checkedId","findIndex","toggleSmsCommand","getLabelByParserTypes","editButtonCell","RouteSmsCommandEdit","RouteSmsCommandNew","ActionAddKeyValuePair","parameters","encode","confidential","FieldAuthToken","FieldBindType","defaultValue","FieldCompressed","FieldConfigurationTemplate","optionApplicationJson","optionApplicationXml","optionFormUrlEncoded","optionTextPlain","FieldContentType","FieldGatewayName","FieldHost","isStringWithLengthAtLeastOne","createFieldGatewayKeyValuePairValueName","ValueField","FieldKeyValuePair","textInputs","keyInput","valueInput","checkboxGroup","removeKeyValueFromFormState","FieldNumberPlanIndicator","FIELD_PASSWORD_NAME","FIELD_PASSWORD_LABEL","FieldPassword","equalToPassword","createEqualTo","FIELD_PASSWORD_CONFIRMATION_NAME","FieldPasswordConfirmation","FieldPort","integer","FieldSendUrlParameters","FieldSystemId","FieldSystemType","FieldTypeOfNumber","FieldUrlTemplate","url","FieldUseGet","FieldUsername","FormBulkSMS","submitText","FormClickatell","FormGeneric","FormSMPP","createGenericGateWayDataFromVariables","configurationTemplate","contentType","sendUrlParameters","urlTemplate","useGet","GENERIC_FORM","BULK_SMS_FORM","CLICKATELL_FORM","SMPP_FORM","CREATE_BULK_SMS_GATEWAY_MUTATION","password","CREATE_CLICKATELL_GATEWAY_MUTATION","authToken","CREATE_GENERIC_GATEWAY_MUTATION","CREATE_SMPP_GATEWAY_MUTATION","systemId","host","systemType","numberPlanIndicator","typeOfNumber","bindType","port","compressed","SmsGatewayAdd","visibleForm","setVisibleForm","saveGenericGateway","saveGenericGatewayError","saveBulkSMSGateway","saveBulkSMSGatewayError","saveClickatellGateway","saveClickatellGatewayError","saveSMPPGateway","saveSMPPGatewayError","reject","passwordRequired","GATEWAY_QUERY","gateway","useUpdateGatewayMutation","updatedQuery","UPDATE_BULK_SMS_GATEWAY_MUTATION","UPDATE_CLICKATELL_GATEWAY_MUTATION","UPDATE_GENERIC_GATEWAY_MUTATION","UPDATE_SMPP_GATEWAY_MUTATION","SmsGatewayEdit","_data$gateway","loadError","jsonData","useReadGatewayQuery","saveError","JSON","gatewayType","getFormComponent","uid","formValues","GatewaysTable","allGatewaysChecked","checkedGateways","gateways","onGatewayToggle","onToggleAll","onMakeDefaultClick","checkboxCell","typeCell","defaultCell","isDefault","isDefaultText","makeDefaultButton","editCell","rowActions","List","setCheckedGateways","processing","processingMessage","loadingContainer","curId","newCheckedGateways","allGatewayIds","DELETE_GATEWAY_MUTATION","useDeleteGatewaysMutation","GATEWAYS_QUERY","SET_DEFAULT_GATEWAY_MUTATION","GATEWAY_CONFIG_LIST_LABEL","SmsGatewayList","_data$gateways","_data$gateways$gatewa","showDeleteDialog","setShowDeleteDialog","loadingReadGateways","errorReadGateways","refetchReadGateways","_parsedData$gateways","parsedData","useReadGatewaysQuery","deleteCheckedGateways","makeGatewayDefault","loadingSetDefault","errorSetDefault","hasGateways","info","App","Switch","exact","Home","SmsGateway","SmsGatewayNew","SmsCommand","SmsCommandNew","SentSms","ReceivedSms","Redirect"],"mappings":"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","file":"static/js/app.ed372cb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"Date_date__32PVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"FormRow_formRow__1cNWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListActions_container__19UqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavigationItem_item__1JJRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"PageHeadline_headline__2WNWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subHeadline\":\"PageSubHeadline_subHeadline__A0PKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__fuBgU\",\"verticalAlign\":\"Pagination_verticalAlign__20Arz\",\"select\":\"Pagination_select__15i-1\",\"buttonPrevious\":\"Pagination_buttonPrevious__20viW\",\"buttonNext\":\"Pagination_buttonNext__1gggb\",\"summary\":\"Pagination_summary__1jaey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noResults\":\"SmsTable_noResults__148QG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LayoutContainer_container__1Ix-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"LayoutContent_content__1c2dI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"LayoutSidebar_sidebar__1wPe0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Time_time__3_6vE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeCard_container__2_4oT\",\"title\":\"HomeCard_title__1h3-S\",\"body\":\"HomeCard_body__YIp9B\",\"linkContainer\":\"HomeCard_linkContainer__3Rb2j\",\"link\":\"HomeCard_link__3hzDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Overview_container__hL9KW\",\"explanation\":\"Overview_explanation__1q-6u\",\"grid\":\"Overview_grid__2XUeN\",\"gridItem\":\"Overview_gridItem__se8wD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__6Uy3A\",\"inputStrip\":\"Filter_inputStrip__1w8ht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"originator\":\"ReceivedSmsTable_originator__2iHzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReceivedSmsList_container__27QE0\",\"header\":\"ReceivedSmsList_header__LEQ4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipient\":\"SentSmsTable_recipient__1G9gI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatusFilter_container__3t9PY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SentSmsList_container__20Oko\",\"header\":\"SentSmsList_header__1pw0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldSpecialCharacter_container__3zcym\",\"field\":\"FieldSpecialCharacter_field__SzfMI\",\"button\":\"FieldSpecialCharacter_button__3YsNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formulaInWords\":\"AddFormulaButton_formulaInWords__2GUPT\",\"formulaInWordsLabel\":\"AddFormulaButton_formulaInWordsLabel__2CiMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldDataElementWithCategoryOptionCombo_container__329sF\",\"field\":\"FieldDataElementWithCategoryOptionCombo_field__3qsDp\",\"codeField\":\"FieldDataElementWithCategoryOptionCombo_codeField__3wm3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"DataElementTimesCategoryOptionCombos_formRow__-9rkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandAdd_container__2_-Vp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandEdit_container__CzgJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"Paragraph_paragraph__8BkVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandList_container__KFvaC\",\"editButtonCell\":\"SmsCommandList_editButtonCell__3x4lr\",\"checkbox\":\"SmsCommandList_checkbox__2b1qp\",\"noResults\":\"SmsCommandList_noResults__1WLMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ActionAddKeyValuePair_button__1uP5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldKeyValuePair_container__1s-qZ\",\"textInputs\":\"FieldKeyValuePair_textInputs__wZ6zt\",\"keyInput\":\"FieldKeyValuePair_keyInput__OXg8h\",\"valueInput\":\"FieldKeyValuePair_valueInput__Bvkak\",\"checkboxGroup\":\"FieldKeyValuePair_checkboxGroup__16tpk\",\"checkbox\":\"FieldKeyValuePair_checkbox__3Wvdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsGatewayAdd_container__S_qTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsGatewayEdit_container__pW5ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowActions\":\"GatewaysTable_rowActions__3EFWD\",\"checkboxCell\":\"GatewaysTable_checkboxCell__2WECk\",\"typeCell\":\"GatewaysTable_typeCell__2V26D\",\"editCell\":\"GatewaysTable_editCell__1kUz-\",\"defaultCell\":\"GatewaysTable_defaultCell__1FPU1\",\"makeDefaultButton\":\"GatewaysTable_makeDefaultButton__39VFH\",\"isDefaultText\":\"GatewaysTable_isDefaultText__3MHuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__1VUV6\",\"processingMessage\":\"List_processingMessage__3i4m_\",\"loadingContainer\":\"List_loadingContainer__3xaPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsGatewayList_container__2tPkX\",\"actions\":\"SmsGatewayList_actions__2fKK0\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { createContext } from 'react';\nexport const AlertContext = /*#__PURE__*/createContext({\n  addAlert: () => {\n    throw new Error('AlertContext has not been initialized yet!');\n  }\n});","const defaultPrefix = 'dhis2-smsconfiguration';\nexport const dataTest = (name, prefix = defaultPrefix) => \"\".concat(prefix, \"-\").concat(name);","import { FinalForm } from '@dhis2/ui';\nimport { useContext } from 'react';\nimport i18n from '../../../locales';\nimport { AlertContext } from '../../components';\nconst {\n  FORM_ERROR\n} = FinalForm;\nexport const useSubmit = onSubmit => {\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  return (...args) => onSubmit(...args).catch(e => {\n    const message = e.message || i18n.t('No error message was provided'); // Notify on unexpected errors\n\n    addAlert({\n      type: 'critical',\n      message: e.message\n    });\n    return {\n      [FORM_ERROR]: message\n    };\n  });\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { dataTest } from '../../utils';\nimport { AlertContext } from './AlertContext';\nexport const AlertHandler = ({\n  children\n}) => {\n  const [alerts, setAlerts] = useState([]);\n\n  const addAlert = ({\n    message,\n    type\n  }) => {\n    const alert = {\n      message,\n      type,\n      // Ensure that identical messages can be distinguished\n      timestamp: Date.now()\n    };\n    setAlerts([...alerts, alert]);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      addAlert\n    }\n  }, children, /*#__PURE__*/React.createElement(AlertStack, {\n    dataTest: dataTest('notifications-alerthandler')\n  }, alerts.map(({\n    message,\n    type,\n    timestamp\n  }) => /*#__PURE__*/React.createElement(AlertBar, _extends({\n    dataTest: dataTest('notifications-alert'),\n    key: \"\".concat(message).concat(timestamp)\n  }, {\n    [type]: true\n  }), message))));\n};\nAlertHandler.propTypes = {\n  children: PropTypes.any\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalTitle, ModalActions } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nexport const CancelDialog = ({\n  onConfirmCancel,\n  onAbortCancel\n}) => /*#__PURE__*/React.createElement(Modal, null, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Are you sure you want to cancel? Unsaved changes will be lost')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n  onClick: onAbortCancel\n}, i18n.t('No, stay on page')), /*#__PURE__*/React.createElement(Button, {\n  primary: true,\n  onClick: onConfirmCancel\n}, i18n.t('Yes, cancel')))));\nCancelDialog.propTypes = {\n  onAbortCancel: PropTypes.func.isRequired,\n  onConfirmCancel: PropTypes.func.isRequired\n};","import { CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoading = () => /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));","import { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoadingError = ({\n  title,\n  errorMessage\n}) => /*#__PURE__*/React.createElement(NoticeBox, {\n  error: true,\n  title: title\n}, errorMessage);\nContentLoadingError.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Date.module.css';\nexport const Date = ({\n  date\n}) => {\n  const momentDate = moment(date);\n  const formatted = momentDate.format('DD MMM YYYY');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.date\n  }, formatted);\n};\nDate.propTypes = {\n  date: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../utils';\nexport const DeleteConfirmationDialog = ({\n  children,\n  onCancelClick,\n  onDeleteClick\n}) => {\n  return /*#__PURE__*/React.createElement(Modal, {\n    dataTest: dataTest('deleteconfirmationdialog')\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Confirm deletion')), /*#__PURE__*/React.createElement(ModalContent, null, children), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onCancelClick,\n    dataTest: dataTest('deleteconfirmationdialog-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onDeleteClick,\n    dataTest: dataTest('deleteconfirmationdialog-confirm')\n  }, i18n.t('Delete')))));\n};\nDeleteConfirmationDialog.propTypes = {\n  children: PropTypes.any.isRequired,\n  onCancelClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USER_GROUP_NAME = 'userGroup';\nexport const FieldUserGroup = ({\n  userGroups,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fieldusergroup'),\n  name: FIELD_USER_GROUP_NAME,\n  label: i18n.t('User group'),\n  component: SingleSelectFieldFF,\n  options: userGroups,\n  validate: required && hasValue\n});\nFieldUserGroup.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldUserGroup.propTypes = {\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const USER_GROUPS_QUERY = {\n  userGroups: {\n    resource: 'userGroups',\n    params: {\n      paging: 'false'\n    }\n  }\n};\nexport const useReadUserGroupsQuery = () => useDataQuery(USER_GROUPS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldUserGroup } from './FieldUserGroup';\nimport { useReadUserGroupsQuery } from './useReadUserGroupsQuery';\nexport const FieldUserGroupWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadUserGroupsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      userGroups: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      disabled: true,\n      userGroups: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    userGroups\n  } = data.userGroups;\n  const options = userGroups.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldUserGroup, {\n    required: required,\n    userGroups: options,\n    validate: validate\n  });\n};\nFieldUserGroupWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldUserGroupWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport cx from 'classnames';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './FormRow.module.css';\nexport const FormRow = ({\n  children,\n  className\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.formRow, className),\n  \"data-test\": dataTest('forms-formrow')\n}, children);\nFormRow.propTypes = {\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ButtonStrip, Button } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './ListActions.module.css';\nexport const ListActions = ({\n  addLabel,\n  deleteLabel,\n  dataTest: dataTestProp,\n  onAddClick,\n  onDeleteClick,\n  disableAdd,\n  disableDelete\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    \"data-test\": dataTest(\"\".concat(dataTestProp, \"-actions\"))\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onAddClick,\n    disabled: disableAdd,\n    dataTest: dataTest(\"\".concat(dataTestProp, \"-add\"))\n  }, addLabel), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: onDeleteClick,\n    disabled: disableDelete,\n    dataTest: dataTest(\"\".concat(dataTestProp, \"-delete\"))\n  }, deleteLabel)));\n};\nListActions.propTypes = {\n  addLabel: PropTypes.string.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  deleteLabel: PropTypes.string.isRequired,\n  onAddClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  disableAdd: PropTypes.bool,\n  disableDelete: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { dataTest } from '../../utils';\nimport styles from './NavigationItem.module.css';\n\nconst useIsItemActive = (path, exactMatch) => {\n  const routeMatch = useRouteMatch(path);\n  if (!routeMatch) return false;\n  if (exactMatch) return routeMatch.isExact;\n  return true;\n};\n\nexport const NavigationItem = ({\n  label,\n  path,\n  exactMatch\n}) => {\n  const history = useHistory();\n  const active = useIsItemActive(path, exactMatch);\n\n  const navigateToPath = () => history.push(path);\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    className: styles.item,\n    onClick: navigateToPath,\n    active: active,\n    label: label,\n    dataTest: dataTest('navigation-navigationitem')\n  });\n};\nNavigationItem.defualtProps = {\n  exactMatch: false\n};\nNavigationItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  exactMatch: PropTypes.bool\n};","import { Menu } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../utils';\nimport { NavigationItem } from './NavigationItem';\nexport const Navigation = () => /*#__PURE__*/React.createElement(Menu, {\n  dataTest: dataTest('navigation-navigation')\n}, /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/home\",\n  label: i18n.t('Home'),\n  exactMatch: true\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-gateway\",\n  label: i18n.t('Gateway configuration')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-command\",\n  label: i18n.t('Commands')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sent\",\n  label: i18n.t('Sent')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/received\",\n  label: i18n.t('Received')\n}));","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './PageHeadline.module.css';\nexport const PageHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h1\", {\n  className: styles.headline,\n  \"data-test\": dataTest('headline-pageheadline')\n}, children);\nPageHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './PageSubHeadline.module.css';\nexport const PageSubHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h2\", {\n  className: styles.subHeadline,\n  \"data-test\": dataTest('headline-pagesubheadline')\n}, children);\nPageSubHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { useQueryParams as _useQueryParams, StringParam, NumberParam, withDefault } from 'use-query-params';\nexport const useQueryParams = () => _useQueryParams({\n  status: withDefault(StringParam, 'ALL'),\n  phoneNumber: withDefault(StringParam, ''),\n  page: withDefault(NumberParam, 1),\n  pageSize: withDefault(NumberParam, 50)\n});","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelect, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport { useQueryParams } from '../../hooks';\nimport styles from './Pagination.module.css';\nconst PAGE_LENGTHS = ['1', '2', '10', '20', '30', '40', '50', '100'];\nexport const Pagination = ({\n  page,\n  pageCount,\n  pageSize,\n  total\n}) => {\n  const firstItem = Math.min((page - 1) * pageSize + 1, total);\n  const lastItem = Math.min(firstItem + pageSize - 1, total);\n  const availablePages = Array.from({\n    length: pageCount\n  }, (_x, i) => (i + 1).toString());\n  const [, setQueryParams] = useQueryParams();\n\n  const setPage = page => {\n    setQueryParams({\n      page\n    });\n  };\n\n  const setPageSize = pageSize => {\n    setQueryParams({\n      pageSize,\n      page: 1\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, i18n.t('Show'), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    selected: pageSize.toString(),\n    onChange: ({\n      selected\n    }) => setPageSize(selected),\n    className: styles.select\n  }, PAGE_LENGTHS.map(length => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: length,\n    value: length,\n    label: length\n  }))), i18n.t('per page')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.summary\n  }, i18n.t('Viewing {{firstItem}}-{{lastItem}} of {{total}}', {\n    firstItem,\n    lastItem,\n    total\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonPrevious,\n    small: true,\n    disabled: page === 1,\n    onClick: () => setPage(page - 1)\n  }, i18n.t('Previous')), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Page')), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    inputWidth: \"600px\",\n    selected: page.toString(),\n    onChange: ({\n      selected\n    }) => setPage(selected),\n    className: styles.select\n  }, availablePages.map(availablePage => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: availablePage,\n    value: availablePage,\n    label: availablePage\n  }))), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('of {{pageCount}}', {\n    pageCount\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonNext,\n    small: true,\n    disabled: page === pageCount,\n    onClick: () => setPage(page + 1)\n  }, i18n.t('Next'))));\n};\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Checkbox, Table, TableBody, TableCell, TableCellHead, TableFoot, TableHead, TableRow, TableRowHead } from '@dhis2/ui';\nimport React from 'react';\nimport { Pagination } from '../pagination/Pagination';\nimport styles from './SmsTable.module.css';\nexport const SmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds,\n  columns,\n  rowRenderFn\n}) => {\n  const selectedIdSet = new Set(selectedIds);\n  const allSelected = messages.length > 0 && selectedIds.length === messages.length;\n\n  const toggle = id => {\n    if (selectedIdSet.has(id)) {\n      selectedIdSet.delete(id);\n    } else {\n      selectedIdSet.add(id);\n    }\n\n    setSelectedIds(Array.from(selectedIdSet));\n  };\n\n  const toggleAll = () => {\n    if (allSelected) {\n      setSelectedIds([]);\n    } else {\n      setSelectedIds(messages.map(({\n        id\n      }) => id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    disabled: messages.length === 0,\n    onChange: toggleAll,\n    checked: allSelected\n  })), columns.map(column => /*#__PURE__*/React.createElement(TableCellHead, {\n    key: column\n  }, column)))), /*#__PURE__*/React.createElement(TableBody, null, messages.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length),\n    className: styles.noResults\n  }, i18n.t('No SMSes to display'))) : messages.map(message => /*#__PURE__*/React.createElement(TableRow, {\n    key: message.id\n  }, /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedIdSet.has(message.id),\n    onChange: () => toggle(message.id)\n  })), rowRenderFn(message)))), /*#__PURE__*/React.createElement(TableFoot, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length)\n  }, /*#__PURE__*/React.createElement(Pagination, pager)))));\n};\nSmsTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  rowRenderFn: PropTypes.func.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './LayoutContainer.module.css';\nexport const LayoutContainer = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container,\n  \"data-test\": dataTest('app')\n}, children);\nLayoutContainer.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutContent.module.css';\nexport const LayoutContent = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"main\", {\n  className: styles.content\n}, children);\nLayoutContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutSidebar.module.css';\nexport const LayoutSidebar = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.sidebar\n}, children);\nLayoutSidebar.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Navigation } from '../Navigation';\nimport { LayoutContainer } from './LayoutContainer';\nimport { LayoutContent } from './LayoutContent';\nimport { LayoutSidebar } from './LayoutSidebar';\nexport const TemplateSidebarNavContent = ({\n  children\n}) => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, children));\nTemplateSidebarNavContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Time.module.css';\nexport const Time = ({\n  time\n}) => {\n  const momentDate = moment(time);\n  const formatted = momentDate.format('HH:mm:ss');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.time\n  }, formatted);\n};\nTime.propTypes = {\n  time: PropTypes.string.isRequired\n};","import './locales';\nimport { CssVariables } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { AlertHandler } from './shared/components';\nexport const AppWrapper = ({\n  children\n}) => /*#__PURE__*/React.createElement(AlertHandler, null, /*#__PURE__*/React.createElement(CssVariables, {\n  spacers: true,\n  colors: true\n}), /*#__PURE__*/React.createElement(HashRouter, null, /*#__PURE__*/React.createElement(QueryParamProvider, {\n  ReactRouterRoute: Route\n}, children)));\nAppWrapper.propTypes = {\n  children: PropTypes.any.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport s from './HomeCard.module.css';\nexport const HomeCard = ({\n  titleText,\n  bodyText,\n  linkText,\n  to\n}) => {\n  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.container\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: s.title\n  }, titleText), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.body\n  }, bodyText), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.linkContainer\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: to\n  }, linkText))));\n};\nHomeCard.propTypes = {\n  bodyText: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired,\n  titleText: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired\n};","import React from 'react';\nimport i18n from '../../../locales';\nimport { PageHeadline } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { HomeCard } from '../../components';\nimport s from './Overview.module.css';\nexport const OVERVIEW_PATH = '/';\nexport const OVERVIEW_LABEL = 'Overview';\nexport const Overview = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-home'),\n    className: s.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Overview: SMS Configuration', {\n    nsSeparator: '>'\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.explanation\n  }, i18n.t('Configure settings for SMS sending, receiving, data reporting, alerts, registration and more.')), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.grid\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Gateway Configuration'),\n    bodyText: i18n.t('Add and manage gateways for sending and receiving SMS messages in DHIS2.'),\n    linkText: i18n.t('Set up gateways'),\n    to: \"/sms-gateway\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('SMS Commands'),\n    bodyText: i18n.t('Add and manage commands triggered by incoming SMS messages to register, alert and more.'),\n    linkText: i18n.t('Set up SMS commands'),\n    to: \"/sms-command\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Sent SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages sent from DHIS2.'),\n    linkText: i18n.t('View all sent SMS'),\n    to: \"/sent\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Received SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages received by DHIS2.'),\n    linkText: i18n.t('View all received SMS'),\n    to: \"/received\"\n  }))));\n};","import React from 'react';\nimport { TemplateSidebarNavContent } from '../shared';\nimport { Overview } from '../sms-overview';\n\nconst RouteHome = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(Overview, null));\n\nexport default RouteHome;","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  FAILED: i18n.t('Failed'),\n  INCOMING: i18n.t('Incoming'),\n  PROCESSED: i18n.t('Processed'),\n  PROCESSING: i18n.t('Processing'),\n  SENT: i18n.t('Sent'),\n  UNHANDLED: i18n.t('Unhandled')\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../../shared/utils';\nimport { translations } from '../../utils';\nimport styles from './Filter.module.css'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/incoming/SmsMessageStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'FAILED', 'INCOMING', 'PROCESSED', 'PROCESSING', 'SENT', 'UNHANDLED'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const Filter = ({\n  status,\n  setStatus,\n  phoneNumber,\n  setPhoneNumber,\n  onReset\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('views-receivedsms-filter'),\n  className: styles.container\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.inputStrip\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: \"status-filter\"\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))), /*#__PURE__*/React.createElement(InputField, {\n  label: i18n.t('Filter by phone number'),\n  inputWidth: \"250px\",\n  value: phoneNumber,\n  onChange: ({\n    value\n  }) => setPhoneNumber(value),\n  dataTest: \"phone-number-filter\"\n}), /*#__PURE__*/React.createElement(Button, {\n  large: true,\n  onClick: onReset,\n  dataTest: \"reset-filter-btn\"\n}, i18n.t('Reset filter'))));\nFilter.propTypes = {\n  phoneNumber: PropTypes.string.isRequired,\n  setPhoneNumber: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { Date, Time, SmsTable } from '../../../shared/components';\nimport { translations } from '../../utils';\nimport styles from './ReceivedSmsTable.module.css';\nexport const ReceivedSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Phone number'), i18n.t('Status'), i18n.t('Sender'), i18n.t('Received')],\n  rowRenderFn: message => {\n    var _message$user, _message$user$userCre;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.text), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.originator\n    }, message.originator)), /*#__PURE__*/React.createElement(TableCell, null, translations[message.smsstatus]), /*#__PURE__*/React.createElement(TableCell, null, ((_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$userCre = _message$user.userCredentials) === null || _message$user$userCre === void 0 ? void 0 : _message$user$userCre.username) || i18n.t('Unknown')), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n      date: message.receiveddate\n    }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n      time: message.receiveddate\n    })));\n  }\n});\nReceivedSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nconst DELETE_INBOUND_SMS_MUTATION = {\n  resource: 'sms/inbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nexport const useDeleteMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(DELETE_INBOUND_SMS_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataQuery } from '@dhis2/app-runtime';\nimport { Button, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport i18n from '../../../locales';\nimport { AlertContext, DeleteConfirmationDialog, PageHeadline } from '../../../shared/components';\nimport { useQueryParams } from '../../../shared/hooks';\nimport { dataTest } from '../../../shared/utils';\nimport { Filter, ReceivedSmsTable } from '../../components';\nimport styles from './ReceivedSmsList.module.css';\nimport { useDeleteMutation } from './useDeleteMutation';\nexport const RECEIVED_SMS_LIST_LABEL = i18n.t('Received');\nexport const RECEIVED_SMS_LIST_PATH = '/received';\n\nconst parseParams = ({\n  page,\n  pageSize,\n  phoneNumber,\n  status\n}) => {\n  const params = {\n    page,\n    pageSize,\n    fields: ['id', 'text', 'originator', 'smsstatus', 'user[userCredentials[username]]', // sender\n    'receiveddate'],\n    order: 'receiveddate:desc'\n  };\n  const filters = [];\n\n  if (phoneNumber) {\n    filters.push(\"originator:ilike:\".concat(phoneNumber));\n  }\n\n  if (status && status !== 'ALL') {\n    filters.push(\"smsstatus:eq:\".concat(status));\n  }\n\n  if (filters.length > 0) {\n    params.filter = filters;\n  }\n\n  return params;\n};\n\nconst query = {\n  inboundSms: {\n    resource: 'sms/inbound',\n    params: parseParams\n  }\n};\nexport const ReceivedSmsList = () => {\n  var _data$inboundSms;\n\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    phoneNumber,\n    status\n  } = queryParams;\n\n  const setPhoneNumber = phoneNumber => {\n    setQueryParams({\n      phoneNumber,\n      page: 1\n    }, 'replaceIn');\n  };\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const handleFilterReset = () => {\n    setQueryParams({\n      phoneNumber: undefined,\n      status: undefined,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n  const {\n    callback: debouncedRefetch\n  } = useDebouncedCallback(refetch, 500, {\n    leading: true\n  });\n  useEffect(() => {\n    debouncedRefetch({\n      page,\n      pageSize,\n      phoneNumber,\n      status\n    });\n  }, [page, pageSize, phoneNumber, status]);\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const [deleteSms] = useDeleteMutation({\n    onComplete: () => {\n      setShowDeleteConfirmationDialog(false);\n      refetch();\n      setSelectedIds([]);\n    },\n    onError: error => addAlert({\n      type: 'critical',\n      message: error.message\n    })\n  });\n\n  const onDeleteClick = () => deleteSms({\n    ids: selectedIds\n  });\n\n  const onCancelClick = () => setShowDeleteConfirmationDialog(false);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading received SMSes');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$inboundSms = data.inboundSms) === null || _data$inboundSms === void 0 ? void 0 : _data$inboundSms.inboundsmss) || [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-receivedsmslist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(Filter, {\n    status: status,\n    setStatus: setStatus,\n    phoneNumber: phoneNumber,\n    setPhoneNumber: setPhoneNumber,\n    onReset: handleFilterReset\n  }), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowDeleteConfirmationDialog(true),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected')), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: onCancelClick,\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected sms?'))), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(ReceivedSmsTable, {\n    messages: messages,\n    pager: data.inboundSms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  }));\n};","import React from 'react';\nimport { TemplateSidebarNavContent } from '../shared';\nimport { ReceivedSmsList } from '../sms-received';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(ReceivedSmsList, null));\n\nexport default RouteSmsCommand;","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  DELIVERED: i18n.t('Delivered'),\n  ERROR: i18n.t('Error'),\n  FAILED: i18n.t('Failed'),\n  OUTBOUND: i18n.t('Outbound'),\n  PENDING: i18n.t('Pending'),\n  SCHEDULED: i18n.t('Scheduled'),\n  SENT: i18n.t('Sent')\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { SmsTable, Date, Time } from '../../../shared/components';\nimport { translations } from '../../utils';\nimport styles from './SentSmsTable.module.css';\nexport const SentSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Recipients'), i18n.t('Status'), i18n.t('Sent')],\n  rowRenderFn: message => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.message), /*#__PURE__*/React.createElement(TableCell, null, (message.recipients || []).map((recipient, index, all) => /*#__PURE__*/React.createElement(\"span\", {\n    key: recipient + index,\n    className: styles.recipient\n  }, recipient, index !== all.length - 1 && ', '))), /*#__PURE__*/React.createElement(TableCell, null, translations[message.status]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n    date: message.date\n  }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n    time: message.date\n  })))\n});\nSentSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { translations } from '../../utils';\nimport styles from './StatusFilter.module.css'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/outbound/OutboundSmsStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'DELIVERED', 'ERROR', 'FAILED', 'OUTBOUND', 'PENDING', 'SCHEDULED', 'SENT'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const StatusFilter = ({\n  status,\n  setStatus\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: \"status-filter\"\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))));\nStatusFilter.propTypes = {\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nconst DELETE_OUTBOUND_SMS_MUTATION = {\n  resource: 'sms/outbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nexport const useDeleteMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(DELETE_OUTBOUND_SMS_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataQuery } from '@dhis2/app-runtime';\nimport { Button, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect, useContext } from 'react';\nimport i18n from '../../../locales';\nimport { DeleteConfirmationDialog, PageHeadline, AlertContext } from '../../../shared/components';\nimport { useQueryParams } from '../../../shared/hooks';\nimport { StatusFilter, SentSmsTable } from '../../components';\nimport styles from './SentSmsList.module.css';\nimport { useDeleteMutation } from './useDeleteMutation';\nexport const SENT_SMS_LIST_LABEL = i18n.t('Sent');\nexport const SENT_SMS_LIST_PATH = '/sent';\n\nconst parseParams = ({\n  status,\n  page,\n  pageSize\n}) => {\n  const params = {\n    pageSize,\n    page,\n    fields: ['id', 'message', 'status', 'date', 'recipients'],\n    order: 'date:desc'\n  };\n\n  if (status && status !== 'ALL') {\n    params.filter = \"status:eq:\".concat(status);\n  }\n\n  return params;\n};\n\nconst query = {\n  sms: {\n    resource: 'sms/outbound',\n    params: parseParams\n  }\n};\nexport const SentSmsList = () => {\n  var _data$sms;\n\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    status\n  } = queryParams;\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n  useEffect(() => {\n    refetch({\n      page,\n      pageSize,\n      status\n    });\n  }, [page, pageSize, status]);\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const [deleteSms] = useDeleteMutation({\n    onComplete: () => {\n      setShowDeleteConfirmationDialog(false);\n      refetch();\n      setSelectedIds([]);\n    },\n    onError: error => addAlert({\n      type: 'critical',\n      message: error.message\n    })\n  });\n\n  const onDeleteClick = () => deleteSms({\n    ids: selectedIds\n  });\n\n  const onCancelClick = () => setShowDeleteConfirmationDialog(false);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading sent SMSes');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$sms = data.sms) === null || _data$sms === void 0 ? void 0 : _data$sms.outboundsmss) || [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(StatusFilter, {\n    status: status,\n    setStatus: setStatus\n  }), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowDeleteConfirmationDialog(true),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected')), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: onCancelClick,\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected sms?'))), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(SentSmsTable, {\n    messages: messages,\n    pager: data.sms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  }));\n};","import React from 'react';\nimport { TemplateSidebarNavContent } from '../shared';\nimport { SentSmsList } from '../sms-sent';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(SentSmsList, null));\n\nexport default RouteSmsCommand;","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, Field as UiField, InputFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './FieldSpecialCharacter.module.css';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nexport const FIELD_SPECIAL_CHARS_NAME = 'specialCharacters';\nexport const FieldSpecialCharacter = ({\n  index,\n  onSpecialKeyRemoved\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeSpecialKeyFieldsFromFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars.slice(0, index), ...specialChars.slice(index + 1)];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n    onSpecialKeyRemoved();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('@TODO'),\n    label: i18n.t('Special character name'),\n    name: \"\".concat(FIELD_SPECIAL_CHARS_NAME, \"[\").concat(index, \"].name\"),\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('@TODO'),\n    label: i18n.t('Special character value'),\n    name: \"\".concat(FIELD_SPECIAL_CHARS_NAME, \"[\").concat(index, \"].value\"),\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(UiField, {\n    label: \"\\xA0\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: removeSpecialKeyFieldsFromFormState\n  }, i18n.t('Remove'))));\n};\nFieldSpecialCharacter.propTypes = {\n  index: PropTypes.number.isRequired,\n  onSpecialKeyRemoved: PropTypes.func.isRequired\n};","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const AddSpecialCharacters = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addSpecialKeyFieldsToFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars, {\n      name: '',\n      value: ''\n    }];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n  };\n\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: addSpecialKeyFieldsToFormState,\n    dataTest: dataTest('forms-commandsaddspecialcharacters')\n  }, i18n.t('Add special character')));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  values: true\n};\nexport const FIELD_SMS_CODES_NAME = 'smsCodes';\nexport const FieldSmsCode = ({\n  id,\n  displayName,\n  valueType\n}) => {\n  const {\n    values\n  } = useFormState({\n    subscription\n  });\n  const smsCode = values[FIELD_SMS_CODES_NAME][id];\n  /**\n   * This uses a dynamic, nested name for storing the field value in the\n   * form state. You can't submit the data as is though, since the backend\n   * expects a different shape. So I was thinking of dealing with that\n   * in the submit handler. Since you have the ids and the field value\n   * you should be able to transform it into any shape you need.\n   */\n\n  return /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    name: \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(id),\n    label: displayName,\n    component: InputFieldFF,\n    format: code => (code === null || code === void 0 ? void 0 : code.code) || '',\n    parse: nextCode => !smsCode ? {\n      code: nextCode,\n      trackedEntityAttribute: {\n        id,\n        displayName,\n        valueType\n      }\n    } : { ...smsCode,\n      code: nextCode\n    }\n  });\n};\nFieldSmsCode.propTypes = {\n  displayName: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  valueType: PropTypes.string.isRequired\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './AddFormulaButton.module.css';\nconst {\n  useField\n} = ReactFinalForm;\nconst DATA_ELEMENTS_QUERY = {\n  dataElement: {\n    resource: 'dataElements',\n    id: ({\n      id\n    }) => id,\n    params: () => ({\n      fields: 'displayName'\n    })\n  }\n};\nexport const AddFormulaButton = ({\n  baseName,\n  onClick,\n  disabled\n}) => {\n  const engine = useDataEngine();\n  const [loading, setLoading] = useState(false);\n  const [formulaDataElementName, setFormulaDataElementName] = useState('');\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const {\n    formula,\n    code\n  } = smsCode;\n  const operator = formula && formula[0];\n  const dataElementId = formula && formula.slice(1);\n  useEffect(() => {\n    if (dataElementId) {\n      setLoading(true);\n      engine.query(DATA_ELEMENTS_QUERY, {\n        variables: {\n          id: dataElementId\n        }\n      }).then(response => {\n        const {\n          displayName\n        } = response.dataElement;\n        setFormulaDataElementName(displayName);\n      }).finally(() => setLoading(false));\n    }\n  }, [dataElementId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, code && formula && formulaDataElementName && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWords,\n    \"data-test\": dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboaddformulabutton-formulainwords')\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWordsLabel\n  }, i18n.t('Formula'), \":\"), loading && i18n.t('Loading formula'), !loading && \"\".concat(code, \" \").concat(operator, \" \").concat(formulaDataElementName)), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: onClick,\n    disabled: disabled,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboaddformulabutton-button')\n  }, formula ? i18n.t('Edit formula') : i18n.t('Add formula')));\n};\nAddFormulaButton.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react';\nexport const DATA_ELEMENTS_QUERY = {\n  dataSet: {\n    resource: 'dataSets',\n    id: ({\n      id\n    }) => id,\n    params: ({\n      filter\n    }) => ({\n      filter,\n      fields: 'dataSetElements[dataElement[id,code,displayName]]'\n    })\n  }\n};\nexport const queryDataElementsOfDataSet = (engine, variables) => engine.query(DATA_ELEMENTS_QUERY, {\n  variables\n}).then(data => {\n  const {\n    dataSet\n  } = data;\n  const {\n    dataSetElements\n  } = dataSet;\n  const formatted = dataSetElements.map(({\n    dataElement\n  }) => dataElement);\n  formatted.sort((left, right) => {\n    const leftDisplayName = left.displayName;\n    const rightDisplayName = right.displayName;\n\n    if (leftDisplayName === rightDisplayName) {\n      return 0;\n    }\n\n    if (leftDisplayName < rightDisplayName) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return formatted;\n});\nexport const useReadDataElementsOfDataSetQuery = (dataSetId, filter) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return queryDataElementsOfDataSet(engine, variables).then(setData).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id: dataSetId,\n      filter\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, CircularLoader, Modal, ModalActions, ModalContent, ModalTitle, NoticeBox, ReactFinalForm, SingleSelectFieldFF, hasValue } from '@dhis2/ui';\nimport React, { useMemo } from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_DATA_SET_NAME } from '../../components';\nimport { useReadDataElementsOfDataSetQuery } from './useReadDataElementsOfDataSetQuery';\nconst {\n  Field,\n  Form,\n  useForm,\n  useField\n} = ReactFinalForm;\nexport const CurrentFormula = ({\n  baseName,\n  combo,\n  targetFieldName,\n  onClose\n}) => {\n  const form = useForm();\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const dataSetId = useField(FIELD_DATA_SET_NAME, {\n    subscription: {\n      value: true\n    }\n  }).input.value.id;\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataElementsOfDataSetQuery(dataSetId); // Using memo so changing the form does not change the \"initialValues\"\n  // which would cause the form to update unnecessarily\n\n  const initialFormula = smsCode.formula;\n  const initialOperator = useMemo(() => initialFormula ? initialFormula[0] : '+', []);\n  const initialDataElementCode = useMemo(() => initialFormula ? initialFormula.slice(1) : '', []);\n  const initialValues = {\n    operator: initialOperator,\n    dataElementCode: initialDataElementCode\n  };\n  const modalDataTest = dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula');\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Modal, {\n      dataTest: modalDataTest\n    }, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const options = data.map(dataElement => {\n    const {\n      id,\n      displayName\n    } = dataElement;\n    return {\n      value: id,\n      label: displayName\n    };\n  });\n\n  const onSubmit = values => {\n    const newFormula = \"\".concat(values.operator).concat(values.dataElementCode);\n    form.change(targetFieldName, newFormula);\n    onClose();\n  };\n\n  const onRemove = () => {\n    form.change(targetFieldName, null);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(Modal, {\n    dataTest: modalDataTest\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.stopPropagation();\n      handleSubmit(event);\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Formula for {{combo}}', {\n    combo\n  })), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-dataelement'),\n    name: \"dataElementCode\",\n    label: i18n.t('Data element'),\n    component: SingleSelectFieldFF,\n    options: options,\n    validate: hasValue\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-operator'),\n    name: \"operator\",\n    label: i18n.t('formula operator'),\n    component: SingleSelectFieldFF,\n    initialValue: \"+\",\n    options: [{\n      value: '+',\n      label: '+'\n    }, {\n      value: '-',\n      label: '-'\n    }]\n  })), error && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving')\n  }, error.message))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRemove,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-remove')\n  }, i18n.t('Remove')), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-save')\n  }, i18n.t('Save')))))));\n};\nCurrentFormula.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  combo: PropTypes.string.isRequired,\n  targetFieldName: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../../locales';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { AddFormulaButton } from './AddFormulaButton';\nimport { CurrentFormula } from './CurrentFormula';\nimport styles from './FieldDataElementWithCategoryOptionCombo.module.css';\n\nconst DE_COC_toFormName = (dataElement, categoryOptionCombo) => {\n  const dataElementId = dataElement.id;\n  const cocCode = categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.code;\n  const isDefault = cocCode === 'default';\n\n  if (!cocCode || isDefault) {\n    return \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElementId);\n  }\n\n  return \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElementId, \"-\").concat(cocCode);\n};\n\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldDataElementWithCategoryOptionCombo = ({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  const [showFormula, setShowFormula] = useState(false);\n  const label = categoryOptionCombo ? \"\".concat(dataElement.displayName, \" \").concat(categoryOptionCombo.displayName) : \"\".concat(dataElement.displayName, \" \").concat(i18n.t('default'));\n  const baseName = DE_COC_toFormName(dataElement, categoryOptionCombo);\n  const name = \"\".concat(baseName, \".code\");\n  const formulaName = \"\".concat(baseName, \".formula\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: styles.field,\n    label: label,\n    name: name,\n    subscription: {\n      value: true,\n      error: true,\n      invalid: true,\n      touched: true\n    }\n  }, ({\n    input,\n    meta,\n    ...rest\n  }) => {\n    const code = input.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputFieldFF, _extends({}, rest, {\n      className: styles.codeField,\n      input: input,\n      meta: meta,\n      error: !!meta.error\n    })), /*#__PURE__*/React.createElement(AddFormulaButton, {\n      disabled: !code,\n      baseName: baseName,\n      formulaFieldName: formulaName,\n      onClick: () => setShowFormula(true)\n    }), showFormula && /*#__PURE__*/React.createElement(CurrentFormula, {\n      baseName: baseName,\n      combo: label,\n      targetFieldName: formulaName,\n      onClose: () => setShowFormula(false)\n    }));\n  }));\n};\nFieldDataElementWithCategoryOptionCombo.defaultProps = {\n  categoryOptionCombo: null,\n  formula: ''\n};\nFieldDataElementWithCategoryOptionCombo.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  categoryOptionCombo: PropTypes.shape({\n    code: PropTypes.string.isRequired,\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n};","import i18n from '../../../locales';\nconst ALL_DATAVALUE = {\n  value: 'ALL_DATAVALUE',\n  label: i18n.t('Receive all data values')\n};\nconst AT_LEAST_ONE_DATAVALUE = {\n  value: 'AT_LEAST_ONE_DATAVALUE',\n  label: i18n.t('Receive at least one data value')\n};\nconst DO_NOT_MARK_COMPLETE = {\n  value: 'DO_NOT_MARK_COMPLETE',\n  label: i18n.t('Do not mark as complete')\n};\nexport const completenessMethods = {\n  ALL_DATAVALUE,\n  AT_LEAST_ONE_DATAVALUE,\n  DO_NOT_MARK_COMPLETE\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport * as completenessMethods from './completenessMethods';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(completenessMethods);\nexport const FIELD_COMPLETENESS_METHOD_NAME = 'completenessMethod';\nexport const FieldCompletenessMethod = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommandfields-fieldcommandcompletenessmethod'),\n  name: FIELD_COMPLETENESS_METHOD_NAME,\n  label: i18n.t('Completeness method'),\n  component: SingleSelectFieldFF,\n  options: options\n});","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod';\nconst {\n  ALL_DATAVALUE,\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  useField\n} = ReactFinalForm;\nexport const CompletenessMessage = () => {\n  const {\n    input\n  } = useField(FIELD_COMPLETENESS_METHOD_NAME, {\n    subscription: {\n      value: true\n    }\n  });\n  const completenessMethod = input.value;\n  const title = i18n.t('Required values notice');\n\n  if (completenessMethod === ALL_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(\"Make sure all SMS short codes are provided when completeness method \\\"\".concat(ALL_DATAVALUE.label, \"\\\" is chosen, otherwise received messages will not be processed.\"))));\n  }\n\n  if (completenessMethod === AT_LEAST_ONE_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(\"Make sure at least one SMS short code is provided when completeness method \\\"\".concat(AT_LEAST_ONE_DATAVALUE.label, \"\\\" is chosen, otherwise received messages will not be processed.\"))));\n  }\n\n  return null;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow, PageSubHeadline } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldDataElementWithCategoryOptionCombo } from '../FieldDataElementWithCategoryOptionCombo';\nimport { CompletenessMessage } from './CompletenessMessage';\nimport styles from './DataElementTimesCategoryOptionCombos.module.css';\nexport const DataElementTimesCategoryOptionCombos = ({\n  DE_COC_combinations\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommandfields-dataelementtimescategoryoptioncombos')\n}, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), /*#__PURE__*/React.createElement(CompletenessMessage, null), /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommandfields-dataelementtimescategoryoptioncombos-rows')\n}, DE_COC_combinations.map(({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  return /*#__PURE__*/React.createElement(FormRow, {\n    className: styles.formRow,\n    key: dataElement.id + (categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.id)\n  }, /*#__PURE__*/React.createElement(FieldDataElementWithCategoryOptionCombo, {\n    dataElement: dataElement,\n    categoryOptionCombo: categoryOptionCombo\n  }));\n})));\nDataElementTimesCategoryOptionCombos.defaultProps = {\n  allRequired: false\n};\nDataElementTimesCategoryOptionCombos.propTypes = {\n  DE_COC_combinations: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_COMMAND_NAME = 'name';\nexport const FieldCommandName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('commands-fieldcommandname'),\n  name: FIELD_COMMAND_NAME,\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_CONFIRM_MESSAGE_NAME = 'receivedMessage';\nexport const FieldConfirmMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('commands-fieldcommandconfirmmessage'),\n  name: FIELD_CONFIRM_MESSAGE_NAME,\n  label: i18n.t('Confirm message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm; // The \"s\" from \"set\" is not capitalized\n// as the property on the java-model\n// does not have a capitalized \"s\" either\n//\n// @TODO: Create issue to make it consistent\n\nexport const FIELD_DATA_SET_NAME = 'dataset';\nexport const FieldDataSet = ({\n  dataSets,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fielddataset'),\n  name: FIELD_DATA_SET_NAME,\n  label: i18n.t('Data set'),\n  component: SingleSelectFieldFF,\n  options: dataSets,\n  validate: hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldDataSet.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldDataSet.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const DATA_SETS_QUERY = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadDataSetsQuery = () => useDataQuery(DATA_SETS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldDataSet } from './FieldDataSet';\nimport { useReadDataSetsQuery } from './useReadDataSetsQuery';\nexport const FieldDataSetWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataSetsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      loading: true,\n      showLoadingStatus: true,\n      required: required,\n      dataSets: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    dataSets\n  } = data.dataSets;\n  const options = dataSets.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldDataSet, {\n    required: required,\n    dataSets: options,\n    validate: validate\n  });\n};\nFieldDataSetWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldDataSetWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_DEFAULT_MESSAGE_NAME = 'defaultMessage';\nexport const FieldDefaultMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommanddefaultmessage'),\n  name: FIELD_DEFAULT_MESSAGE_NAME,\n  label: i18n.t('Reply message if no codes are sent (only the command)'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME = 'moreThanOneOrgUnitMessage';\nexport const FieldMoreThanOneOrgUnitMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandmorethanoneorgunitmessage'),\n  name: FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME,\n  label: i18n.t('More than one orgunit message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_NO_USER_MESSAGE_NAME = 'noUserMessage';\nexport const FieldNoUserMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandnousermessage'),\n  name: FIELD_NO_USER_MESSAGE_NAME,\n  label: i18n.t('No user message'),\n  component: TextAreaFieldFF\n});","import i18n from '../../../locales';\nconst KEY_VALUE_PARSER = {\n  value: 'KEY_VALUE_PARSER',\n  label: i18n.t('Key value parser')\n}; // @TODO: This parser is not listed in the docs,\n//        but it's listed in the original source code\n//   -> docs: https://docs.dhis2.org/master/en/dhis2_developer_manual/web-api.html#sms-command-values\n//   -> code: https://github.com/dhis2/dhis2-core/blob/79bd77ecf52051b00e3ba96eb1aca4d0a6063ed1/dhis-2/dhis-web/dhis-web-maintenance/dhis-web-maintenance-mobile/src/main/webapp/dhis-web-maintenance-mobile/smscommand/edit-sms-command.vm#L188\n\nconst J2ME_PARSER = {\n  value: 'J2ME_PARSER',\n  label: i18n.t('J2ME parser')\n};\nconst ALERT_PARSER = {\n  value: 'ALERT_PARSER',\n  label: i18n.t('Alert parser')\n};\nconst UNREGISTERED_PARSER = {\n  value: 'UNREGISTERED_PARSER',\n  label: i18n.t('Unregistered parser')\n};\nconst TRACKED_ENTITY_REGISTRATION_PARSER = {\n  value: 'TRACKED_ENTITY_REGISTRATION_PARSER',\n  label: i18n.t('Tracked entity registration parser')\n};\nconst PROGRAM_STAGE_DATAENTRY_PARSER = {\n  value: 'PROGRAM_STAGE_DATAENTRY_PARSER',\n  label: i18n.t('Program stage data entry parser')\n};\nconst EVENT_REGISTRATION_PARSER = {\n  value: 'EVENT_REGISTRATION_PARSER',\n  label: i18n.t('Event registration parser')\n};\nexport const parserTypes = {\n  KEY_VALUE_PARSER,\n  J2ME_PARSER,\n  ALERT_PARSER,\n  UNREGISTERED_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  EVENT_REGISTRATION_PARSER\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport { parserTypes } from './parserTypes';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(parserTypes).sort((a, b) => {\n  if (a.label < b.label) {\n    return -1;\n  }\n\n  if (a.label > b.label) {\n    return 1;\n  }\n\n  return 0;\n});\nexport const FIELD_PARSER_NAME = 'parserType';\nexport const FieldParser = ({\n  disabled\n}) => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  disabled: disabled,\n  dataTest: dataTest('forms-fieldcommandparser'),\n  name: FIELD_PARSER_NAME,\n  label: i18n.t('Parser'),\n  component: SingleSelectFieldFF,\n  options: options,\n  validate: hasValue\n});\nFieldParser.defaultProps = {\n  disabled: false\n};\nFieldParser.propTypes = {\n  disabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_NAME = 'program';\nexport const FieldProgram = ({\n  programs,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  error: !!errorText,\n  validationText: errorText,\n  disabled: disabled,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fieldprogram'),\n  name: FIELD_PROGRAM_NAME,\n  label: i18n.t('Program'),\n  component: SingleSelectFieldFF,\n  options: programs,\n  validate: required && hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldProgram.defaultProps = {\n  disabled: false,\n  errorText: '',\n  loading: false,\n  required: false\n};\nFieldProgram.propTypes = {\n  programs: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAMS_WITH_REGISTRATION = 'PROGRAMS_WITH_REGISTRATION';\nexport const PROGRAMS_WITHOUT_REGISTRATION = 'PROGRAMS_WITHOUT_REGISTRATION';\nexport const ALL_PROGRAMS = 'ALL_PROGRAMS';\nexport const PROGRAMS_QUERY = {\n  programs: {\n    resource: 'programs',\n    params: ({\n      registration\n    }) => {\n      const params = {\n        paging: 'false'\n      };\n\n      if (registration === PROGRAMS_WITH_REGISTRATION) {\n        params.filter = 'programType:eq:WITH_REGISTRATION';\n      } else if (registration === PROGRAMS_WITHOUT_REGISTRATION) {\n        params.filter = 'programType:eq:WITHOUT_REGISTRATION';\n      }\n\n      return params;\n    }\n  }\n};\nexport const useReadProgramsQuery = registration => useDataQuery(PROGRAMS_QUERY, {\n  variables: {\n    registration\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { FIELD_PROGRAM_NAME, FieldProgram } from './FieldProgram';\nimport { ALL_PROGRAMS, useReadProgramsQuery } from './useReadProgramsQuery';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const FieldProgramWithAutoLoad = ({\n  required,\n  registration\n}) => {\n  const form = useForm();\n  const validate = required ? hasValue : undefined;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramsQuery({\n    lazy: true\n  });\n  useEffect(() => {\n    const variables = {\n      registration\n    };\n    form.change(FIELD_PROGRAM_NAME, null);\n    refetch(variables);\n  }, [registration]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      programs: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    programs\n  } = data.programs;\n  const options = programs.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgram, {\n    required: required,\n    programs: options,\n    validate: validate\n  });\n};\nFieldProgramWithAutoLoad.defaultProps = {\n  required: false,\n  registration: ALL_PROGRAMS\n};\nFieldProgramWithAutoLoad.propTypes = {\n  registration: PropTypes.string,\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_STAGE_NAME = 'programStage';\nexport const FieldProgramStage = ({\n  programStages,\n  disabled,\n  loading,\n  initialValue,\n  required,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  component: SingleSelectFieldFF,\n  dataTest: dataTest('forms-fieldprogramstage'),\n  disabled: disabled,\n  error: !!errorText,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  iinitialValue: initialValue,\n  label: i18n.t('Program stage'),\n  loading: loading,\n  name: FIELD_PROGRAM_STAGE_NAME,\n  options: programStages,\n  parse: id => ({\n    id\n  }),\n  required: required,\n  validate: required && hasValue,\n  validationText: errorText\n});\nFieldProgramStage.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldProgramStage.propTypes = {\n  programStages: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  initialValue: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAM_STAGES_QUERY = {\n  programStages: {\n    resource: 'programStages',\n    params: ({\n      programId\n    }) => ({\n      paging: 'false',\n      filter: programId ? \"program.id:eq:\".concat(programId) : undefined\n    })\n  }\n};\nexport const useReadProgramStagesQuery = ({\n  programId,\n  lazy\n}) => useDataQuery(PROGRAM_STAGES_QUERY, {\n  variables: {\n    programId\n  },\n  lazy\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { parserTypes } from '../FieldParser';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStage } from './FieldProgramStage';\nimport { useReadProgramStagesQuery } from './useReadProgramStagesQuery';\nconst {\n  useForm\n} = ReactFinalForm;\nconst {\n  EVENT_REGISTRATION_PARSER\n} = parserTypes;\nexport const FieldProgramStageWithLoadingStates = ({\n  parserType,\n  programId,\n  disabled,\n  required\n}) => {\n  var _data$programStages2, _data$programStages3;\n\n  const form = useForm();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramStagesQuery({\n    lazy: true\n  });\n  const validate = required ? hasValue : undefined;\n  useEffect(() => {\n    if (programId) refetch({\n      programId\n    });\n  }, [programId]);\n  useEffect(() => {\n    var _data$programStages, _data$programStages$p;\n\n    const isEventRegistrationParser = parserType === EVENT_REGISTRATION_PARSER.value;\n    const programStageValueForEventRegistration = {\n      id: data === null || data === void 0 ? void 0 : (_data$programStages = data.programStages) === null || _data$programStages === void 0 ? void 0 : (_data$programStages$p = _data$programStages.programStages[0]) === null || _data$programStages$p === void 0 ? void 0 : _data$programStages$p.id\n    };\n    const initialValue = isEventRegistrationParser ? programStageValueForEventRegistration : undefined;\n    form.change(FIELD_PROGRAM_STAGE_NAME, initialValue);\n  }, [parserType, data === null || data === void 0 ? void 0 : (_data$programStages2 = data.programStages) === null || _data$programStages2 === void 0 ? void 0 : _data$programStages2.programStages]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      loading: true,\n      disabled: disabled,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      errorText: error.message,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (!programId || !data) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  const programStages = (data === null || data === void 0 ? void 0 : (_data$programStages3 = data.programStages) === null || _data$programStages3 === void 0 ? void 0 : _data$programStages3.programStages) || [];\n  const options = programStages.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: disabled,\n    required: required,\n    programStages: options\n  });\n};\nFieldProgramStageWithLoadingStates.defaultProps = {\n  disabled: false,\n  required: false\n};\nFieldProgramStageWithLoadingStates.propTypes = {\n  parserType: PropTypes.string.isRequired,\n  programId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldProgramStageDataElements = ({\n  programStageDataElements,\n  smsCodes\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, programStageDataElements.map(({\n    dataElement\n  }) => /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smscommandfields-programstagedataelements-row'),\n    key: dataElement.id,\n    name: \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElement.id),\n    label: dataElement.displayName,\n    component: InputFieldFF,\n    format: value => (value === null || value === void 0 ? void 0 : value.code) || null,\n    parse: code => {\n      const currentValue = smsCodes[dataElement.id];\n      const newValue = { ...currentValue,\n        code: code || '',\n        dataElement\n      };\n      return newValue;\n    }\n  })));\n};\nFieldProgramStageDataElements.propTypes = {\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  smsCodes: PropTypes.objectOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    code: PropTypes.string,\n    compulsory: PropTypes.bool,\n    optionId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }))\n};","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SEPARATOR_NAME = 'separator';\nexport const FieldSeparator = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandseparator'),\n  name: FIELD_SEPARATOR_NAME,\n  label: i18n.t('Field separator'),\n  component: InputFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SUCCESS_MESSAGE_NAME = 'successMessage';\nexport const FieldSuccessMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandsuccessmessage'),\n  name: FIELD_SUCCESS_MESSAGE_NAME,\n  label: i18n.t('Success message'),\n  component: TextAreaFieldFF\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME = 'currentPeriodUsedForReporting';\nexport const FieldUseCurrentPeriodForReporting = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smscommandfields-fieldcommandusecurrentperiodforreporting'),\n  name: FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME,\n  label: i18n.t('Use current period for reporting'),\n  component: CheckboxFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_WRONG_FORMAT_MESSAGE_NAME = 'wrongFormatMessage';\nexport const FieldWrongFormatMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandwrongformatmessage'),\n  name: FIELD_WRONG_FORMAT_MESSAGE_NAME,\n  label: i18n.t('Wrong format message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CircularLoader, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitting: true,\n  pristine: true\n};\nexport const SaveCommandButton = ({\n  enabled\n}) => {\n  const {\n    submitting,\n    pristine\n  } = useFormState({\n    subscription\n  });\n  const disabled = pristine || submitting;\n  return /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: !enabled && disabled,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, i18n.t('Save command'));\n};\nSaveCommandButton.defaultProps = {\n  enabled: false\n};\nSaveCommandButton.propTypes = {\n  /*\n   * This prop is used when fields, stored as array entries\n   * in the form state, are being removed while the form\n   * is still pristine.\n   *\n   * Form some reasons, RFF doesn't recognize this as a change\n   * and keeps the form state's pristine value `true`\n   */\n  enabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components';\nimport { SaveCommandButton } from './SaveCommandButton';\nexport const FormActions = ({\n  enableSubmit,\n  onCancel\n}) => /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(SaveCommandButton, {\n  enabled: enableSubmit\n}), /*#__PURE__*/React.createElement(Button, {\n  onClick: onCancel\n}, i18n.t('Cancel'))));\nFormActions.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  enableSubmit: PropTypes.bool\n};","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitError: true,\n  hasSubmitErrors: true\n};\nexport const SubmitErrors = () => {\n  const {\n    submitError,\n    hasSubmitErrors\n  } = useFormState({\n    subscription\n  });\n  if (!hasSubmitErrors) return null;\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst submitting the form')\n  }, submitError));\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst ALERT_DATA_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    type: 'update',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useAlertDataQuery = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(ALERT_DATA_QUERY, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nconst updateAlertParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  partial: true,\n  data: ({\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  }) => ({\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  })\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateAlertParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { ContentLoading, ContentLoadingError, FormRow, FieldUserGroup } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nimport { createInitialValues } from './createInitialValues';\nimport { createUserGroupOptions } from './createUserGroupOptions';\nimport { useAlertDataQuery } from './useAlertDataQuery';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormAlertParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useAlertDataQuery(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const initialValues = createInitialValues(data.smsCommand);\n  const userGroups = createUserGroupOptions(data.smsCommand.userGroup);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditalertparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n    disabled: true,\n    userGroups: userGroups\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  })));\n};\nFormAlertParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","export const createInitialValues = ({\n  name,\n  parserType,\n  receivedMessage,\n  userGroup\n}) => ({\n  name,\n  parserType,\n  receivedMessage,\n  userGroup: userGroup.id\n});","export const createUserGroupOptions = userGroup => [{\n  value: userGroup.id,\n  label: userGroup.name\n}];","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow, PageSubHeadline } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldProgramStage } from '../FieldProgramStage';\nimport { FieldProgramStageDataElements } from '../FieldProgramStageDataElements';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = ({\n  handleSubmit,\n  onCancel,\n  programStageDataElements,\n  selectedProgramOption,\n  selectedProgramStageOption\n}) => {\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommandeventregistrationparser-commandediteventregistrationparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageDataElements, {\n    programStageDataElements: programStageDataElements,\n    smsCodes: values[FIELD_SMS_CODES_NAME]\n  })), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst {\n  EVENT_REGISTRATION_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: EVENT_REGISTRATION_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[id,dataElement[id,displayName]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandQuery = id => useDataQuery(READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateEventRegistrationParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const program = command[FIELD_PROGRAM_NAME];\n    const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]);\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_PROGRAM_NAME]: program,\n      [FIELD_PROGRAM_STAGE_NAME]: programStage,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateEventRegistrationParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { useCommandQuery } from './useCommandQuery';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormEventRegistrationParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    error,\n    data = {}\n  } = useCommandQuery(commandId);\n  const {\n    smsCommand: command\n  } = data;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (error) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  const programStageDataElements = command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    initialValues: initialValues,\n    onSubmit: updateCommand\n  }, ({\n    handleSubmit\n  }) => {\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      handleSubmit: handleSubmit,\n      selectedProgramOption: selectedProgramOption,\n      selectedProgramStageOption: selectedProgramStageOption,\n      programStageDataElements: programStageDataElements,\n      onCancel: onCancel\n    });\n  });\n};\nFormEventRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../../locales';\nimport { FormRow, PageSubHeadline } from '../../../shared/components';\nimport { FieldDataSet } from '../../components';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const FormComponent = ({\n  DE_COC_combination_data,\n  dataTest,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst {\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  J2ME_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = J2ME_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, {\n    code,\n    compulsory,\n    formula,\n    optionId,\n    dataElement\n  }) => {\n    const key = optionId < 10 ? dataElement.id : \"\".concat(dataElement.id, \"-\").concat(optionId);\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","export const getSmsCodeDuplicates = smsCodes => {\n  const duplicates = smsCodes.reduce((curDuplicates, smsCode, index) => {\n    const [name, code] = smsCode;\n    const errorAlreadyPresent = curDuplicates.includes(name);\n\n    if (errorAlreadyPresent) {\n      return curDuplicates;\n    }\n\n    const potentialDuplicates = smsCodes.filter( // eslint-disable-next-line no-unused-vars\n    ([_, curCode], curIndex) => {\n      return curCode.code === code.code && curIndex !== index;\n    });\n    const noDuplicates = !potentialDuplicates.length;\n\n    if (noDuplicates) {\n      return curDuplicates;\n    }\n\n    const newlyFoundDuplicates = potentialDuplicates.reduce((curWithCodeDuplicates, [curName]) => {\n      return [...curWithCodeDuplicates, curName];\n    }, [name]);\n    return [...curDuplicates, ...newlyFoundDuplicates];\n  }, []);\n  return duplicates;\n};","import i18n from '../../../locales';\nimport { getSmsCodeDuplicates } from '../../utils';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const paging = 'false';\n      const fields = ['*', \"dataset [\\n                    id,\\n                    displayName,\\n                    dataSetElements [\\n                        dataElement [\\n                            id,\\n                            displayName,\\n                            categoryCombo [\\n                                categoryOptionCombos [\\n                                    id,\\n                                    displayName,\\n                                    code\\n                                ]\\n                            ]\\n                        ]\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, '')),\n        paging\n      };\n    }\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateJ2meParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.entries(command[FIELD_SMS_CODES_NAME]).map(([id, {\n      code,\n      formula,\n      compulsory,\n      optionId\n    }]) => {\n      const [dataElementId] = id.split('-');\n      const formattedSmsCode = {\n        code,\n        compulsory,\n        dataElement: {\n          id: dataElementId\n        }\n      };\n\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateJ2meParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest as createDataTestValue } from '../../../shared/utils';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { globalValidate } from './globalValidate';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormJ2meParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const dataTest = createDataTestValue('smscommandkeyvalueparser-commandeditj2meparserform');\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombo;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars === null || specialChars === void 0 ? void 0 : specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dataTest: dataTest,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nFormJ2meParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../../locales';\nimport { FormRow, PageSubHeadline } from '../../../shared/components';\nimport { FieldDataSet } from '../../components';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const FormComponent = ({\n  DE_COC_combination_data,\n  dataTest,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst {\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  KEY_VALUE_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = KEY_VALUE_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, {\n    code,\n    compulsory,\n    formula,\n    optionId,\n    dataElement\n  }) => {\n    const key = optionId < 10 ? dataElement.id : \"\".concat(dataElement.id, \"-\").concat(optionId);\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","import i18n from '../../../locales';\nimport { getSmsCodeDuplicates } from '../../utils';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const paging = 'false';\n      const fields = ['*', \"dataset [\\n                    id,\\n                    displayName,\\n                    dataSetElements [\\n                        dataElement [\\n                            id,\\n                            displayName,\\n                            categoryCombo [\\n                                categoryOptionCombos [\\n                                    id,\\n                                    displayName,\\n                                    code\\n                                ]\\n                            ]\\n                        ]\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, '')),\n        paging\n      };\n    }\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateKeyValueParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.entries(command[FIELD_SMS_CODES_NAME]).map(([id, {\n      code,\n      formula,\n      compulsory,\n      optionId\n    }]) => {\n      const [dataElementId] = id.split('-');\n      const formattedSmsCode = {\n        code,\n        compulsory,\n        dataElement: {\n          id: dataElementId\n        }\n      };\n\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateKeyValueParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest as createDataTestValue } from '../../../shared/utils';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { globalValidate } from './globalValidate';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormKeyValueParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const dataTest = createDataTestValue('smscommandkeyvalueparser-commandeditj2meparserform');\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombo;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars === null || specialChars === void 0 ? void 0 : specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dataTest: dataTest,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nFormKeyValueParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow, PageSubHeadline } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldProgramStage } from '../FieldProgramStage';\nimport { FieldProgramStageDataElements } from '../FieldProgramStageDataElements';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = ({\n  handleSubmit,\n  selectedProgramOption,\n  programStageDataElements,\n  selectedProgramStageOption,\n  onCancel\n}) => {\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditprogramstagedataentryparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageDataElements, {\n    programStageDataElements: programStageDataElements,\n    smsCodes: values[FIELD_SMS_CODES_NAME]\n  })), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst {\n  PROGRAM_STAGE_DATAENTRY_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: PROGRAM_STAGE_DATAENTRY_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[dataElement[id,displayName]]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandData = programStageId => useDataQuery(READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY, {\n  variables: {\n    id: programStageId\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => ({ ...params,\n    [FIELD_SMS_CODES_NAME]: Object.values(params[FIELD_SMS_CODES_NAME])\n  })\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { ContentLoading, ContentLoadingError } from '../../../shared/components';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormProgramStageDataEntryParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const command = data === null || data === void 0 ? void 0 : data.smsCommand;\n  const programStageDataElements = command === null || command === void 0 ? void 0 : command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    handleSubmit: handleSubmit,\n    selectedProgramOption: selectedProgramOption,\n    programStageDataElements: programStageDataElements,\n    selectedProgramStageOption: selectedProgramStageOption,\n    onCancel: onCancel\n  }));\n};\nFormProgramStageDataEntryParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow, PageSubHeadline } from '../../../shared/components';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FieldSmsCode } from '../FieldSmsCode';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = ({\n  handleSubmit,\n  dynamicFields,\n  selectedProgramOption,\n  onCancel\n}) => {\n  const {\n    pristine\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), dynamicFields.map(dynamicField => {\n    // I assume this should switch field types based on `valueType`\n    // which can be 'TEXT', 'NUMBER', etc. Currently this renders\n    // a regular input for everything.\n    return /*#__PURE__*/React.createElement(FormRow, {\n      key: dynamicField.id\n    }, /*#__PURE__*/React.createElement(FieldSmsCode, {\n      id: dynamicField.id,\n      displayName: dynamicField.displayName,\n      valueType: dynamicField.valueType\n    }));\n  }), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  dynamicFields: PropTypes.arrayOf(PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    valueType: PropTypes.string.isRequired\n  })).isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const fields = ['name', 'parserType', 'separator', 'defaultMessage', 'wrongFormatMessage', 'noUserMessage', 'moreThanOneOrgUnitMessage', 'successMessage', // The queries below should be reduced to only the data we need\n      \"program [\\n                    id,\\n                    displayName,\\n                    programTrackedEntityAttributes [\\n                        trackedEntityAttribute [\\n                            :all,\\n                            id,\\n                            displayName\\n                        ]\\n                    ]\\n                ]\", \"smsCodes [\\n                    :all,\\n                    trackedEntityAttribute [\\n                        id,\\n                        displayName,\\n                        valueType\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, ''))\n      };\n    }\n  }\n};\nexport const useCommandData = id => useDataQuery(query, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => ({\n    params,\n    [FIELD_SMS_CODES_NAME]: Object.values(params[FIELD_SMS_CODES_NAME])\n  })\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { ContentLoading } from '../../../shared/components/ContentLoading';\nimport { ContentLoadingError } from '../../../shared/components/ContentLoadingError';\nimport { FormComponent } from './FormComponent';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormTrackedEntityRegistrationParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes: smsCodesOriginal\n  } = data.smsCommand;\n  const smsCodes = smsCodesOriginal.reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.trackedEntityAttribute.id]: smsCode\n  }), {});\n  const initialValues = {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes\n  };\n  const selectedProgramOption = {\n    value: program.id,\n    label: program.displayName\n  };\n  /**\n   * Create usable data for the dynamic fields\n   */\n  // The tracked entity attributes here have the right order for the fields\n\n  const trackedEntityAttributes = program.programTrackedEntityAttributes.map(({\n    trackedEntityAttribute\n  }) => trackedEntityAttribute); // Creating an array with only the data we need to render our dynamic form fields\n\n  const dynamicFields = trackedEntityAttributes.map(trackedEntityAttribute => {\n    const {\n      id,\n      displayName,\n      valueType\n    } = trackedEntityAttribute;\n    const merged = {\n      id,\n      displayName,\n      valueType\n    };\n    const smsCode = smsCodes[id];\n\n    if (smsCode) {\n      // This contains the actual value of the field\n      merged.initialValue = smsCode.code;\n    }\n\n    return merged;\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    dynamicFields: dynamicFields,\n    handleSubmit: handleSubmit,\n    selectedProgramOption: selectedProgramOption,\n    onCancel: onCancel\n  }));\n};\nFormTrackedEntityRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useCommandData = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(query, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nexport const UPDATE_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => params\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(UPDATE_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow, FieldUserGroup } from '../../../shared/components';\nimport { ContentLoading } from '../../../shared/components/ContentLoading';\nimport { ContentLoadingError } from '../../../shared/components/ContentLoadingError';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormUnregisteredParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  } = data.smsCommand;\n  const initialValues = {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup: userGroup.id\n  };\n  const userGroups = [{\n    value: userGroup.id,\n    label: userGroup.name\n  }];\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandunregisteredparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n    disabled: true,\n    userGroups: userGroups\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  })));\n};\nFormUnregisteredParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nimport { parserTypes } from '../components';\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nexport const CREATE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'create',\n\n  /*\n   * @param {Object} args\n   * @param {string} args.parserType\n   * @param {string} args.name\n   * @param {string} args.dataset (id)\n   * @param {string} args.userGroup (id)\n   * @param {string} args.program (id)\n   * @param {string} args.programStage (id)\n   * @returns {Object}\n   */\n  data: ({\n    parserType,\n    name,\n    dataset,\n    userGroup,\n    program,\n    programStage\n  }) => {\n    if (parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value) {\n      return {\n        parserType,\n        name,\n        dataset\n      };\n    }\n\n    if (parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value) {\n      return {\n        parserType,\n        name,\n        userGroup: {\n          id: userGroup\n        }\n      };\n    }\n\n    if (parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program\n      };\n    }\n\n    if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program,\n        programStage\n      };\n    }\n\n    throw new Error(\"You provided an unrecognized parserType \\\"\".concat(parserType, \"\\\"\"));\n  }\n};\nexport const useCreateSmsCommandMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(CREATE_SMS_COMMAND_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_SMS_COMMAND_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteSmsCommandMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_PARSER_TYPE_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: 'parserType',\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandParserTypeQuery = id => useDataQuery(READ_SMS_COMMAND_PARSER_TYPE_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataQuery } from '@dhis2/app-runtime';\nexport const SMS_COMMANDS_QUERY = {\n  smsCommands: {\n    resource: 'smsCommands',\n    pager: false,\n    params: ({\n      ids\n    } = {}) => ({\n      // @TODO: Why is `paging: false` not working?\n      paging: 'false',\n      fields: '*',\n      filter: ids ? \"ids:in:[\".concat(ids.join(','), \"]\") : undefined\n    })\n  }\n};\nexport const useReadSmsCommandsQuery = () => useDataQuery(SMS_COMMANDS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales'; // @TODO(programs): export program options as object\n\nimport { FormRow, PageHeadline, FieldUserGroupWithAutoLoad } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldDataSetWithAutoLoad, FieldCommandName, FIELD_PARSER_NAME, FieldParser, ALL_PROGRAMS, FIELD_PROGRAM_NAME, PROGRAMS_WITH_REGISTRATION, PROGRAMS_WITHOUT_REGISTRATION, FieldProgramWithAutoLoad, FIELD_PROGRAM_STAGE_NAME, FieldProgramStageWithLoadingStates, parserTypes } from '../../components';\nimport { useCreateSmsCommandMutation } from '../../hooks';\nimport styles from './SmsCommandAdd.module.css';\nconst {\n  Form,\n  useForm\n} = ReactFinalForm;\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nexport const SMS_COMMAND_FORM_NEW_PATH = '/sms-config/new';\n\nconst useResetFormFields = () => {\n  const form = useForm();\n  const [prevValues, setPrevValues] = useState(form.getState().values);\n  useEffect(() => form.subscribe(({\n    values\n  }) => {\n    form.batch(() => {\n      const parserType = values[FIELD_PARSER_NAME];\n      const program = values[FIELD_PROGRAM_NAME];\n      const programStage = values[FIELD_PROGRAM_STAGE_NAME];\n      const prevProgram = prevValues[FIELD_PROGRAM_NAME];\n      const prevParserType = prevValues[FIELD_PARSER_NAME];\n      const programChanged = prevProgram && program !== prevProgram;\n      const parserTypeChanged = prevParserType && parserType !== prevParserType;\n\n      if ( // only unset program stage if one exists already\n      programStage && (programChanged || parserTypeChanged)) {\n        form.change(FIELD_PROGRAM_STAGE_NAME, null);\n      }\n    });\n    setPrevValues(values);\n  }, {\n    values: true\n  }), [prevValues]);\n}; // undefined = all, false = program.programType --> WITHOUT_REGISTRATION\n\n\nconst shouldProgramsBeWithRegistration = parserType => {\n  // EVENT_REGISTRATION uses event programs\n  if (parserType === EVENT_REGISTRATION_PARSER.value) {\n    return PROGRAMS_WITHOUT_REGISTRATION;\n  } // This is for programs of type tracker,\n  // which can have multiple program stages\n\n\n  if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value) {\n    return PROGRAMS_WITH_REGISTRATION;\n  } // Unrelated yet, but in case all program stages are need in the future\n\n\n  return ALL_PROGRAMS;\n};\n\nconst ActualForm = ({\n  handleSubmit,\n  submitting\n}) => {\n  // This is required to unset form fields that depend\n  // on the selected value of a previous field\n  useResetFormFields();\n  const history = useHistory();\n  const form = useForm();\n  const {\n    values\n  } = form.getState();\n  const parserType = values[FIELD_PARSER_NAME];\n  const program = values[FIELD_PROGRAM_NAME];\n  const showDataSetField = parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value;\n  const showUserGroupField = parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value;\n  const showProgramField = parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value;\n  const showProgramStageField = parserType === EVENT_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value;\n  const registration = shouldProgramsBeWithRegistration(parserType);\n  const disableProgramStage = parserType === EVENT_REGISTRATION_PARSER.value;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add command')), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, null)), showDataSetField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSetWithAutoLoad, {\n    required: true\n  })), showUserGroupField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroupWithAutoLoad, {\n    required: true\n  })), showProgramField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramWithAutoLoad, {\n    required: true,\n    registration: registration\n  })), showProgramStageField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageWithLoadingStates, {\n    disabled: disableProgramStage,\n    required: true,\n    programId: (program === null || program === void 0 ? void 0 : program.id) || '',\n    parserType: parserType,\n    helpText: disableProgramStage ? i18n.t('Automatically selected by selecting a program') : undefined\n  })), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting\n  }, i18n.t('Add command')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.goBack()\n  }, i18n.t('Cancel')))));\n};\n\nActualForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\nexport const SmsCommandAdd = () => {\n  const history = useHistory();\n  const [createSmsCommand] = useCreateSmsCommandMutation({\n    onComplete: () => history.push('/sms-command')\n  });\n\n  const onSubmit = values => createSmsCommand(values);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandformnew')\n  }, /*#__PURE__*/React.createElement(Form, {\n    destroyOnUnregister: true,\n    onSubmit: onSubmit\n  }, ({\n    handleSubmit,\n    submitting\n  }) => /*#__PURE__*/React.createElement(ActualForm, {\n    handleSubmit: handleSubmit,\n    submitting: submitting\n  })));\n};","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { CancelDialog, PageHeadline } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_PARSER_NAME, FormAlertParser, FormEventRegistrationParser, FormJ2meParser, FormKeyValueParser, FormProgramStageDataEntryParser, FormTrackedEntityRegistrationParser, FormUnregisteredParser, parserTypes } from '../../components';\nimport { useReadSmsCommandParserTypeQuery } from '../../hooks';\nimport styles from './SmsCommandEdit.module.css';\nexport const SMS_COMMAND_FORM_EDIT_PATH_STATIC = '/sms-config/edit';\nexport const SMS_COMMAND_FORM_EDIT_PATH = \"\".concat(SMS_COMMAND_FORM_EDIT_PATH_STATIC, \"/:id\");\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\n\nconst isParserType = (parserType, parser) => parserType === parser.value;\n\nconst getSmsCommandEditFormComponent = parserType => {\n  const isParser = isParserType.bind(null, parserType);\n\n  if (!parserType) {\n    return null;\n  }\n\n  if (isParser(KEY_VALUE_PARSER)) {\n    return FormKeyValueParser;\n  }\n\n  if (isParser(J2ME_PARSER)) {\n    return FormJ2meParser;\n  }\n\n  if (isParser(ALERT_PARSER)) {\n    return FormAlertParser;\n  }\n\n  if (isParser(PROGRAM_STAGE_DATAENTRY_PARSER)) {\n    return FormProgramStageDataEntryParser;\n  }\n\n  if (isParser(UNREGISTERED_PARSER)) {\n    return FormUnregisteredParser;\n  }\n\n  if (isParser(EVENT_REGISTRATION_PARSER)) {\n    return FormEventRegistrationParser;\n  }\n\n  if (isParser(TRACKED_ENTITY_REGISTRATION_PARSER)) {\n    return FormTrackedEntityRegistrationParser;\n  }\n\n  return null;\n};\n\nexport const SmsCommandEdit = () => {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useReadSmsCommandParserTypeQuery(id);\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n\n  const onAfterChange = () => history.push('/sms-command');\n\n  const onCancel = pristine => pristine ? history.goBack() : setShowCancelDialog(true);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading commands');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  const parserType = data === null || data === void 0 ? void 0 : data.smsCommand[FIELD_PARSER_NAME];\n  const FormComponent = getSmsCommandEditFormComponent(parserType);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('views-smscommandformedit')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit command')), FormComponent && /*#__PURE__*/React.createElement(FormComponent, {\n    commandId: id,\n    onCancel: onCancel,\n    onAfterChange: onAfterChange\n  }), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-command'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }), !parserType && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Unrecognised parser type')\n  }, i18n.t('Could not find the requested parser type')));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './Paragraph.module.css';\nexport const Paragraph = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.paragraph,\n  \"data-test\": dataTest('text-paragraph')\n}, children);\nParagraph.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { Button, Checkbox, Table, TableHead, TableBody, TableRow, TableRowHead, TableCell, TableCellHead, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { ListActions, DeleteConfirmationDialog, PageHeadline } from '../../../shared/components';\nimport { Paragraph } from '../../../shared/components/text';\nimport { dataTest } from '../../../shared/utils';\nimport { parserTypes } from '../../components';\nimport { useDeleteSmsCommandMutation, useReadSmsCommandsQuery } from '../../hooks';\nimport styles from './SmsCommandList.module.css';\nexport const SMS_COMMAND_LIST_LABEL = i18n.t('Commands');\nexport const SMS_COMMAND_LIST_PATH = '/sms-config';\n\nconst getLabelByParserTypes = parserType => {\n  const type = Object.values(parserTypes).find(({\n    value\n  }) => value === parserType);\n  return (type === null || type === void 0 ? void 0 : type.label) || parserType;\n};\n\nexport const SmsCommandList = () => {\n  var _data$smsCommands2, _data$smsCommands2$sm, _data$smsCommands3, _data$smsCommands3$sm, _data$smsCommands4, _data$smsCommands4$sm;\n\n  const history = useHistory();\n\n  const onAddCommandClick = () => history.push('sms-command/new');\n\n  const [checkedSmsCommands, setCheckedSmsCommands] = useState([]);\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const {\n    loading: loadingReadSmsCommands,\n    error: errorReadSmsCommands,\n    data,\n    refetch\n  } = useReadSmsCommandsQuery();\n  const [deleteSmsCommands, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteSmsCommandMutation();\n\n  if (loadingReadSmsCommands) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = errorReadSmsCommands || errorDelete;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const onToggleCallChange = () => {\n    var _data$smsCommands;\n\n    const smsCommands = data === null || data === void 0 ? void 0 : (_data$smsCommands = data.smsCommands) === null || _data$smsCommands === void 0 ? void 0 : _data$smsCommands.smsCommands;\n\n    if (!smsCommands) {\n      return;\n    }\n\n    if (checkedSmsCommands.length === smsCommands.length) {\n      setCheckedSmsCommands([]);\n    } else {\n      setCheckedSmsCommands(smsCommands.map(({\n        id,\n        displayName\n      }) => ({\n        id,\n        displayName\n      })));\n    }\n  };\n\n  const toggleSmsCommand = smsCommand => {\n    const {\n      id\n    } = smsCommand;\n\n    if (checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId)) {\n      const index = checkedSmsCommands.findIndex(({\n        id: checkedId\n      }) => id === checkedId);\n      return setCheckedSmsCommands([...checkedSmsCommands.slice(0, index), ...checkedSmsCommands.slice(index + 1)]);\n    }\n\n    return setCheckedSmsCommands([...checkedSmsCommands, smsCommand]);\n  };\n\n  const onDeleteClick = async () => {\n    const ids = checkedSmsCommands.map(({\n      id\n    }) => id);\n    await deleteSmsCommands({\n      ids\n    });\n    setCheckedSmsCommands([]);\n    setShowDeleteConfirmationDialog(false);\n    refetch();\n  };\n\n  const allChecked = checkedSmsCommands.length === (data === null || data === void 0 ? void 0 : (_data$smsCommands2 = data.smsCommands) === null || _data$smsCommands2 === void 0 ? void 0 : (_data$smsCommands2$sm = _data$smsCommands2.smsCommands) === null || _data$smsCommands2$sm === void 0 ? void 0 : _data$smsCommands2$sm.length);\n  const hasCommands = (data === null || data === void 0 ? void 0 : (_data$smsCommands3 = data.smsCommands) === null || _data$smsCommands3 === void 0 ? void 0 : (_data$smsCommands3$sm = _data$smsCommands3.smsCommands) === null || _data$smsCommands3$sm === void 0 ? void 0 : _data$smsCommands3$sm.length) > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandlist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('SMS commands process SMS messages received by a DHIS2 instance, taking certain actions depending on the command and message content. Multiple SMS commands can be set up to process and handle data in multiple ways. Add and configure SMS commands below. Read about SMS commands in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add command'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"views-smscommandlist\",\n    onAddClick: onAddCommandClick,\n    onDeleteClick: () => setShowDeleteConfirmationDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedSmsCommands.length || loadingDelete\n  }), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteConfirmationDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected commands?')), /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('views-smscommandlist-commandtable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: allChecked,\n    onChange: onToggleCallChange\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Sms command')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Parser')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, hasCommands ? data === null || data === void 0 ? void 0 : (_data$smsCommands4 = data.smsCommands) === null || _data$smsCommands4 === void 0 ? void 0 : (_data$smsCommands4$sm = _data$smsCommands4.smsCommands) === null || _data$smsCommands4$sm === void 0 ? void 0 : _data$smsCommands4$sm.map(({\n    id,\n    displayName,\n    parserType\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    key: id\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: !!checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId),\n    onChange: () => toggleSmsCommand({\n      id,\n      displayName\n    })\n  })), /*#__PURE__*/React.createElement(TableCell, null, displayName), /*#__PURE__*/React.createElement(TableCell, null, getLabelByParserTypes(parserType)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.editButtonCell\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push(\"sms-command/\".concat(id))\n  }, i18n.t('Edit'))))) : /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: \"4\",\n    className: styles.noResults\n  }, i18n.t('No commands to display'))))));\n};","import React from 'react';\nimport { TemplateSidebarNavContent } from '../shared';\nimport { SmsCommandList } from '../sms-command';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(SmsCommandList, null));\n\nexport default RouteSmsCommand;","import React from 'react';\nimport { TemplateSidebarNavContent } from '../../shared';\nimport { SmsCommandEdit } from '../../sms-command';\n\nconst RouteSmsCommandEdit = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(SmsCommandEdit, null));\n\nexport default RouteSmsCommandEdit;","import React from 'react';\nimport { TemplateSidebarNavContent } from '../../shared';\nimport { SmsCommandAdd } from '../../sms-command';\n\nconst RouteSmsCommandNew = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(SmsCommandAdd, null));\n\nexport default RouteSmsCommandNew;","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './ActionAddKeyValuePair.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const ActionAddKeyValuePair = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addKeyValueToFormState = () => {\n    const {\n      parameters\n    } = getState().values;\n    change('parameters', [...parameters, {\n      header: false,\n      encode: false,\n      key: '',\n      value: '',\n      confidential: false\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: addKeyValueToFormState,\n    dataTest: dataTest('gateways-gatewayaddkeyvaluepair')\n  }, i18n.t('Add key value pair'));\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldAuthToken = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayauthtoken'),\n  name: \"authToken\",\n  label: i18n.t('Auth token'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'BIND_TX',\n  value: 'BIND_TX'\n}, {\n  label: 'BIND_RX',\n  value: 'BIND_RX'\n}, {\n  label: 'BIND_TRX',\n  value: 'BIND_TRX'\n}];\nexport const FieldBindType = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaybindtype'),\n  name: \"bindType\",\n  label: i18n.t('Bind type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCompressed = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaycompressed'),\n  name: \"compressed\",\n  type: \"checkbox\",\n  label: i18n.t('Compressed'),\n  component: CheckboxFieldFF,\n  defaultValue: false\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldConfigurationTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayconfigurationtemplate'),\n  name: \"configurationTemplate\",\n  label: i18n.t('Configuration template'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue),\n  helpText: i18n.t('Please refer to the documentation for possible values')\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nconst optionApplicationJson = {\n  label: i18n.t('Application/json'),\n  value: 'APPLICATION_JSON'\n};\nconst optionApplicationXml = {\n  label: i18n.t('Application/xml'),\n  value: 'APPLICATION_XML'\n};\nconst optionFormUrlEncoded = {\n  label: i18n.t('Form url encoded'),\n  value: 'FORM_URL_ENCODED'\n};\nconst optionTextPlain = {\n  label: i18n.t('Plain text'),\n  value: 'TEXT_PLAIN'\n};\nconst options = [optionApplicationJson, optionApplicationXml, optionFormUrlEncoded, optionTextPlain];\nexport const FieldContentType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaycontenttype'),\n  name: \"contentType\",\n  label: i18n.t('Content type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  initialValue: optionApplicationJson.value\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayname'),\n  name: \"name\",\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldHost = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayhost'),\n  name: \"host\",\n  label: i18n.t('Host'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm, composeValidators, string, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const createFieldGatewayKeyValuePairValueName = index => \"parameters[\".concat(index, \"].value\");\nexport const ValueField = ({\n  index\n}) => {\n  const {\n    confidential\n  } = useFormState().values.parameters[index];\n  return /*#__PURE__*/React.createElement(Field, {\n    type: confidential ? 'password' : 'text',\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-value'),\n    name: createFieldGatewayKeyValuePairValueName(index),\n    label: i18n.t('Value'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  });\n};\nValueField.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CheckboxFieldFF, InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './FieldKeyValuePair.module.css';\nimport { ValueField } from './ValueField';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const FieldKeyValuePair = ({\n  index\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeKeyValueFromFormState = index => {\n    const {\n      parameters\n    } = getState().values;\n\n    if (index === 0) {\n      change('parameters', parameters.slice(1));\n    } else {\n      change('parameters', [...parameters.slice(0, index), ...parameters.slice(index + 1)]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('gateways-gatewaykeyvaluepair')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textInputs\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-key'),\n    className: styles.keyInput,\n    name: \"parameters[\".concat(index, \"].key\"),\n    label: i18n.t('Key'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.valueInput\n  }, /*#__PURE__*/React.createElement(ValueField, {\n    index: index\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.checkboxGroup\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isheader'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].header\"),\n    label: i18n.t('Send as header'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isencoded'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].encode\"),\n    label: i18n.t('Encode'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isconfidential'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].confidential\"),\n    label: i18n.t('Confidential'),\n    component: CheckboxFieldFF\n  })), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-remove'),\n    onClick: () => removeKeyValueFromFormState(index)\n  }, i18n.t('Remove key value pair')));\n};\nFieldKeyValuePair.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'ISDN',\n  value: 'ISDN'\n}, {\n  label: 'DATA',\n  value: 'DATA'\n}, {\n  label: 'TELEX',\n  value: 'TELEX'\n}, {\n  label: 'LAND_MOBILE',\n  value: 'LAND_MOBILE'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'PRIVATE',\n  value: 'PRIVATE'\n}, {\n  label: 'ERMES',\n  value: 'ERMES'\n}, {\n  label: 'INTERNET',\n  value: 'INTERNET'\n}, {\n  label: 'WAP',\n  value: 'WAP'\n}];\nexport const FieldNumberPlanIndicator = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaynumberplanindicator'),\n  name: \"numberPlanIndicator\",\n  label: i18n.t('Number plan indicator'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PASSWORD_NAME = 'password';\nexport const FIELD_PASSWORD_LABEL = i18n.t('Password');\nexport const FieldPassword = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('gateways-fieldgatewaypassword'),\n  name: FIELD_PASSWORD_NAME,\n  label: FIELD_PASSWORD_LABEL,\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, createEqualTo, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_PASSWORD_LABEL, FIELD_PASSWORD_NAME } from '../FieldPassword';\nconst {\n  Field\n} = ReactFinalForm;\nconst equalToPassword = createEqualTo(FIELD_PASSWORD_NAME, FIELD_PASSWORD_LABEL);\nexport const FIELD_PASSWORD_CONFIRMATION_NAME = 'password-confirmation';\nexport const FieldPasswordConfirmation = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('gateways-fieldgatewaypasswordconfirmation'),\n  name: FIELD_PASSWORD_CONFIRMATION_NAME,\n  label: i18n.t('Confirm password'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue, equalToPassword)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, integer } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldPort = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayport'),\n  name: \"port\",\n  label: i18n.t('Port'),\n  component: InputFieldFF,\n  validate: composeValidators(integer, hasValue)\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSendUrlParameters = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('gateways-fieldgatewaysendurlparameters'),\n  name: \"sendUrlParameters\",\n  label: i18n.t('Send url parameters'),\n  component: CheckboxFieldFF\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemId = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaysystemid'),\n  name: \"systemId\",\n  label: i18n.t('System id'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaysystemtype'),\n  name: \"systemType\",\n  label: i18n.t('System type'),\n  component: InputFieldFF,\n  defaultValue: \"\"\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'INTERNATIONAL',\n  value: 'INTERNATIONAL'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'NETWORK_SPECIFIC',\n  value: 'NETWORK_SPECIFIC'\n}, {\n  label: 'SUBSCRIBER_NUMBER',\n  value: 'SUBSCRIBER_NUMBER'\n}, {\n  label: 'ALPHANUMERIC',\n  value: 'ALPHANUMERIC'\n}, {\n  label: 'ABBREVIATED',\n  value: 'ABBREVIATED'\n}];\nexport const FieldTypeOfNumber = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaytypeofnumber'),\n  name: \"typeOfNumber\",\n  label: i18n.t('Type of number'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, url } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUrlTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayurltemplate'),\n  name: \"urlTemplate\",\n  label: i18n.t('Url template'),\n  component: InputFieldFF,\n  validate: composeValidators(url, hasValue)\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUseGet = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('gateways-fieldgatewayuseget'),\n  name: \"useGet\",\n  label: i18n.t('Use GET'),\n  component: CheckboxFieldFF,\n  helpText: i18n.t('Use GET instead of POST to send data to gateway')\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUsername = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayusername'),\n  name: \"username\",\n  label: i18n.t('User name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldPassword } from '../FieldPassword';\nimport { FieldPasswordConfirmation } from '../FieldPasswordConfirmation';\nimport { FieldUsername } from '../FieldUsername';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormBulkSMS = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaybulksmsform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPasswordConfirmation, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaybulksmsform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormBulkSMS.defaultProps = {\n  initialValues: {}\n};\nFormBulkSMS.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldAuthToken } from '../FieldAuthToken';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate';\nimport { FieldUsername } from '../FieldUsername';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormClickatell = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewayclickatellform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldAuthToken, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewayclickatellform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormClickatell.defaultProps = {\n  initialValues: {}\n};\nFormClickatell.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow, PageSubHeadline } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { ActionAddKeyValuePair } from '../ActionAddKeyValuePair';\nimport { FieldConfigurationTemplate } from '../FieldConfigurationTemplate';\nimport { FieldContentType } from '../FieldContentType';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldKeyValuePair } from '../FieldKeyValuePair';\nimport { FieldSendUrlParameters } from '../FieldSendUrlParameters';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate';\nimport { FieldUseGet } from '../FieldUseGet';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormGeneric = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    values,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaygenericform')\n  }, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Gateway setup')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfigurationTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldContentType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseGet, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSendUrlParameters, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Key value pairs')), values.parameters.map((_, index) => /*#__PURE__*/React.createElement(FieldKeyValuePair, {\n    index: index,\n    key: index\n  })), /*#__PURE__*/React.createElement(ActionAddKeyValuePair, null), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    dataTest: dataTest('forms-gatewaygenericform-submit'),\n    disabled: submitting,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormGeneric.defaultProps = {\n  initialValues: {\n    parameters: []\n  }\n};\nFormGeneric.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldBindType } from '../FieldBindType';\nimport { FieldCompressed } from '../FieldCompressed';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldHost } from '../FieldHost';\nimport { FieldNumberPlanIndicator } from '../FieldNumberPlanIndicator';\nimport { FieldPassword } from '../FieldPassword';\nimport { FieldPort } from '../FieldPort';\nimport { FieldSystemId } from '../FieldSystemId';\nimport { FieldSystemType } from '../FieldSystemType';\nimport { FieldTypeOfNumber } from '../FieldTypeOfNumber';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormSMPP = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaysmppform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemId, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldHost, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNumberPlanIndicator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldTypeOfNumber, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldBindType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPort, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompressed, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaysmppform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormSMPP.defaultProps = {\n  initialValues: {}\n};\nFormSMPP.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","/**\n * This the shape of the additional fields\n * that can be added to a generic config\n *\n * @typedef {Object} Parameter\n * @prop {string} key\n * @prop {string} value\n * @prop {bool} header\n * @prop {bool} encode\n * @prop {bool} confidential\n */\n\n/**\n * @param {Object} args\n * @param {string} args.configurationTemplate\n * @param {string} args.contentType\n * @param {string} args.name\n * @param {string} args.urlTemplate\n * @param {bool} args.sendUrlParameters\n * @param {bool} args.useGet\n * @param {Parameter[]} args.parameters\n *\n * @returns {Object}\n */\nexport const createGenericGateWayDataFromVariables = ({\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n}) => ({\n  type: 'http',\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n});","export const GENERIC_FORM = 'http';\nexport const BULK_SMS_FORM = 'bulksms';\nexport const CLICKATELL_FORM = 'clickatell';\nexport const SMPP_FORM = 'smpp';","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useCreateBulkSMSGatewayMutation = () => useDataMutation(CREATE_BULK_SMS_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useCreateClickatellGatewayMutation = () => useDataMutation(CREATE_CLICKATELL_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nimport { createGenericGateWayDataFromVariables } from '../../utils';\nexport const CREATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useCreateGenericGatewayMutation = () => useDataMutation(CREATE_GENERIC_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useCreateSMPPGatewayMutation = () => useDataMutation(CREATE_SMPP_GATEWAY_MUTATION);","import { SingleSelectField, SingleSelectOption, NoticeBox } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { FormRow, PageHeadline } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FormBulkSMS, FormClickatell, FormGeneric, FormSMPP } from '../../components';\nimport { GENERIC_FORM, BULK_SMS_FORM, CLICKATELL_FORM, SMPP_FORM } from '../../utils';\nimport styles from './SmsGatewayAdd.module.css';\nimport { useCreateBulkSMSGatewayMutation } from './useCreateBulkSMSGatewayMutation';\nimport { useCreateClickatellGatewayMutation } from './useCreateClickatellGatewayMutation';\nimport { useCreateGenericGatewayMutation } from './useCreateGenericGatewayMutation';\nimport { useCreateSMPPGatewayMutation } from './useCreateSMPPGatewayMutation';\nexport const GATEWAY_CONFIG_FORM_NEW_PATH = '/sms-gateway/new';\nexport const SmsGatewayAdd = () => {\n  const history = useHistory();\n  const [visibleForm, setVisibleForm] = useState(GENERIC_FORM);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useCreateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useCreateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useCreateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useCreateSMPPGatewayMutation();\n  const error = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst saving the gateway');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-gatewayconfigformnew')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const onSubmit = async values => {\n    try {\n      if (visibleForm === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (visibleForm === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (visibleForm === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (visibleForm === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const onCancelClick = () => history.push('/sms-gateway');\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformnew'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Type'),\n    onChange: ({\n      selected\n    }) => setVisibleForm(selected),\n    selected: visibleForm,\n    dataTest: dataTest('views-gatewayconfigformnew-gatewaytype')\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: GENERIC_FORM,\n    label: i18n.t('Generic')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: BULK_SMS_FORM,\n    label: i18n.t('BulkSMS')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: CLICKATELL_FORM,\n    label: i18n.t('Clickatell')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: SMPP_FORM,\n    label: i18n.t('SMPP')\n  }))), /*#__PURE__*/React.createElement(FormRow, null, visibleForm === GENERIC_FORM && /*#__PURE__*/React.createElement(FormGeneric, {\n    onSubmit: onSubmit,\n    onCancelClick: onCancelClick\n  }), visibleForm === BULK_SMS_FORM && /*#__PURE__*/React.createElement(FormBulkSMS, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === CLICKATELL_FORM && /*#__PURE__*/React.createElement(FormClickatell, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === SMPP_FORM && /*#__PURE__*/React.createElement(FormSMPP, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  })));\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n *   * Api does not return password of BulkSMS gateway configs\n *     -> https://jira.dhis2.org/browse/DHIS2-9248\n */\n\nexport const GATEWAY_QUERY = {\n  gateway: {\n    resource: 'gateways',\n    id: ({\n      id\n    }) => id\n  }\n};\nexport const useReadGatewayQuery = id => useDataQuery(GATEWAY_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\n/**\n * @TODO\n *   * Create jira issue: Make `useDataMutation` accept function for \"id\"\n */\n\n/**\n * @param {Object} query\n * @returns {Object}\n */\n\nexport const useUpdateGatewayMutation = query => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n\n  const doFetch = variables => {\n    const updatedQuery = { ...query,\n      id: variables.id\n    };\n    setLoading(true);\n    setError(null);\n    return engine.mutate(updatedQuery, {\n      variables\n    }).then(data => {\n      setLoading(false);\n      return data;\n    }).catch(error => {\n      setLoading(false);\n      setError(error);\n      throw error;\n    });\n  };\n\n  return [doFetch, {\n    loading,\n    error\n  }];\n};","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useUpdateBulkSMSGatewayMutation = () => useUpdateGatewayMutation(UPDATE_BULK_SMS_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useUpdateClickatellGatewayMutation = () => useUpdateGatewayMutation(UPDATE_CLICKATELL_GATEWAY_MUTATION);","import { createGenericGateWayDataFromVariables } from '../../utils';\nimport { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'replace',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useUpdateGenericGatewayMutation = () => useUpdateGatewayMutation(UPDATE_GENERIC_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useUpdateSMPPGatewayMutation = () => useUpdateGatewayMutation(UPDATE_SMPP_GATEWAY_MUTATION);","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { CancelDialog, PageHeadline } from '../../../shared/components';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_PASSWORD_CONFIRMATION_NAME, FIELD_PASSWORD_NAME, FormBulkSMS, FormClickatell, FormGeneric, FormSMPP } from '../../components';\nimport { GENERIC_FORM, BULK_SMS_FORM, CLICKATELL_FORM, SMPP_FORM } from '../../utils';\nimport styles from './SmsGatewayEdit.module.css';\nimport { useReadGatewayQuery } from './useReadGatewayQuery';\nimport { useUpdateBulkSMSGatewayMutation } from './useUpdateBulkSMSGatewayMutation';\nimport { useUpdateClickatellGatewayMutation } from './useUpdateClickatellGatewayMutation';\nimport { useUpdateGenericGatewayMutation } from './useUpdateGenericGatewayMutation';\nimport { useUpdateSMPPGatewayMutation } from './useUpdateSMPPGatewayMutation'; // @TODO(gateway types): wrap export with object\n\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC = '/sms-gateway/edit';\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH = \"\".concat(GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC, \"/:id\");\n\nconst getFormComponent = gatewayType => {\n  if (gatewayType === GENERIC_FORM) {\n    return FormGeneric;\n  }\n\n  if (gatewayType === BULK_SMS_FORM) {\n    return FormBulkSMS;\n  }\n\n  if (gatewayType === CLICKATELL_FORM) {\n    return FormClickatell;\n  }\n\n  if (gatewayType === SMPP_FORM) {\n    return FormSMPP;\n  }\n\n  throw new Error(\"The gateway type does not exist, got \\\"\".concat(gatewayType, \"\\\"\"));\n};\n\nconst getInitialValues = gateway => {\n  if (gateway.type === BULK_SMS_FORM) {\n    return { ...gateway,\n      [FIELD_PASSWORD_CONFIRMATION_NAME]: gateway[FIELD_PASSWORD_NAME]\n    };\n  }\n\n  return gateway;\n};\n\nexport const SmsGatewayEdit = () => {\n  var _data$gateway;\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const {\n    loading,\n    error: loadError,\n    data: jsonData\n  } = useReadGatewayQuery(id);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useUpdateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useUpdateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useUpdateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useUpdateSMPPGatewayMutation();\n  const saveError = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (loadError) {\n    const msg = i18n.t('Something went wrong whilst loading gateways');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadError.message));\n  }\n\n  const data =\n  /**\n   * @TODO:\n   *   * The response does not contain the right content type header\n   *     -> https://jira.dhis2.org/browse/DHIS2-9252\n   */\n  jsonData && typeof jsonData.gateway === 'string' ? {\n    gateway: JSON.parse(jsonData.gateway)\n  } : jsonData;\n  const gatewayType = data === null || data === void 0 ? void 0 : (_data$gateway = data.gateway) === null || _data$gateway === void 0 ? void 0 : _data$gateway.type;\n\n  const onSubmit = async formValues => {\n    const values = { ...formValues,\n      id: data.gateway.uid\n    };\n\n    try {\n      if (values.type === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (values.type === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (values.type === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (values.type === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const FormComponent = getFormComponent(gatewayType);\n  const initialValues = gatewayType && getInitialValues(data.gateway);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformedit'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit gateway')), gatewayType ? /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformedit-formcontainer'),\n    \"data-gateway-id\": data.gateway.uid\n  }, saveError && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving gateways')\n  }, saveError.message), /*#__PURE__*/React.createElement(FormComponent, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    onCancelClick: pristine => pristine ? history.push('/sms-gateway') : setShowCancelDialog(true)\n  })) : /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Gateway not found')\n  }, i18n.t('The requested gateway could not be loaded')), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-gateway'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }));\n};","import i18n from '../../../locales';\n/**\n * @param {string} type\n * @returns {string}\n */\n\nexport const getTypeLabelByType = type => {\n  if (type === 'bulksms') {\n    return i18n.t('BulkSMS');\n  }\n\n  if (type === 'clickatell') {\n    return i18n.t('Clickatell');\n  }\n\n  if (type === 'http' || !type) {\n    return i18n.t('Generic');\n  }\n\n  return type;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Checkbox, Table, TableHead, TableBody, TableRowHead, TableCellHead, TableRow, TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './GatewaysTable.module.css';\nimport { getTypeLabelByType } from './getTypeLabelByType';\nexport const GatewaysTable = ({\n  allGatewaysChecked,\n  checkedGateways,\n  gateways,\n  onGatewayToggle,\n  onToggleAll,\n  onMakeDefaultClick\n}) => {\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('gateways-gatewaystable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, {\n    dataTest: dataTest('gateways-gatewaystable-checkall')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: onToggleAll,\n    checked: allGatewaysChecked\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, gateways.map(gateway => /*#__PURE__*/React.createElement(TableRow, {\n    key: gateway.uid,\n    dataTest: dataTest('gateways-gatewaystable-row')\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkboxCell,\n    dataTest: dataTest('gateways-gatewaystable-checkbox')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    value: gateway.uid,\n    onChange: () => onGatewayToggle(gateway.uid),\n    checked: checkedGateways.includes(gateway.uid),\n    dataTest: dataTest('gateways-gatewaystable-id')\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('gateways-gatewaystable-name')\n  }, gateway.name), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.typeCell,\n    dataTest: dataTest('gateways-gatewaystable-type')\n  }, getTypeLabelByType(gateway.type)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.defaultCell\n  }, !gateway.isDefault ? /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('gateways-gatewaystable-makedefault'),\n    onClick: () => onMakeDefaultClick(gateway.uid),\n    className: styles.makeDefaultButton\n  }, i18n.t('Make default')) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.isDefaultText,\n    \"data-test\": dataTest('gateways-gatewaystable-isdefault')\n  }, i18n.t('Default gateway'))), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('gateways-gatewaystable-actions'),\n    className: styles.editCell\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    className: styles.rowActions\n  }, /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('gateways-gatewaystable-edit'),\n    onClick: () => {\n      history.push(\"sms-gateway/\".concat(gateway.uid));\n    }\n  }, i18n.t('Edit'))))))));\n};\nGatewaysTable.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    isDefault: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired\n  })).isRequired,\n  onGatewayToggle: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  onToggleAll: PropTypes.func.isRequired,\n  allGatewaysChecked: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../../shared/utils';\nimport { GatewaysTable } from './GatewaysTable';\nimport styles from './List.module.css';\nexport const List = ({\n  checkedGateways,\n  gateways,\n  setCheckedGateways,\n  onMakeDefaultClick,\n  processing\n}) => {\n  const allGatewaysChecked = checkedGateways.length === gateways.length;\n\n  const toggleGateway = id => {\n    if (checkedGateways.includes(id)) {\n      const index = checkedGateways.findIndex(curId => curId === id);\n      const newCheckedGateways = index === 0 ? checkedGateways.slice(1) : [...checkedGateways.slice(0, index), ...checkedGateways.slice(index + 1)];\n      setCheckedGateways(newCheckedGateways);\n    } else {\n      setCheckedGateways([...checkedGateways, id]);\n    }\n  };\n\n  const toggleAll = () => {\n    if (!allGatewaysChecked) {\n      const allGatewayIds = gateways.map(({\n        uid\n      }) => uid);\n      setCheckedGateways(allGatewayIds);\n    } else {\n      setCheckedGateways([]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('gateways-gatewaylist')\n  }, processing && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.processingMessage\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loadingContainer\n  }, /*#__PURE__*/React.createElement(CircularLoader, null))), /*#__PURE__*/React.createElement(GatewaysTable, {\n    allGatewaysChecked: allGatewaysChecked,\n    gateways: gateways,\n    checkedGateways: checkedGateways,\n    onGatewayToggle: toggleGateway,\n    onMakeDefaultClick: onMakeDefaultClick,\n    onToggleAll: toggleAll\n  }));\n};\nList.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    isDefault: PropTypes.bool\n  })).isRequired,\n  setCheckedGateways: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  processing: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_GATEWAY_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteGatewaysMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The endpoint requires a `.json`, ignores \"Accept\" header\n *     -> https://jira.dhis2.org/browse/DHIS2-9250\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n */\n\nexport const GATEWAYS_QUERY = {\n  gateways: {\n    resource: 'gateways.json',\n    params: ({\n      fields,\n      filter\n    }) => {\n      const params = {};\n\n      if (fields) {\n        params.fields = fields;\n      }\n\n      if (filter) {\n        params.filter = filter;\n      }\n\n      return params;\n    }\n  }\n};\n/**\n * @param {string[]} [ids]\n * @return {Object}\n */\n\nexport const useReadGatewaysQuery = ids => {\n  var _parsedData$gateways;\n\n  /*\n   * @TODO(filtering): Currently the `id:in:[...]` doesn't work\n   *   -> https://jira.dhis2.org/browse/DHIS2-9259\n   *\n   * This is because filtering doesn't work right now\n   * So there's no need for sending any variables\n   */\n  const filter = \"id:in:[\".concat(ids === null || ids === void 0 ? void 0 : ids.join(','), \"]\");\n  const variables = false && ids ? {\n    filter\n  } : {}; // eslint-disable-line no-constant-condition\n\n  const {\n    data: jsonData,\n    ...rest\n  } = useDataQuery(GATEWAYS_QUERY, {\n    variables\n  });\n  const parsedData =\n  /**\n   * @TODO:\n   *   Create Jira issue for:\n   *   The response does not contain the right content type header\n   */\n  jsonData && typeof jsonData.gateways === 'string' ? {\n    gateways: JSON.parse(jsonData.gateways)\n  } : jsonData;\n  const data = ids && (parsedData === null || parsedData === void 0 ? void 0 : (_parsedData$gateways = parsedData.gateways) === null || _parsedData$gateways === void 0 ? void 0 : _parsedData$gateways.gateways) ? {\n    gateways: {\n      gateways: parsedData.gateways.gateways.filter(({\n        uid\n      }) => ids.includes(uid))\n    }\n  } : parsedData;\n  return {\n    data,\n    ...rest\n  };\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const SET_DEFAULT_GATEWAY_MUTATION = {\n  resource: 'gateways/default',\n  type: 'replace',\n  id: ({\n    id\n  }) => id\n};\nexport const useSetDefaultGatewayMutation = () => useDataMutation(SET_DEFAULT_GATEWAY_MUTATION);","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { ListActions, PageHeadline } from '../../../shared/components';\nimport { DeleteConfirmationDialog } from '../../../shared/components/DeleteConfirmationDialog';\nimport { Paragraph } from '../../../shared/components/text';\nimport { dataTest } from '../../../shared/utils';\nimport { List } from './List';\nimport styles from './SmsGatewayList.module.css';\nimport { useDeleteGatewaysMutation } from './useDeleteGatewaysMutation';\nimport { useReadGatewaysQuery } from './useReadGatewaysQuery';\nimport { useSetDefaultGatewayMutation } from './useSetDefaultGatewayMutation';\nexport const GATEWAY_CONFIG_LIST_PATH = '/sms-gateway';\nexport const GATEWAY_CONFIG_LIST_LABEL = 'Gateway configuration';\nexport const SmsGatewayList = () => {\n  var _data$gateways, _data$gateways$gatewa;\n\n  const history = useHistory();\n\n  const onAddGatewayClick = () => history.push('/sms-gateway/new');\n\n  const [checkedGateways, setCheckedGateways] = useState([]);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const {\n    loading: loadingReadGateways,\n    error: errorReadGateways,\n    data,\n    refetch: refetchReadGateways\n  } = useReadGatewaysQuery();\n  const [deleteCheckedGateways, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteGatewaysMutation();\n  const [makeGatewayDefault, {\n    loading: loadingSetDefault,\n    error: errorSetDefault\n  }] = useSetDefaultGatewayMutation();\n\n  const onDeleteClick = () => {\n    const variables = {\n      ids: checkedGateways\n    };\n    deleteCheckedGateways(variables).then(refetchReadGateways);\n    setShowDeleteDialog(false);\n  };\n\n  const onMakeDefaultClick = id => {\n    const variables = {\n      id\n    };\n    makeGatewayDefault(variables).then(refetchReadGateways);\n  };\n\n  const loading = loadingReadGateways || loadingDelete || loadingSetDefault;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = errorReadGateways || errorDelete || errorSetDefault;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const hasGateways = !!(data === null || data === void 0 ? void 0 : (_data$gateways = data.gateways) === null || _data$gateways === void 0 ? void 0 : (_data$gateways$gatewa = _data$gateways.gateways) === null || _data$gateways$gatewa === void 0 ? void 0 : _data$gateways$gatewa.length);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('views-gatewayconfiglist')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('An SMS gateway lets a DHIS2 instance send and receive SMS messages. Different gateway types can be added and configured below. At least one gateway is needed to send and receive SMS messages. Load balancing will use all gateways if there are multiple available. Read about gateway configuration in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add gateway'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"views-gatewayconfiglist\",\n    onAddClick: onAddGatewayClick,\n    onDeleteClick: () => setShowDeleteDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedGateways.length || loadingDelete\n  }), hasGateways ? /*#__PURE__*/React.createElement(List, {\n    processing: loading,\n    checkedGateways: checkedGateways,\n    setCheckedGateways: setCheckedGateways,\n    gateways: data.gateways.gateways,\n    onMakeDefaultClick: onMakeDefaultClick\n  }) : /*#__PURE__*/React.createElement(NoticeBox, {\n    info: true,\n    title: i18n.t('No gateways found')\n  }, i18n.t(\"It looks like there aren't any configured gateways, or they couldn't be loaded.\")), showDeleteDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected gateways?')));\n};","import React from 'react';\nimport { TemplateSidebarNavContent } from '../shared';\nimport { SmsGatewayList } from '../sms-gateway';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(SmsGatewayList, null));\n\nexport default RouteSmsCommand;","import React from 'react';\nimport { TemplateSidebarNavContent } from '../../shared';\nimport { SmsGatewayEdit } from '../../sms-gateway';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(SmsGatewayEdit, null));\n\nexport default RouteSmsCommand;","import React from 'react';\nimport { TemplateSidebarNavContent } from '../../shared';\nimport { SmsGatewayAdd } from '../../sms-gateway';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(SmsGatewayAdd, null));\n\nexport default RouteSmsCommand;","import { App } from './App';\nexport default App;","import './locales';\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { AppWrapper } from './AppWrapper';\nimport Home from './routes/index';\nimport ReceivedSms from './routes/received';\nimport SentSms from './routes/sent';\nimport SmsCommand from './routes/sms-command';\nimport SmsCommandEdit from './routes/sms-command/[id]';\nimport SmsCommandNew from './routes/sms-command/new';\nimport SmsGateway from './routes/sms-gateway';\nimport SmsGatewayEdit from './routes/sms-gateway/[id]';\nimport SmsGatewayNew from './routes/sms-gateway/new';\nexport const App = () => /*#__PURE__*/React.createElement(AppWrapper, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Home\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-gateway\",\n  component: SmsGateway\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/new\",\n  component: SmsGatewayNew\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/:id\",\n  component: SmsGatewayEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-command\",\n  component: SmsCommand\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/new\",\n  component: SmsCommandNew\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/:id\",\n  component: SmsCommandEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sent\",\n  component: SentSms\n}),\n/* View received sms */\n'', /*#__PURE__*/React.createElement(Route, {\n  path: \"/received\",\n  component: ReceivedSms\n}),\n/* Handle 404 */\n'', /*#__PURE__*/React.createElement(Redirect, {\n  from: \"*\",\n  to: \"/\"\n})));"],"sourceRoot":""}