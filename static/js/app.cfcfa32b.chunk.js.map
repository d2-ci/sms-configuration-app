{"version":3,"file":"static/js/app.cfcfa32b.chunk.js","mappings":"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","sources":["D2App/locales/index.js","D2App/shared/components/AlertHandler/AlertContext.js","D2App/shared/utils/dataTest/dataTest.js","D2App/shared/components/AlertHandler/AlertHandler.js","D2App/shared/components/CancelDialog/CancelDialog.js","D2App/shared/components/ContentLoading/ContentLoading.js","D2App/shared/components/ContentLoadingError/ContentLoadingError.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/Date/Date.module.css?51a7","D2App/shared/components/Date/Date.js","D2App/shared/components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","D2App/shared/components/FieldUserGroup/FieldUserGroup.js","D2App/shared/components/FieldUserGroup/useReadUserGroupsQuery.js","D2App/shared/components/FieldUserGroup/FieldUserGroupWithAutoLoad.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/FormRow/FormRow.module.css?82d3","D2App/shared/components/FormRow/FormRow.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/ListActions/ListActions.module.css?31c7","D2App/shared/components/ListActions/ListActions.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/Navigation/NavigationItem.module.css?ae9c","D2App/shared/components/Navigation/NavigationItem.js","D2App/shared/components/Navigation/Navigation.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/PageHeadline/PageHeadline.module.css?9ef7","D2App/shared/components/PageHeadline/PageHeadline.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/PageSubHeadline/PageSubHeadline.module.css?46d2","D2App/shared/components/PageSubHeadline/PageSubHeadline.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/Paragraph/Paragraph.module.css?6070","D2App/shared/components/Paragraph/Paragraph.js","D2App/shared/hooks/useQueryParam/useQueryParams.js","D2App/shared/hooks/useSubmit/useSubmit.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/pagination/Pagination.module.css?688b","D2App/shared/components/pagination/Pagination.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/SmsTable/SmsTable.module.css?d933","D2App/shared/components/SmsTable/SmsTable.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/Template/LayoutContainer.module.css?1135","D2App/shared/components/Template/LayoutContainer.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/Template/LayoutContent.module.css?c488","D2App/shared/components/Template/LayoutContent.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/Template/LayoutSidebar.module.css?7e61","D2App/shared/components/Template/LayoutSidebar.js","D2App/shared/components/Template/TemplateSidebarNavContent.js","webpack://@dhis2/app-shell/./src/D2App/shared/components/Time/Time.module.css?5215","D2App/shared/components/Time/Time.js","D2App/shared/providers/feature-toggle-context.js","D2App/shared/providers/use-feature-toggle.js","D2App/shared/providers/feature-toggle-provider.js","D2App/AppWrapper.js","D2App/sms-command/FieldCommandName/FieldCommandName.js","D2App/sms-command/FieldDataSet/FieldDataSet.js","D2App/sms-command/FieldDataSet/useReadDataSetsQuery.js","D2App/sms-command/FieldDataSet/FieldDataSetWithAutoLoad.js","D2App/sms-command/FieldParser/parserTypes.js","D2App/sms-command/FieldParser/FieldParser.js","D2App/sms-command/FieldProgram/FieldProgram.js","D2App/sms-command/FieldProgram/programTypes.js","D2App/sms-command/FieldProgram/useReadProgramsQuery.js","D2App/sms-command/FieldProgram/FieldProgramWithAutoLoad.js","D2App/sms-command/FieldProgramStage/FieldProgramStage.js","D2App/sms-command/FieldProgramStage/useReadProgramStagesQuery.js","D2App/sms-command/FieldProgramStage/FieldProgramStageWithLoadingStates.js","D2App/sms-command/ViewSmsCommandAdd/useCreateSmsCommandMutation.js","webpack://@dhis2/app-shell/./src/D2App/sms-command/ViewSmsCommandAdd/ViewSmsCommandAdd.module.css?55df","D2App/sms-command/ViewSmsCommandAdd/ViewSmsCommandAdd.js","D2App/sms-command/FieldConfirmMessage/FieldConfirmMessage.js","D2App/sms-command/FormActions/SaveCommandButton.js","D2App/sms-command/FormActions/FormActions.js","D2App/sms-command/SubmitErrors/SubmitErrors.js","D2App/sms-command/FormAlertParser/Form.js","D2App/sms-command/FormAlertParser/useAlertDataQuery.js","D2App/sms-command/FormAlertParser/useUpdateCommandMutation.js","D2App/sms-command/FormAlertParser/FormAlertParser.js","D2App/sms-command/FormAlertParser/createInitialValues.js","D2App/sms-command/FormAlertParser/createUserGroupOptions.js","D2App/sms-command/FieldDefaultMessage/FieldDefaultMessage.js","D2App/sms-command/FieldMoreThanOneOrgUnitMessage/FieldMoreThanOneOrgUnitMessage.js","D2App/sms-command/FieldNoUserMessage/FieldNoUserMessage.js","D2App/sms-command/FieldSeparator/FieldSeparator.js","D2App/sms-command/FieldSmsCode/FieldSmsCode.js","D2App/sms-command/FieldSmsCodeDataElement/FieldSmsCodeDataElement.js","D2App/sms-command/FieldSuccessMessage/FieldSuccessMessage.js","D2App/sms-command/FieldWrongFormatMessage/FieldWrongFormatMessage.js","D2App/sms-command/FormEventRegistrationParser/Form.js","D2App/sms-command/FormEventRegistrationParser/getInitialFormState.js","D2App/sms-command/FormEventRegistrationParser/useCommandQuery.js","D2App/sms-command/FormEventRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/FormEventRegistrationParser/FormEventRegistrationParser.js","webpack://@dhis2/app-shell/./src/D2App/sms-command/FieldSpecialCharacter/FieldSpecialCharacter.module.css?dc1f","D2App/sms-command/FieldSpecialCharacter/FieldSpecialCharacter.js","D2App/sms-command/AddSpecialCharacters/AddSpecialCharacters.js","webpack://@dhis2/app-shell/./src/D2App/sms-command/FieldDataElementWithCategoryOptionCombo/CurrentFormula.module.css?30ec","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/CurrentFormula.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/AddFormulaButton.js","webpack://@dhis2/app-shell/./src/D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.module.css?fad8","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/useReadDataElementsOfDataSetQuery.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FormulaModalForm.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.js","D2App/sms-command/FieldCompletenessMethod/completenessMethods.js","D2App/sms-command/FieldCompletenessMethod/FieldCompletenessMethod.js","D2App/sms-command/DataElementTimesCategoryOptionCombos/CompletenessMessage.js","webpack://@dhis2/app-shell/./src/D2App/sms-command/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.module.css?a31a","D2App/sms-command/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.js","D2App/sms-command/FieldUseCurrentPeriodForReporting/FieldUseCurrentPeriodForReporting.js","D2App/sms-command/FormJ2meParser/Form.js","D2App/sms-command/FormJ2meParser/getInitialFormState.js","D2App/sms-command/getSmsCodeDuplicates/getSmsCodeDuplicates.js","D2App/sms-command/FormJ2meParser/globalValidate.js","D2App/sms-command/FormJ2meParser/useCommandData.js","D2App/sms-command/FormJ2meParser/useUpdateCommandMutation.js","D2App/sms-command/FormJ2meParser/FormJ2meParser.js","D2App/sms-command/FormKeyValueParser/Form.js","D2App/sms-command/FormKeyValueParser/getInitialFormState.js","D2App/sms-command/FormKeyValueParser/globalValidate.js","D2App/sms-command/FormKeyValueParser/useCommandData.js","D2App/sms-command/FormKeyValueParser/useUpdateCommandMutation.js","D2App/sms-command/FormKeyValueParser/FormKeyValueParser.js","D2App/sms-command/FormProgramStageDataEntryParser/FormComponent.js","D2App/sms-command/FormProgramStageDataEntryParser/getInitialFormState.js","D2App/sms-command/FormProgramStageDataEntryParser/useCommandData.js","D2App/sms-command/FormProgramStageDataEntryParser/useUpdateCommandMutation.js","D2App/sms-command/FormProgramStageDataEntryParser/FormProgramStageDataEntryParser.js","D2App/sms-command/FormTrackedEntityRegistrationParser/Form.js","D2App/sms-command/FormTrackedEntityRegistrationParser/useCommandData.js","D2App/sms-command/FormTrackedEntityRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/FormTrackedEntityRegistrationParser/FormTrackedEntityRegistrationParser.js","D2App/sms-command/FormUnregisteredParser/Form.js","D2App/sms-command/FormUnregisteredParser/useCommandData.js","D2App/sms-command/FormUnregisteredParser/useUpdateCommandMutation.js","D2App/sms-command/FormUnregisteredParser/FormUnregisteredParser.js","D2App/sms-command/ViewSmsCommandEdit/useReadSmsCommandParserTypeQuery.js","D2App/sms-command/ViewSmsCommandEdit/ViewSmsCommandEdit.module.css","D2App/sms-command/ViewSmsCommandEdit/ViewSmsCommandEdit.js","D2App/sms-command/ViewSmsCommandList/useDeleteSmsCommandMutation.js","D2App/sms-command/ViewSmsCommandList/useReadSmsCommandsQuery.js","webpack://@dhis2/app-shell/./src/D2App/sms-command/ViewSmsCommandList/ViewSmsCommandList.module.css?5d34","D2App/sms-command/ViewSmsCommandList/ViewSmsCommandList.js","D2App/sms-gateway/FieldEditConfidential/FieldEditConfidential.js","D2App/sms-gateway/FieldGatewayName/FieldGatewayName.js","D2App/sms-gateway/FieldPassword/FieldPassword.js","D2App/sms-gateway/FieldPasswordConfirmation/FieldPasswordConfirmation.js","D2App/sms-gateway/FieldUsername/FieldUsername.js","D2App/sms-gateway/FormBulkSMS/FormBulkSMS.js","D2App/sms-gateway/FieldAuthToken/FieldAuthToken.js","D2App/sms-gateway/FieldUrlTemplate/FieldUrlTemplate.js","D2App/sms-gateway/FormClickatell/FormClickatell.js","webpack://@dhis2/app-shell/./src/D2App/sms-gateway/ActionAddKeyValuePair/ActionAddKeyValuePair.module.css?10cf","D2App/sms-gateway/ActionAddKeyValuePair/ActionAddKeyValuePair.js","D2App/sms-gateway/FieldConfigurationTemplate/FieldConfigurationTemplate.js","D2App/sms-gateway/FieldContentType/FieldContentType.js","webpack://@dhis2/app-shell/./src/D2App/sms-gateway/FieldKeyValuePair/FieldKeyValuePair.module.css?be84","D2App/sms-gateway/FieldKeyValuePair/ValueField.js","D2App/sms-gateway/FieldKeyValuePair/FieldKeyValuePair.js","D2App/sms-gateway/FieldSendUrlParameters/FieldSendUrlParameters.js","D2App/sms-gateway/FieldUseGet/FieldUseGet.js","D2App/sms-gateway/FormGeneric/FormGeneric.js","D2App/sms-gateway/FieldBindType/FieldBindType.js","D2App/sms-gateway/FieldCompressed/FieldCompressed.js","D2App/sms-gateway/FieldHost/FieldHost.js","D2App/sms-gateway/FieldNumberPlanIndicator/FieldNumberPlanIndicator.js","D2App/sms-gateway/FieldPort/FieldPort.js","D2App/sms-gateway/FieldSystemId/FieldSystemId.js","D2App/sms-gateway/FieldSystemType/FieldSystemType.js","D2App/sms-gateway/FieldTypeOfNumber/FieldTypeOfNumber.js","D2App/sms-gateway/FormSMPP/FromSMPP.js","D2App/sms-gateway/InputSingleSelectGatewayType/gatewayTypes.js","D2App/sms-gateway/InputSingleSelectGatewayType/InputSingleSelectGatewayType.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateBulkSMSGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateClickatellGatewayMutation.js","D2App/sms-gateway/createGenericGateWayDataFromVariables/createGenericGateWayDataFromVariables.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateGenericGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateSMPPGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/ViewSmsGatewayAdd.module.css","D2App/sms-gateway/ViewSmsGatewayAdd/ViewSmsGatewayAdd.js","D2App/sms-gateway/ViewSmsGatewayEdit/useReadGatewayQuery.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateBulkSMSGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateClickatellGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateGenericGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateSMPPGatewayMutation.js","webpack://@dhis2/app-shell/./src/D2App/sms-gateway/ViewSmsGatewayEdit/ViewSmsGatewayEdit.module.css?f7ba","D2App/sms-gateway/ViewSmsGatewayEdit/ViewSmsGatewayEdit.js","webpack://@dhis2/app-shell/./src/D2App/sms-gateway/ViewSmsGatewayList/GatewaysTable.module.css?90c5","D2App/sms-gateway/ViewSmsGatewayList/getTypeLabelByType.js","D2App/sms-gateway/ViewSmsGatewayList/GatewaysTable.js","webpack://@dhis2/app-shell/./src/D2App/sms-gateway/ViewSmsGatewayList/List.module.css?bf02","D2App/sms-gateway/ViewSmsGatewayList/List.js","D2App/sms-gateway/ViewSmsGatewayList/useDeleteGatewaysMutation.js","D2App/sms-gateway/ViewSmsGatewayList/useReadGatewaysQuery.js","D2App/sms-gateway/ViewSmsGatewayList/useSetDefaultGatewayMutation.js","webpack://@dhis2/app-shell/./src/D2App/sms-gateway/ViewSmsGatewayList/ViewSmsGatewayList.module.css?dba0","D2App/sms-gateway/ViewSmsGatewayList/ViewSmsGatewayList.js","D2App/sms-inbound/translations/translations.js","webpack://@dhis2/app-shell/./src/D2App/sms-inbound/Filter/Filter.module.css?b374","D2App/sms-inbound/Filter/Filter.js","webpack://@dhis2/app-shell/./src/D2App/sms-inbound/ReceivedSmsTable/ReceivedSmsTable.module.css?06e4","D2App/sms-inbound/ReceivedSmsTable/ReceivedSmsTable.js","D2App/sms-inbound/ViewReceivedSmsList/useDeleteMutation.js","webpack://@dhis2/app-shell/./src/D2App/sms-inbound/ViewReceivedSmsList/ViewReceivedSmsList.module.css?990a","D2App/sms-inbound/ViewReceivedSmsList/ViewReceivedSmsList.js","D2App/sms-outbound/translations/translations.js","webpack://@dhis2/app-shell/./src/D2App/sms-outbound/SentSmsTable/SentSmsTable.module.css?1afb","D2App/sms-outbound/SentSmsTable/SentSmsTable.js","webpack://@dhis2/app-shell/./src/D2App/sms-outbound/StatusFilter/StatusFilter.module.css?7605","D2App/sms-outbound/StatusFilter/StatusFilter.js","D2App/sms-outbound/ViewSentSmsList/useDeleteMutation.js","webpack://@dhis2/app-shell/./src/D2App/sms-outbound/ViewSentSmsList/ViewSentSmsList.module.css?b166","D2App/sms-outbound/ViewSentSmsList/ViewSentSmsList.js","webpack://@dhis2/app-shell/./src/D2App/sms-overview/HomeCard/HomeCard.module.css?53df","D2App/sms-overview/HomeCard/HomeCard.js","webpack://@dhis2/app-shell/./src/D2App/sms-overview/ViewOverview/ViewOverview.module.css?0203","D2App/sms-overview/ViewOverview/ViewOverview.js","D2App/index.js","D2App/App.js"],"sourcesContent":["//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport es_419Translations from './es_419/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport neTranslations from './ne/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport orTranslations from './or/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport roTranslations from './ro/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport siTranslations from './si/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport uz_UZ_CyrlTranslations from './uz_UZ_Cyrl/translations.json';\nimport uz_UZ_LatnTranslations from './uz_UZ_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('es_419', namespace, es_419Translations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('ne', namespace, neTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('or', namespace, orTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ro', namespace, roTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('si', namespace, siTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('uz_UZ_Cyrl', namespace, uz_UZ_CyrlTranslations);\ni18n.addResources('uz_UZ_Latn', namespace, uz_UZ_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { createContext } from 'react';\nexport const AlertContext = /*#__PURE__*/createContext({\n  addAlert: () => {\n    throw new Error('AlertContext has not been initialized yet!');\n  }\n});","const defaultPrefix = 'dhis2-smsconfiguration';\nexport const dataTest = function (name) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultPrefix;\n  return `${prefix}-${name}`;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport { AlertContext } from './AlertContext.js';\nexport const AlertHandler = _ref => {\n  let {\n    children\n  } = _ref;\n  const [alerts, setAlerts] = useState([]);\n  const addAlert = _ref2 => {\n    let {\n      message,\n      type\n    } = _ref2;\n    const alert = {\n      message,\n      type,\n      // Ensure that identical messages can be distinguished\n      timestamp: Date.now()\n    };\n    setAlerts([...alerts, alert]);\n  };\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      addAlert\n    }\n  }, children, /*#__PURE__*/React.createElement(AlertStack, {\n    dataTest: dataTest('shared-alerthandler-alertstack')\n  }, alerts.map(_ref3 => {\n    let {\n      message,\n      type,\n      timestamp\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(AlertBar, {\n      dataTest: dataTest('shared-alerthandler-alertbar'),\n      key: `${message}${timestamp}`,\n      [type]: true\n    }, message);\n  })));\n};\nAlertHandler.propTypes = {\n  children: PropTypes.any\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalTitle, ModalActions } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales/index.js';\nexport const CancelDialog = _ref => {\n  let {\n    onConfirmCancel,\n    onAbortCancel\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Modal, null, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Are you sure you want to cancel? Unsaved changes will be lost')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onAbortCancel\n  }, i18n.t('No, stay on page')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onConfirmCancel\n  }, i18n.t('Yes, cancel')))));\n};\nCancelDialog.propTypes = {\n  onAbortCancel: PropTypes.func.isRequired,\n  onConfirmCancel: PropTypes.func.isRequired\n};","import { CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoading = () => /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));","import { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoadingError = _ref => {\n  let {\n    title,\n    errorMessage\n  } = _ref;\n  return /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: title\n  }, errorMessage);\n};\nContentLoadingError.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"date\":\"Date_date__FsMlr\"};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Date.module.css';\nexport const Date = _ref => {\n  let {\n    date\n  } = _ref;\n  const momentDate = moment(date);\n  const formatted = momentDate.format('DD MMM YYYY');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.date\n  }, formatted);\n};\nDate.propTypes = {\n  date: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales/index.js';\nimport { dataTest } from '../../utils/index.js';\nexport const DeleteConfirmationDialog = _ref => {\n  let {\n    children,\n    onCancelClick,\n    onDeleteClick\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Modal, {\n    dataTest: dataTest('shared-deleteconfirmationdialog')\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Confirm deletion')), /*#__PURE__*/React.createElement(ModalContent, null, children), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onCancelClick,\n    dataTest: dataTest('shared-deleteconfirmationdialog-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onDeleteClick,\n    dataTest: dataTest('shared-deleteconfirmationdialog-confirm')\n  }, i18n.t('Delete')))));\n};\nDeleteConfirmationDialog.propTypes = {\n  children: PropTypes.any.isRequired,\n  onCancelClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales/index.js';\nimport { dataTest } from '../../../shared/utils/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USER_GROUP_NAME = 'userGroup';\nexport const FieldUserGroup = _ref => {\n  let {\n    userGroups,\n    loading,\n    required,\n    disabled,\n    errorText\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    disabled: disabled,\n    error: !!errorText,\n    validationText: errorText,\n    required: required,\n    loading: loading,\n    dataTest: dataTest('shared-fieldusergroup'),\n    name: FIELD_USER_GROUP_NAME,\n    label: i18n.t('User group'),\n    component: SingleSelectFieldFF,\n    options: userGroups,\n    validate: required && hasValue\n  });\n};\nFieldUserGroup.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldUserGroup.propTypes = {\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const USER_GROUPS_QUERY = {\n  userGroups: {\n    resource: 'userGroups',\n    params: {\n      paging: 'false'\n    }\n  }\n};\nexport const useReadUserGroupsQuery = () => useDataQuery(USER_GROUPS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldUserGroup } from './FieldUserGroup.js';\nimport { useReadUserGroupsQuery } from './useReadUserGroupsQuery.js';\nexport const FieldUserGroupWithAutoLoad = _ref => {\n  let {\n    required\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useReadUserGroupsQuery();\n  const validate = required ? hasValue : undefined;\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      userGroups: [],\n      validate: validate\n    });\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      disabled: true,\n      userGroups: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n  const {\n    userGroups\n  } = data.userGroups;\n  const options = userGroups.map(_ref2 => {\n    let {\n      id,\n      displayName\n    } = _ref2;\n    return {\n      label: displayName,\n      value: id\n    };\n  });\n  return /*#__PURE__*/React.createElement(FieldUserGroup, {\n    required: required,\n    userGroups: options,\n    validate: validate\n  });\n};\nFieldUserGroupWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldUserGroupWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","// extracted by mini-css-extract-plugin\nexport default {\"formRow\":\"FormRow_formRow__wruWC\"};","import { PropTypes } from '@dhis2/prop-types';\nimport cx from 'classnames';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './FormRow.module.css';\nexport const FormRow = _ref => {\n  let {\n    children,\n    className\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(styles.formRow, className),\n    \"data-test\": dataTest('shared-formrow')\n  }, children);\n};\nFormRow.propTypes = {\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ListActions_container__nfSD9\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { ButtonStrip, Button } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './ListActions.module.css';\nexport const ListActions = _ref => {\n  let {\n    addLabel,\n    deleteLabel,\n    onAddClick,\n    onDeleteClick,\n    disableAdd,\n    disableDelete\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('shared-listactions')\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    \"data-test\": dataTest('shared-listactions-actions')\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onAddClick,\n    disabled: disableAdd,\n    dataTest: dataTest(`shared-listactions-add`)\n  }, addLabel), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: onDeleteClick,\n    disabled: disableDelete,\n    dataTest: dataTest(`shared-listactions-delete`)\n  }, deleteLabel)));\n};\nListActions.propTypes = {\n  addLabel: PropTypes.string.isRequired,\n  deleteLabel: PropTypes.string.isRequired,\n  onAddClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  disableAdd: PropTypes.bool,\n  disableDelete: PropTypes.bool\n};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"NavigationItem_item__gjsfP\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './NavigationItem.module.css';\nconst useIsItemActive = (path, exactMatch) => {\n  const routeMatch = useRouteMatch(path);\n  if (!routeMatch) {\n    return false;\n  }\n  if (exactMatch) {\n    return routeMatch.isExact;\n  }\n  return true;\n};\nexport const NavigationItem = _ref => {\n  let {\n    label,\n    path,\n    exactMatch\n  } = _ref;\n  const history = useHistory();\n  const active = useIsItemActive(path, exactMatch);\n  const navigateToPath = () => history.push(path);\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    className: styles.item,\n    onClick: navigateToPath,\n    active: active,\n    label: label,\n    dataTest: dataTest('shared-navigationitem')\n  });\n};\nNavigationItem.defualtProps = {\n  exactMatch: false\n};\nNavigationItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  exactMatch: PropTypes.bool\n};","import { Menu } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales/index.js';\nimport { dataTest } from '../../utils/index.js';\nimport { NavigationItem } from './NavigationItem.js';\nexport const Navigation = () => /*#__PURE__*/React.createElement(Menu, {\n  dataTest: dataTest('shared-navigation')\n}, /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/home\",\n  label: i18n.t('Home'),\n  exactMatch: true\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-gateway\",\n  label: i18n.t('Gateway configuration')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-command\",\n  label: i18n.t('Commands')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sent\",\n  label: i18n.t('Sent')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/received\",\n  label: i18n.t('Received')\n}));","// extracted by mini-css-extract-plugin\nexport default {\"headline\":\"PageHeadline_headline__sh55w\"};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './PageHeadline.module.css';\nexport const PageHeadline = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.headline,\n    \"data-test\": dataTest('shared-pageheadline')\n  }, children);\n};\nPageHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"subHeadline\":\"PageSubHeadline_subHeadline__LXsMW\"};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './PageSubHeadline.module.css';\nexport const PageSubHeadline = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.subHeadline,\n    \"data-test\": dataTest('shared-pagesubheadline')\n  }, children);\n};\nPageSubHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"paragraph\":\"Paragraph_paragraph__xa9by\"};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './Paragraph.module.css';\nexport const Paragraph = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.paragraph,\n    \"data-test\": dataTest('shared-paragraph')\n  }, children);\n};\nParagraph.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { useQueryParams as _useQueryParams, StringParam, NumberParam, withDefault } from 'use-query-params';\nexport const useQueryParams = () => _useQueryParams({\n  status: withDefault(StringParam, 'ALL'),\n  phoneNumber: withDefault(StringParam, ''),\n  page: withDefault(NumberParam, 1),\n  pageSize: withDefault(NumberParam, 50)\n});","import { FinalForm } from '@dhis2/ui';\nimport { useContext } from 'react';\nimport i18n from '../../../locales/index.js';\nimport { AlertContext } from '../../components/index.js';\nconst {\n  FORM_ERROR\n} = FinalForm;\nexport const useSubmit = onSubmit => {\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  return function () {\n    return onSubmit(...arguments).catch(e => {\n      const message = e.message || i18n.t('No error message was provided');\n\n      // Notify on unexpected errors\n      addAlert({\n        type: 'critical',\n        message: e.message\n      });\n      return {\n        [FORM_ERROR]: message\n      };\n    });\n  };\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Pagination_container__baQ6U\",\"verticalAlign\":\"Pagination_verticalAlign__xkl6+\",\"select\":\"Pagination_select__SaKsz\",\"buttonPrevious\":\"Pagination_buttonPrevious__HeaoD\",\"buttonNext\":\"Pagination_buttonNext__6SU8B\",\"summary\":\"Pagination_summary__C5SW1\"};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelect, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport { useQueryParams } from '../../hooks/index.js';\nimport styles from './Pagination.module.css';\nconst PAGE_LENGTHS = ['1', '2', '10', '20', '30', '40', '50', '100'];\nexport const Pagination = _ref => {\n  let {\n    page,\n    pageCount,\n    pageSize,\n    total\n  } = _ref;\n  const firstItem = Math.min((page - 1) * pageSize + 1, total);\n  const lastItem = Math.min(firstItem + pageSize - 1, total);\n  const availablePages = Array.from({\n    length: pageCount\n  }, (_x, i) => (i + 1).toString());\n  const [, setQueryParams] = useQueryParams();\n  const setPage = page => {\n    setQueryParams({\n      page\n    });\n  };\n  const setPageSize = pageSize => {\n    setQueryParams({\n      pageSize,\n      page: 1\n    });\n  };\n  if (pageCount === 0) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, i18n.t('Show'), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    selected: pageSize.toString(),\n    onChange: _ref2 => {\n      let {\n        selected\n      } = _ref2;\n      return setPageSize(selected);\n    },\n    className: styles.select\n  }, PAGE_LENGTHS.map(length => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: length,\n    value: length,\n    label: length\n  }))), i18n.t('per page')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.summary\n  }, i18n.t('Viewing {{firstItem}}-{{lastItem}} of {{total}}', {\n    firstItem,\n    lastItem,\n    total\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonPrevious,\n    small: true,\n    disabled: page === 1,\n    onClick: () => setPage(page - 1)\n  }, i18n.t('Previous')), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Page')), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    inputWidth: \"600px\",\n    selected: page.toString(),\n    onChange: _ref3 => {\n      let {\n        selected\n      } = _ref3;\n      return setPage(selected);\n    },\n    className: styles.select\n  }, availablePages.map(availablePage => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: availablePage,\n    value: availablePage,\n    label: availablePage\n  }))), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('of {{pageCount}}', {\n    pageCount\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonNext,\n    small: true,\n    disabled: page === pageCount,\n    onClick: () => setPage(page + 1)\n  }, i18n.t('Next'))));\n};\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"noResults\":\"SmsTable_noResults__DxozE\"};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Checkbox, Table, TableBody, TableCell, TableCellHead, TableFoot, TableHead, TableRow, TableRowHead } from '@dhis2/ui';\nimport React from 'react';\nimport { Pagination } from '../pagination/Pagination.js';\nimport styles from './SmsTable.module.css';\nexport const SmsTable = _ref => {\n  let {\n    messages,\n    pager,\n    selectedIds,\n    setSelectedIds,\n    columns,\n    rowRenderFn\n  } = _ref;\n  const selectedIdSet = new Set(selectedIds);\n  const allSelected = messages.length > 0 && selectedIds.length === messages.length;\n  const toggle = id => {\n    if (selectedIdSet.has(id)) {\n      selectedIdSet.delete(id);\n    } else {\n      selectedIdSet.add(id);\n    }\n    setSelectedIds(Array.from(selectedIdSet));\n  };\n  const toggleAll = () => {\n    if (allSelected) {\n      setSelectedIds([]);\n    } else {\n      setSelectedIds(messages.map(_ref2 => {\n        let {\n          id\n        } = _ref2;\n        return id;\n      }));\n    }\n  };\n  return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    disabled: messages.length === 0,\n    onChange: toggleAll,\n    checked: allSelected\n  })), columns.map(column => /*#__PURE__*/React.createElement(TableCellHead, {\n    key: column\n  }, column)))), /*#__PURE__*/React.createElement(TableBody, null, messages.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length),\n    className: styles.noResults\n  }, i18n.t('No SMSes to display'))) : messages.map(message => /*#__PURE__*/React.createElement(TableRow, {\n    key: message.id\n  }, /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedIdSet.has(message.id),\n    onChange: () => toggle(message.id)\n  })), rowRenderFn(message)))), /*#__PURE__*/React.createElement(TableFoot, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length)\n  }, /*#__PURE__*/React.createElement(Pagination, pager)))));\n};\nSmsTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  rowRenderFn: PropTypes.func.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LayoutContainer_container__L6YqP\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils/index.js';\nimport styles from './LayoutContainer.module.css';\nexport const LayoutContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('shared-layoutcontainer')\n  }, children);\n};\nLayoutContainer.propTypes = {\n  children: PropTypes.any.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"LayoutContent_content__GyJd8\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutContent.module.css';\nexport const LayoutContent = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: styles.content\n  }, children);\n};\nLayoutContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"LayoutSidebar_sidebar__HLSs7\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutSidebar.module.css';\nexport const LayoutSidebar = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.sidebar\n  }, children);\n};\nLayoutSidebar.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Navigation } from '../Navigation/index.js';\nimport { LayoutContainer } from './LayoutContainer.js';\nimport { LayoutContent } from './LayoutContent.js';\nimport { LayoutSidebar } from './LayoutSidebar.js';\nexport const TemplateSidebarNavContent = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, children));\n};\nTemplateSidebarNavContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"time\":\"Time_time__RM03m\"};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Time.module.css';\nexport const Time = _ref => {\n  let {\n    time\n  } = _ref;\n  const momentDate = moment(time);\n  const formatted = momentDate.format('HH:mm:ss');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.time\n  }, formatted);\n};\nTime.propTypes = {\n  time: PropTypes.string.isRequired\n};","import { createContext } from 'react';\nconst FeatureToggleContext = /*#__PURE__*/createContext({\n  disableConfidentialEdit: false\n});\nexport { FeatureToggleContext };","import { useContext } from 'react';\nimport { FeatureToggleContext } from './feature-toggle-context.js';\nexport const useFeatureToggle = () => useContext(FeatureToggleContext);","import { useConfig } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { FeatureToggleContext } from './feature-toggle-context.js';\nconst FeatureToggleProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    serverVersion\n  } = useConfig();\n  const providerValue = {\n    disableConfidentialEdit: (serverVersion === null || serverVersion === void 0 ? void 0 : serverVersion.minor) >= 39\n  };\n  return /*#__PURE__*/React.createElement(FeatureToggleContext.Provider, {\n    value: providerValue\n  }, children);\n};\nFeatureToggleProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { FeatureToggleProvider };","import './locales/index.js';\nimport { CssVariables } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { AlertHandler, FeatureToggleProvider } from './shared/index.js';\nexport const AppWrapper = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(AlertHandler, null, /*#__PURE__*/React.createElement(CssVariables, {\n    spacers: true,\n    colors: true\n  }), /*#__PURE__*/React.createElement(HashRouter, null, /*#__PURE__*/React.createElement(FeatureToggleProvider, null, /*#__PURE__*/React.createElement(QueryParamProvider, {\n    ReactRouterRoute: Route\n  }, children))));\n};\nAppWrapper.propTypes = {\n  children: PropTypes.any.isRequired\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_COMMAND_NAME = 'name';\nexport const FieldCommandName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smscommand-fieldcommandname'),\n  name: FIELD_COMMAND_NAME,\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\n\n// The \"s\" from \"set\" is not capitalized\n// as the property on the java-model\n// does not have a capitalized \"s\" either\n//\n// @TODO: Create issue to make it consistent\nexport const FIELD_DATA_SET_NAME = 'dataset';\nexport const FieldDataSet = _ref => {\n  let {\n    dataSets,\n    loading,\n    required,\n    disabled,\n    errorText\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    disabled: disabled,\n    error: !!errorText,\n    validationText: errorText,\n    required: required,\n    loading: loading,\n    dataTest: dataTest('smscommand-fielddataset'),\n    name: FIELD_DATA_SET_NAME,\n    label: i18n.t('Data set'),\n    component: SingleSelectFieldFF,\n    options: dataSets,\n    validate: hasValue,\n    format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n    parse: id => ({\n      id\n    })\n  });\n};\nFieldDataSet.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldDataSet.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const DATA_SETS_QUERY = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadDataSetsQuery = () => useDataQuery(DATA_SETS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldDataSet } from './FieldDataSet.js';\nimport { useReadDataSetsQuery } from './useReadDataSetsQuery.js';\nexport const FieldDataSetWithAutoLoad = _ref => {\n  let {\n    required\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataSetsQuery();\n  const validate = required ? hasValue : undefined;\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      loading: true,\n      showLoadingStatus: true,\n      required: required,\n      dataSets: [],\n      validate: validate\n    });\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n  const {\n    dataSets\n  } = data.dataSets;\n  const options = dataSets.map(_ref2 => {\n    let {\n      id,\n      displayName\n    } = _ref2;\n    return {\n      label: displayName,\n      value: id\n    };\n  });\n  return /*#__PURE__*/React.createElement(FieldDataSet, {\n    required: required,\n    dataSets: options,\n    validate: validate\n  });\n};\nFieldDataSetWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldDataSetWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import i18n from '../../locales/index.js';\nconst KEY_VALUE_PARSER = {\n  value: 'KEY_VALUE_PARSER',\n  label: i18n.t('Key value parser')\n};\n\n// @TODO: This parser is not listed in the docs,\n//        but it's listed in the original source code\n//   -> docs: https://docs.dhis2.org/master/en/dhis2_developer_manual/web-api.html#sms-command-values\n//   -> code: https://github.com/dhis2/dhis2-core/blob/79bd77ecf52051b00e3ba96eb1aca4d0a6063ed1/dhis-2/dhis-web/dhis-web-maintenance/dhis-web-maintenance-mobile/src/main/webapp/dhis-web-maintenance-mobile/smscommand/edit-sms-command.vm#L188\nconst J2ME_PARSER = {\n  value: 'J2ME_PARSER',\n  label: i18n.t('J2ME parser')\n};\nconst ALERT_PARSER = {\n  value: 'ALERT_PARSER',\n  label: i18n.t('Alert parser')\n};\nconst UNREGISTERED_PARSER = {\n  value: 'UNREGISTERED_PARSER',\n  label: i18n.t('Unregistered parser')\n};\nconst TRACKED_ENTITY_REGISTRATION_PARSER = {\n  value: 'TRACKED_ENTITY_REGISTRATION_PARSER',\n  label: i18n.t('Tracked entity registration parser')\n};\nconst PROGRAM_STAGE_DATAENTRY_PARSER = {\n  value: 'PROGRAM_STAGE_DATAENTRY_PARSER',\n  label: i18n.t('Program stage data entry parser')\n};\nconst EVENT_REGISTRATION_PARSER = {\n  value: 'EVENT_REGISTRATION_PARSER',\n  label: i18n.t('Event registration parser')\n};\nexport const parserTypes = {\n  KEY_VALUE_PARSER,\n  J2ME_PARSER,\n  ALERT_PARSER,\n  UNREGISTERED_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  EVENT_REGISTRATION_PARSER\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { parserTypes } from './parserTypes.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(parserTypes).sort((a, b) => {\n  if (a.label < b.label) {\n    return -1;\n  }\n  if (a.label > b.label) {\n    return 1;\n  }\n  return 0;\n});\nexport const FIELD_PARSER_NAME = 'parserType';\nexport const FieldParser = _ref => {\n  let {\n    disabled\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    disabled: disabled,\n    dataTest: dataTest('smscommand-fieldparser'),\n    name: FIELD_PARSER_NAME,\n    label: i18n.t('Parser'),\n    component: SingleSelectFieldFF,\n    options: options,\n    validate: hasValue\n  });\n};\nFieldParser.defaultProps = {\n  disabled: false\n};\nFieldParser.propTypes = {\n  disabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_NAME = 'program';\nexport const FieldProgram = _ref => {\n  let {\n    programs,\n    loading,\n    required,\n    disabled,\n    errorText\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    error: !!errorText,\n    validationText: errorText,\n    disabled: disabled,\n    required: required,\n    loading: loading,\n    dataTest: dataTest('smscommand-fieldprogram'),\n    name: FIELD_PROGRAM_NAME,\n    label: i18n.t('Program'),\n    component: SingleSelectFieldFF,\n    options: programs,\n    validate: required && hasValue,\n    format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n    parse: id => ({\n      id\n    })\n  });\n};\nFieldProgram.defaultProps = {\n  disabled: false,\n  errorText: '',\n  loading: false,\n  required: false\n};\nFieldProgram.propTypes = {\n  programs: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","const PROGRAMS_WITH_REGISTRATION = 'PROGRAMS_WITH_REGISTRATION';\nconst PROGRAMS_WITHOUT_REGISTRATION = 'PROGRAMS_WITHOUT_REGISTRATION';\nconst ALL_PROGRAMS = 'ALL_PROGRAMS';\nexport const programTypes = {\n  PROGRAMS_WITH_REGISTRATION,\n  PROGRAMS_WITHOUT_REGISTRATION,\n  ALL_PROGRAMS\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { programTypes } from './programTypes.js';\nconst PROGRAMS_QUERY = {\n  programs: {\n    resource: 'programs',\n    params: _ref => {\n      let {\n        registration\n      } = _ref;\n      const params = {\n        paging: 'false'\n      };\n      if (registration === programTypes.PROGRAMS_WITH_REGISTRATION) {\n        params.filter = 'programType:eq:WITH_REGISTRATION';\n      } else if (registration === programTypes.PROGRAMS_WITHOUT_REGISTRATION) {\n        params.filter = 'programType:eq:WITHOUT_REGISTRATION';\n      }\n      return params;\n    }\n  }\n};\nexport const useReadProgramsQuery = registration => useDataQuery(PROGRAMS_QUERY, {\n  variables: {\n    registration\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { FIELD_PROGRAM_NAME, FieldProgram } from './FieldProgram.js';\nimport { programTypes } from './programTypes.js';\nimport { useReadProgramsQuery } from './useReadProgramsQuery.js';\nconst {\n  ALL_PROGRAMS\n} = programTypes;\nconst {\n  useForm\n} = ReactFinalForm;\nexport const FieldProgramWithAutoLoad = _ref => {\n  let {\n    required,\n    registration\n  } = _ref;\n  const form = useForm();\n  const validate = required ? hasValue : undefined;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramsQuery({\n    lazy: true\n  });\n  useEffect(() => {\n    const variables = {\n      registration\n    };\n    form.change(FIELD_PROGRAM_NAME, null);\n    refetch(variables);\n  }, [registration]);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      programs: [],\n      validate: validate\n    });\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n  const {\n    programs\n  } = data.programs;\n  const options = programs.map(_ref2 => {\n    let {\n      id,\n      displayName\n    } = _ref2;\n    return {\n      label: displayName,\n      value: id\n    };\n  });\n  return /*#__PURE__*/React.createElement(FieldProgram, {\n    required: required,\n    programs: options,\n    validate: validate\n  });\n};\nFieldProgramWithAutoLoad.defaultProps = {\n  required: false,\n  registration: ALL_PROGRAMS\n};\nFieldProgramWithAutoLoad.propTypes = {\n  registration: PropTypes.string,\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_STAGE_NAME = 'programStage';\nexport const FieldProgramStage = _ref => {\n  let {\n    programStages,\n    disabled,\n    loading,\n    initialValue,\n    required,\n    errorText\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    component: SingleSelectFieldFF,\n    dataTest: dataTest('smscommand-fieldprogramstage'),\n    disabled: disabled,\n    error: !!errorText,\n    format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n    iinitialValue: initialValue,\n    label: i18n.t('Program stage'),\n    loading: loading,\n    name: FIELD_PROGRAM_STAGE_NAME,\n    options: programStages,\n    parse: id => ({\n      id\n    }),\n    required: required,\n    validate: required && hasValue,\n    validationText: errorText\n  });\n};\nFieldProgramStage.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldProgramStage.propTypes = {\n  programStages: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  initialValue: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAM_STAGES_QUERY = {\n  programStages: {\n    resource: 'programStages',\n    params: _ref => {\n      let {\n        programId\n      } = _ref;\n      return {\n        paging: 'false',\n        filter: programId ? `program.id:eq:${programId}` : undefined\n      };\n    }\n  }\n};\nexport const useReadProgramStagesQuery = _ref2 => {\n  let {\n    programId,\n    lazy\n  } = _ref2;\n  return useDataQuery(PROGRAM_STAGES_QUERY, {\n    variables: {\n      programId\n    },\n    lazy\n  });\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { parserTypes } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStage } from './FieldProgramStage.js';\nimport { useReadProgramStagesQuery } from './useReadProgramStagesQuery.js';\nconst {\n  useForm\n} = ReactFinalForm;\nconst {\n  EVENT_REGISTRATION_PARSER\n} = parserTypes;\nexport const FieldProgramStageWithLoadingStates = _ref => {\n  var _data$programStages2, _data$programStages3;\n  let {\n    parserType,\n    programId,\n    disabled,\n    required\n  } = _ref;\n  const form = useForm();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramStagesQuery({\n    lazy: true\n  });\n  const validate = required ? hasValue : undefined;\n  useEffect(() => {\n    if (programId) {\n      refetch({\n        programId\n      });\n    }\n  }, [programId]);\n  useEffect(() => {\n    var _data$programStages, _data$programStages$p;\n    const isEventRegistrationParser = parserType === EVENT_REGISTRATION_PARSER.value;\n    const programStageValueForEventRegistration = {\n      id: data === null || data === void 0 ? void 0 : (_data$programStages = data.programStages) === null || _data$programStages === void 0 ? void 0 : (_data$programStages$p = _data$programStages.programStages[0]) === null || _data$programStages$p === void 0 ? void 0 : _data$programStages$p.id\n    };\n    const initialValue = isEventRegistrationParser ? programStageValueForEventRegistration : undefined;\n    form.change(FIELD_PROGRAM_STAGE_NAME, initialValue);\n  }, [parserType, data === null || data === void 0 ? void 0 : (_data$programStages2 = data.programStages) === null || _data$programStages2 === void 0 ? void 0 : _data$programStages2.programStages]);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      loading: true,\n      disabled: disabled,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      errorText: error.message,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n  if (!programId || !data) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n  const programStages = (data === null || data === void 0 ? void 0 : (_data$programStages3 = data.programStages) === null || _data$programStages3 === void 0 ? void 0 : _data$programStages3.programStages) || [];\n  const options = programStages.map(_ref2 => {\n    let {\n      id,\n      displayName\n    } = _ref2;\n    return {\n      label: displayName,\n      value: id\n    };\n  });\n  return /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: disabled,\n    required: required,\n    programStages: options\n  });\n};\nFieldProgramStageWithLoadingStates.defaultProps = {\n  disabled: false,\n  required: false\n};\nFieldProgramStageWithLoadingStates.propTypes = {\n  parserType: PropTypes.string.isRequired,\n  programId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataMutation } from '@dhis2/app-runtime';\nimport { parserTypes } from '../FieldParser/index.js';\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nexport const CREATE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'create',\n  /*\n   * @param {Object} args\n   * @param {string} args.parserType\n   * @param {string} args.name\n   * @param {string} args.dataset (id)\n   * @param {string} args.userGroup (id)\n   * @param {string} args.program (id)\n   * @param {string} args.programStage (id)\n   * @returns {Object}\n   */\n  data: _ref => {\n    let {\n      parserType,\n      name,\n      dataset,\n      userGroup,\n      program,\n      programStage\n    } = _ref;\n    if (parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value) {\n      return {\n        parserType,\n        name,\n        dataset\n      };\n    }\n    if (parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value) {\n      return {\n        parserType,\n        name,\n        userGroup: {\n          id: userGroup\n        }\n      };\n    }\n    if (parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program\n      };\n    }\n    if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program,\n        programStage\n      };\n    }\n    throw new Error(`You provided an unrecognized parserType \"${parserType}\"`);\n  }\n};\nexport const useCreateSmsCommandMutation = _ref2 => {\n  let {\n    onComplete,\n    onError\n  } = _ref2;\n  return useDataMutation(CREATE_SMS_COMMAND_MUTATION, {\n    onComplete,\n    onError\n  });\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewSmsCommandAdd_container__m6x7r\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageHeadline, FieldUserGroupWithAutoLoad, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldDataSetWithAutoLoad } from '../FieldDataSet/index.js';\nimport { FIELD_PARSER_NAME, FieldParser, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_NAME, FieldProgramWithAutoLoad, programTypes } from '../FieldProgram/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStageWithLoadingStates } from '../FieldProgramStage/index.js';\nimport { useCreateSmsCommandMutation } from './useCreateSmsCommandMutation.js';\nimport styles from './ViewSmsCommandAdd.module.css';\nconst {\n  ALL_PROGRAMS,\n  PROGRAMS_WITH_REGISTRATION,\n  PROGRAMS_WITHOUT_REGISTRATION\n} = programTypes;\nconst {\n  Form,\n  useForm\n} = ReactFinalForm;\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nexport const SMS_COMMAND_FORM_NEW_PATH = '/sms-config/new';\nconst useResetFormFields = () => {\n  const form = useForm();\n  const [prevValues, setPrevValues] = useState(form.getState().values);\n  useEffect(() => form.subscribe(_ref => {\n    let {\n      values\n    } = _ref;\n    form.batch(() => {\n      const parserType = values[FIELD_PARSER_NAME];\n      const program = values[FIELD_PROGRAM_NAME];\n      const programStage = values[FIELD_PROGRAM_STAGE_NAME];\n      const prevProgram = prevValues[FIELD_PROGRAM_NAME];\n      const prevParserType = prevValues[FIELD_PARSER_NAME];\n      const programChanged = prevProgram && program !== prevProgram;\n      const parserTypeChanged = prevParserType && parserType !== prevParserType;\n      if (\n      // only unset program stage if one exists already\n      programStage && (programChanged || parserTypeChanged)) {\n        form.change(FIELD_PROGRAM_STAGE_NAME, null);\n      }\n    });\n    setPrevValues(values);\n  }, {\n    values: true\n  }), [prevValues]);\n};\n\n// undefined = all, false = program.programType --> WITHOUT_REGISTRATION\nconst shouldProgramsBeWithRegistration = parserType => {\n  // EVENT_REGISTRATION uses event programs\n  if (parserType === EVENT_REGISTRATION_PARSER.value) {\n    return PROGRAMS_WITHOUT_REGISTRATION;\n  }\n\n  // This is for programs of type tracker,\n  // which can have multiple program stages\n  if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value) {\n    return PROGRAMS_WITH_REGISTRATION;\n  }\n\n  // Unrelated yet, but in case all program stages are need in the future\n  return ALL_PROGRAMS;\n};\nconst ActualForm = _ref2 => {\n  let {\n    handleSubmit,\n    submitting\n  } = _ref2;\n  // This is required to unset form fields that depend\n  // on the selected value of a previous field\n  useResetFormFields();\n  const history = useHistory();\n  const form = useForm();\n  const {\n    values\n  } = form.getState();\n  const parserType = values[FIELD_PARSER_NAME];\n  const program = values[FIELD_PROGRAM_NAME];\n  const showDataSetField = parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value;\n  const showUserGroupField = parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value;\n  const showProgramField = parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value;\n  const showProgramStageField = parserType === EVENT_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value;\n  const registration = shouldProgramsBeWithRegistration(parserType);\n  const disableProgramStage = parserType === EVENT_REGISTRATION_PARSER.value;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add command')), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, null)), showDataSetField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSetWithAutoLoad, {\n    required: true\n  })), showUserGroupField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroupWithAutoLoad, {\n    required: true\n  })), showProgramField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramWithAutoLoad, {\n    required: true,\n    registration: registration\n  })), showProgramStageField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageWithLoadingStates, {\n    disabled: disableProgramStage,\n    required: true,\n    programId: (program === null || program === void 0 ? void 0 : program.id) || '',\n    parserType: parserType,\n    helpText: disableProgramStage ? i18n.t('Automatically selected by selecting a program') : undefined\n  })), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting\n  }, i18n.t('Add command')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.goBack()\n  }, i18n.t('Cancel')))));\n};\nActualForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\nexport const ViewSmsCommandAdd = () => {\n  const history = useHistory();\n  const [createSmsCommand] = useCreateSmsCommandMutation({\n    onComplete: () => history.push('/sms-command')\n  });\n  const onSubmit = values => createSmsCommand(values);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smscommand-viewsmscommandadd')\n  }, /*#__PURE__*/React.createElement(Form, {\n    destroyOnUnregister: true,\n    onSubmit: onSubmit\n  }, _ref3 => {\n    let {\n      handleSubmit,\n      submitting\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(ActualForm, {\n      handleSubmit: handleSubmit,\n      submitting: submitting\n    });\n  })));\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_CONFIRM_MESSAGE_NAME = 'receivedMessage';\nexport const FieldConfirmMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldconfirmmessage'),\n  name: FIELD_CONFIRM_MESSAGE_NAME,\n  label: i18n.t('Confirm message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CircularLoader, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitting: true,\n  pristine: true\n};\nexport const SaveCommandButton = _ref => {\n  let {\n    enabled\n  } = _ref;\n  const {\n    submitting,\n    pristine\n  } = useFormState({\n    subscription\n  });\n  const disabled = pristine || submitting;\n  return /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: !enabled && disabled,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, i18n.t('Save command'));\n};\nSaveCommandButton.defaultProps = {\n  enabled: false\n};\nSaveCommandButton.propTypes = {\n  /*\n   * This prop is used when fields, stored as array entries\n   * in the form state, are being removed while the form\n   * is still pristine.\n   *\n   * Form some reasons, RFF doesn't recognize this as a change\n   * and keeps the form state's pristine value `true`\n   */\n  enabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow } from '../../shared/index.js';\nimport { SaveCommandButton } from './SaveCommandButton.js';\nexport const FormActions = _ref => {\n  let {\n    enableSubmit,\n    onCancel\n  } = _ref;\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(SaveCommandButton, {\n    enabled: enableSubmit\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: onCancel\n  }, i18n.t('Cancel'))));\n};\nFormActions.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  enableSubmit: PropTypes.bool\n};","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow } from '../../shared/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitError: true,\n  hasSubmitErrors: true\n};\nexport const SubmitErrors = () => {\n  const {\n    submitError,\n    hasSubmitErrors\n  } = useFormState({\n    subscription\n  });\n  if (!hasSubmitErrors) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst submitting the form')\n  }, submitError));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { FormRow, FieldUserGroup, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nexport const Form = _ref => {\n  let {\n    userGroups,\n    handleSubmit,\n    pristine,\n    onCancel\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formalertparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n    disabled: true,\n    userGroups: userGroups\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst ALERT_DATA_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    type: 'update',\n    id: _ref => {\n      let {\n        commandId\n      } = _ref;\n      return commandId;\n    },\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useAlertDataQuery = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(ALERT_DATA_QUERY, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nconst updateAlertParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  partial: true,\n  data: _ref2 => {\n    let {\n      name,\n      parserType,\n      receivedMessage,\n      userGroup\n    } = _ref2;\n    return {\n      name,\n      parserType,\n      receivedMessage,\n      userGroup\n    };\n  }\n};\nexport const useUpdateCommandMutation = _ref3 => {\n  let {\n    id,\n    onAfterChange\n  } = _ref3;\n  const engine = useDataEngine();\n  const onSubmit = values => {\n    const variables = {\n      ...values,\n      id\n    };\n    return engine.mutate(updateAlertParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { ContentLoading, ContentLoadingError } from '../../shared/index.js';\nimport { createInitialValues } from './createInitialValues.js';\nimport { createUserGroupOptions } from './createUserGroupOptions.js';\nimport { Form as FormComponent } from './Form.js';\nimport { useAlertDataQuery } from './useAlertDataQuery.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormAlertParser = _ref => {\n  let {\n    commandId,\n    onAfterChange,\n    onCancel\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useAlertDataQuery(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ContentLoading, null);\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n  const initialValues = createInitialValues(data.smsCommand);\n  const userGroups = createUserGroupOptions(data.smsCommand.userGroup);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, _ref2 => {\n    let {\n      handleSubmit,\n      pristine\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      userGroups: userGroups,\n      handleSubmit: handleSubmit,\n      pristine: pristine,\n      onCancel: onCancel\n    });\n  });\n};\nFormAlertParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","export const createInitialValues = _ref => {\n  let {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  } = _ref;\n  return {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup: userGroup.id\n  };\n};","export const createUserGroupOptions = userGroup => [{\n  value: userGroup.id,\n  label: userGroup.name\n}];","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_DEFAULT_MESSAGE_NAME = 'defaultMessage';\nexport const FieldDefaultMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fielddefaultmessage'),\n  name: FIELD_DEFAULT_MESSAGE_NAME,\n  label: i18n.t('Reply message if no codes are sent (only the command)'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME = 'moreThanOneOrgUnitMessage';\nexport const FieldMoreThanOneOrgUnitMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldmorethanoneorgunitmessage'),\n  name: FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME,\n  label: i18n.t('More than one orgunit message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_NO_USER_MESSAGE_NAME = 'noUserMessage';\nexport const FieldNoUserMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldnousermessage'),\n  name: FIELD_NO_USER_MESSAGE_NAME,\n  label: i18n.t('No user message'),\n  component: TextAreaFieldFF\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SEPARATOR_NAME = 'separator';\nexport const FieldSeparator = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldseparator'),\n  name: FIELD_SEPARATOR_NAME,\n  label: i18n.t('Field separator'),\n  component: InputFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  values: true\n};\nexport const FIELD_SMS_CODES_NAME = 'smsCodes';\nexport const FieldSmsCode = _ref => {\n  let {\n    id,\n    displayName,\n    valueType\n  } = _ref;\n  const {\n    values\n  } = useFormState({\n    subscription\n  });\n  const smsCode = values[FIELD_SMS_CODES_NAME][id];\n\n  /**\n   * This uses a dynamic, nested name for storing the field value in the\n   * form state. You can't submit the data as is though, since the backend\n   * expects a different shape. So I was thinking of dealing with that\n   * in the submit handler. Since you have the ids and the field value\n   * you should be able to transform it into any shape you need.\n   */\n  return /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommand-fieldsmscode'),\n    name: `${FIELD_SMS_CODES_NAME}.${id}`,\n    label: displayName,\n    component: InputFieldFF,\n    format: code => (code === null || code === void 0 ? void 0 : code.code) || '',\n    parse: nextCode => !smsCode ? {\n      code: nextCode,\n      trackedEntityAttribute: {\n        id,\n        displayName,\n        valueType\n      }\n    } : {\n      ...smsCode,\n      code: nextCode\n    }\n  });\n};\nFieldSmsCode.propTypes = {\n  displayName: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  valueType: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSmsCodeDataElement = _ref => {\n  let {\n    dataElement,\n    smsCodes\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smscommand-fieldsmscodedataelement'),\n    key: dataElement.id,\n    name: `${FIELD_SMS_CODES_NAME}.${dataElement.id}`,\n    label: dataElement.displayName,\n    component: InputFieldFF,\n    format: value => (value === null || value === void 0 ? void 0 : value.code) || null,\n    parse: code => {\n      const currentValue = smsCodes[dataElement.id];\n      const newValue = {\n        ...currentValue,\n        code: code || '',\n        dataElement\n      };\n      return newValue;\n    }\n  });\n};\nFieldSmsCodeDataElement.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  smsCodes: PropTypes.objectOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    code: PropTypes.string,\n    compulsory: PropTypes.bool,\n    optionId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }))\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SUCCESS_MESSAGE_NAME = 'successMessage';\nexport const FieldSuccessMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldsuccessmessage'),\n  name: FIELD_SUCCESS_MESSAGE_NAME,\n  label: i18n.t('Success message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_WRONG_FORMAT_MESSAGE_NAME = 'wrongFormatMessage';\nexport const FieldWrongFormatMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldwrongformatmessage'),\n  name: FIELD_WRONG_FORMAT_MESSAGE_NAME,\n  label: i18n.t('Wrong format message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldProgram } from '../FieldProgram/index.js';\nimport { FieldProgramStage } from '../FieldProgramStage/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FieldSmsCodeDataElement } from '../FieldSmsCodeDataElement/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const Form = _ref => {\n  let {\n    handleSubmit,\n    onCancel,\n    programStageDataElements,\n    selectedProgramOption,\n    selectedProgramStageOption\n  } = _ref;\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formeventregistrationparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, programStageDataElements.map(_ref2 => {\n    let {\n      dataElement\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(FieldSmsCodeDataElement, {\n      key: dataElement.id,\n      dataElement: dataElement,\n      smsCodes: values[FIELD_SMS_CODES_NAME]\n    });\n  })), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst {\n  EVENT_REGISTRATION_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({\n    ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: EVENT_REGISTRATION_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[id,dataElement[id,displayName]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandQuery = id => useDataQuery(READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst updateEventRegistrationParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const program = command[FIELD_PROGRAM_NAME];\n    const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]);\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_PROGRAM_NAME]: program,\n      [FIELD_PROGRAM_STAGE_NAME]: programStage,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = _ref2 => {\n  let {\n    id,\n    onAfterChange\n  } = _ref2;\n  const engine = useDataEngine();\n  const onSubmit = values => {\n    const variables = {\n      ...values,\n      id\n    };\n    return engine.mutate(updateEventRegistrationParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { getInitialFormState } from './getInitialFormState.js';\nimport { useCommandQuery } from './useCommandQuery.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormEventRegistrationParser = _ref => {\n  let {\n    commandId,\n    onAfterChange,\n    onCancel\n  } = _ref;\n  const {\n    error,\n    data = {}\n  } = useCommandQuery(commandId);\n  const {\n    smsCommand: command\n  } = data;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n  if (error) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  const programStageDataElements = command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    initialValues: initialValues,\n    onSubmit: updateCommand\n  }, _ref2 => {\n    let {\n      handleSubmit\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      handleSubmit: handleSubmit,\n      selectedProgramOption: selectedProgramOption,\n      selectedProgramStageOption: selectedProgramStageOption,\n      programStageDataElements: programStageDataElements,\n      onCancel: onCancel\n    });\n  });\n};\nFormEventRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FieldSpecialCharacter_container__Ca58R\",\"field\":\"FieldSpecialCharacter_field__IzGWx\",\"button\":\"FieldSpecialCharacter_button__0KbU4\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, Field as UiField, InputFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './FieldSpecialCharacter.module.css';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nexport const FIELD_SPECIAL_CHARS_NAME = 'specialCharacters';\nexport const FieldSpecialCharacter = _ref => {\n  let {\n    index,\n    onSpecialKeyRemoved\n  } = _ref;\n  const {\n    change,\n    getState\n  } = useForm();\n  const removeSpecialKeyFieldsFromFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars.slice(0, index), ...specialChars.slice(index + 1)];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n    onSpecialKeyRemoved();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-name'),\n    label: i18n.t('Special character name'),\n    name: `${FIELD_SPECIAL_CHARS_NAME}[${index}].name`,\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-value'),\n    label: i18n.t('Special character value'),\n    name: `${FIELD_SPECIAL_CHARS_NAME}[${index}].value`,\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(UiField, {\n    label: \"\\xA0\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: removeSpecialKeyFieldsFromFormState,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-remove')\n  }, i18n.t('Remove'))));\n};\nFieldSpecialCharacter.propTypes = {\n  index: PropTypes.number.isRequired,\n  onSpecialKeyRemoved: PropTypes.func.isRequired\n};","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest } from '../../shared/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const AddSpecialCharacters = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n  const addSpecialKeyFieldsToFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars, {\n      name: '',\n      value: ''\n    }];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n  };\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: addSpecialKeyFieldsToFormState,\n    dataTest: dataTest('smscommand-addspecialcharacter')\n  }, i18n.t('Add special character')));\n};","// extracted by mini-css-extract-plugin\nexport default {\"formulaInWords\":\"CurrentFormula_formulaInWords__nZ4kL\",\"formulaInWordsLabel\":\"CurrentFormula_formulaInWordsLabel__qSy5Q\"};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './CurrentFormula.module.css';\nexport const CurrentFormula = _ref => {\n  let {\n    code,\n    formula,\n    formulaDataElementName,\n    loading,\n    operator\n  } = _ref;\n  if (!code || !formula || !formulaDataElementName || !operator) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWords,\n    \"data-test\": dataTest('smscommand-fielddataelementwithcategoryoptioncombo-currentformula')\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWordsLabel\n  }, i18n.t('Formula'), \":\"), loading && i18n.t('Loading formula'), !loading && `${code} ${operator} ${formulaDataElementName}`);\n};\nCurrentFormula.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  code: PropTypes.string,\n  formula: PropTypes.string,\n  formulaDataElementName: PropTypes.string,\n  operator: PropTypes.string\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { CurrentFormula } from './CurrentFormula.js';\nconst {\n  useField\n} = ReactFinalForm;\nconst DATA_ELEMENTS_QUERY = {\n  dataElement: {\n    resource: 'dataElements',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: () => ({\n      fields: 'displayName'\n    })\n  }\n};\nexport const AddFormulaButton = _ref2 => {\n  let {\n    baseName,\n    onClick,\n    disabled\n  } = _ref2;\n  const engine = useDataEngine();\n  const [loading, setLoading] = useState(false);\n  const [formulaDataElementName, setFormulaDataElementName] = useState('');\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const {\n    formula,\n    code\n  } = smsCode;\n  const operator = formula && formula[0];\n  const dataElementId = formula && formula.slice(1);\n  useEffect(() => {\n    if (dataElementId) {\n      setLoading(true);\n      engine.query(DATA_ELEMENTS_QUERY, {\n        variables: {\n          id: dataElementId\n        }\n      }).then(response => {\n        const {\n          displayName\n        } = response.dataElement;\n        setFormulaDataElementName(displayName);\n      }).finally(() => setLoading(false));\n    }\n  }, [dataElementId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CurrentFormula, {\n    code: code,\n    formula: formula,\n    formulaDataElementName: formulaDataElementName,\n    loading: loading,\n    operator: operator\n  }), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: onClick,\n    disabled: disabled,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncombo-addformulabutton')\n  }, formula ? i18n.t('Edit formula') : i18n.t('Add formula')));\n};\nAddFormulaButton.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FieldDataElementWithCategoryOptionCombo_container__2N8Du\",\"field\":\"FieldDataElementWithCategoryOptionCombo_field__B+pHY\",\"codeField\":\"FieldDataElementWithCategoryOptionCombo_codeField__pVMfn\"};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react';\nexport const DATA_ELEMENTS_QUERY = {\n  dataSet: {\n    resource: 'dataSets',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: _ref2 => {\n      let {\n        filter\n      } = _ref2;\n      return {\n        filter,\n        fields: 'dataSetElements[dataElement[id,code,displayName]]'\n      };\n    }\n  }\n};\nexport const queryDataElementsOfDataSet = (engine, variables) => engine.query(DATA_ELEMENTS_QUERY, {\n  variables\n}).then(data => {\n  const {\n    dataSet\n  } = data;\n  const {\n    dataSetElements\n  } = dataSet;\n  const formatted = dataSetElements.map(_ref3 => {\n    let {\n      dataElement\n    } = _ref3;\n    return dataElement;\n  });\n  formatted.sort((left, right) => {\n    const leftDisplayName = left.displayName;\n    const rightDisplayName = right.displayName;\n    if (leftDisplayName === rightDisplayName) {\n      return 0;\n    }\n    if (leftDisplayName < rightDisplayName) {\n      return -1;\n    }\n    return 1;\n  });\n  return formatted;\n});\nexport const useReadDataElementsOfDataSetQuery = (dataSetId, filter) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return queryDataElementsOfDataSet(engine, variables).then(setData).catch(setError).finally(() => setLoading(false));\n  };\n\n  // initial request\n  useEffect(() => {\n    refetch({\n      id: dataSetId,\n      filter\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, CircularLoader, Modal, ModalActions, ModalContent, ModalTitle, NoticeBox, ReactFinalForm, SingleSelectFieldFF, hasValue } from '@dhis2/ui';\nimport React, { useMemo } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest } from '../../shared/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { useReadDataElementsOfDataSetQuery } from './useReadDataElementsOfDataSetQuery.js';\nconst {\n  Field,\n  Form,\n  useForm,\n  useField\n} = ReactFinalForm;\nexport const FormulaModalForm = _ref => {\n  let {\n    baseName,\n    combo,\n    targetFieldName,\n    onClose\n  } = _ref;\n  const form = useForm();\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const dataSetId = useField(FIELD_DATA_SET_NAME, {\n    subscription: {\n      value: true\n    }\n  }).input.value.id;\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataElementsOfDataSetQuery(dataSetId);\n\n  // Using memo so changing the form does not change the \"initialValues\"\n  // which would cause the form to update unnecessarily\n  const initialFormula = smsCode.formula;\n  const initialOperator = useMemo(() => initialFormula ? initialFormula[0] : '+', []);\n  const initialDataElementCode = useMemo(() => initialFormula ? initialFormula.slice(1) : '', []);\n  const initialValues = {\n    operator: initialOperator,\n    dataElementCode: initialDataElementCode\n  };\n  const modalDataTest = dataTest('smscommand-fielddataelementwithcategoryoptioncombo-formulamodalform');\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Modal, {\n      dataTest: modalDataTest\n    }, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n  const options = data.map(dataElement => {\n    const {\n      id,\n      displayName\n    } = dataElement;\n    return {\n      value: id,\n      label: displayName\n    };\n  });\n  const onSubmit = values => {\n    const newFormula = `${values.operator}${values.dataElementCode}`;\n    form.change(targetFieldName, newFormula);\n    onClose();\n  };\n  const onRemove = () => {\n    form.change(targetFieldName, null);\n    onClose();\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, _ref2 => {\n    let {\n      handleSubmit\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(Modal, {\n      dataTest: modalDataTest\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => {\n        event.stopPropagation();\n        handleSubmit(event);\n      }\n    }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Formula for {{combo}}', {\n      combo\n    })), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n      required: true,\n      dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-dataelement'),\n      name: \"dataElementCode\",\n      label: i18n.t('Data element'),\n      component: SingleSelectFieldFF,\n      options: options,\n      validate: hasValue\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n      required: true,\n      dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-operator'),\n      name: \"operator\",\n      label: i18n.t('formula operator'),\n      component: SingleSelectFieldFF,\n      initialValue: \"+\",\n      options: [{\n        value: '+',\n        label: '+'\n      }, {\n        value: '-',\n        label: '-'\n      }]\n    })), error && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: i18n.t('Something went wrong whilst saving')\n    }, error.message))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: onRemove,\n      dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-remove')\n    }, i18n.t('Remove')), /*#__PURE__*/React.createElement(Button, {\n      onClick: onClose,\n      dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-cancel')\n    }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-save')\n    }, i18n.t('Save'))))));\n  });\n};\nFormulaModalForm.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  combo: PropTypes.string.isRequired,\n  targetFieldName: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};","function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { AddFormulaButton } from './AddFormulaButton.js';\nimport styles from './FieldDataElementWithCategoryOptionCombo.module.css';\nimport { FormulaModalForm } from './FormulaModalForm.js';\nconst DE_COC_toFormName = (dataElement, categoryOptionCombo) => {\n  const dataElementId = dataElement.id;\n  const cocCode = categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.id;\n  const isDefault = cocCode === 'default';\n  if (!cocCode || isDefault) {\n    return `${FIELD_SMS_CODES_NAME}.${dataElementId}`;\n  }\n  return `${FIELD_SMS_CODES_NAME}.${dataElementId}-${cocCode}`;\n};\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldDataElementWithCategoryOptionCombo = _ref => {\n  let {\n    dataElement,\n    categoryOptionCombo\n  } = _ref;\n  const [showFormula, setShowFormula] = useState(false);\n  const label = categoryOptionCombo ? `${dataElement.displayName} ${categoryOptionCombo.displayName}` : `${dataElement.displayName} ${i18n.t('default')}`;\n  const baseName = DE_COC_toFormName(dataElement, categoryOptionCombo);\n  const name = `${baseName}.code`;\n  const formulaName = `${baseName}.formula`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smscommand-fielddataelementwithcategoryoptioncombo')\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: styles.field,\n    label: label,\n    name: name,\n    subscription: {\n      value: true,\n      error: true,\n      invalid: true,\n      touched: true\n    }\n  }, _ref2 => {\n    let {\n      input,\n      meta,\n      ...rest\n    } = _ref2;\n    const code = input.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputFieldFF, _extends({}, rest, {\n      className: styles.codeField,\n      input: input,\n      meta: meta,\n      error: !!meta.error\n    })), /*#__PURE__*/React.createElement(AddFormulaButton, {\n      disabled: !code,\n      baseName: baseName,\n      formulaFieldName: formulaName,\n      onClick: () => setShowFormula(true)\n    }), showFormula && /*#__PURE__*/React.createElement(FormulaModalForm, {\n      baseName: baseName,\n      combo: label,\n      targetFieldName: formulaName,\n      onClose: () => setShowFormula(false)\n    }));\n  }));\n};\nFieldDataElementWithCategoryOptionCombo.defaultProps = {\n  categoryOptionCombo: null,\n  formula: ''\n};\nFieldDataElementWithCategoryOptionCombo.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  categoryOptionCombo: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n};","import i18n from '../../locales/index.js';\nconst ALL_DATAVALUE = {\n  value: 'ALL_DATAVALUE',\n  label: i18n.t('Receive all data values')\n};\nconst AT_LEAST_ONE_DATAVALUE = {\n  value: 'AT_LEAST_ONE_DATAVALUE',\n  label: i18n.t('Receive at least one data value')\n};\nconst DO_NOT_MARK_COMPLETE = {\n  value: 'DO_NOT_MARK_COMPLETE',\n  label: i18n.t('Do not mark as complete')\n};\nexport const completenessMethods = {\n  ALL_DATAVALUE,\n  AT_LEAST_ONE_DATAVALUE,\n  DO_NOT_MARK_COMPLETE\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/utils/index.js';\nimport { completenessMethods } from './completenessMethods.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(completenessMethods);\nexport const FIELD_COMPLETENESS_METHOD_NAME = 'completenessMethod';\nexport const FieldCompletenessMethod = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldcompletenessmethod'),\n  name: FIELD_COMPLETENESS_METHOD_NAME,\n  label: i18n.t('Completeness method'),\n  component: SingleSelectFieldFF,\n  options: options\n});","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow } from '../../shared/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod/index.js';\nconst {\n  ALL_DATAVALUE,\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  useField\n} = ReactFinalForm;\nexport const CompletenessMessage = () => {\n  const {\n    input\n  } = useField(FIELD_COMPLETENESS_METHOD_NAME, {\n    subscription: {\n      value: true\n    }\n  });\n  const completenessMethod = input.value;\n  const title = i18n.t('Required values notice');\n  if (completenessMethod === ALL_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(`Make sure all SMS short codes are provided when completeness method \"${ALL_DATAVALUE.label}\" is chosen, otherwise received messages will not be processed.`)));\n  }\n  if (completenessMethod === AT_LEAST_ONE_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(`Make sure at least one SMS short code is provided when completeness method \"{{atLeastOneDataValueLabel}}\" is chosen, otherwise received messages will not be processed.`, {\n      atLeastOneDataValueLabel: AT_LEAST_ONE_DATAVALUE.label\n    })));\n  }\n  return null;\n};","// extracted by mini-css-extract-plugin\nexport default {\"formRow\":\"DataElementTimesCategoryOptionCombos_formRow__XVtnZ\"};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { FieldDataElementWithCategoryOptionCombo } from '../FieldDataElementWithCategoryOptionCombo/index.js';\nimport { CompletenessMessage } from './CompletenessMessage.js';\nimport styles from './DataElementTimesCategoryOptionCombos.module.css';\nexport const DataElementTimesCategoryOptionCombos = _ref => {\n  let {\n    DE_COC_combinations\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smscommand-dataelementtimescategoryoptioncombos')\n  }, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), /*#__PURE__*/React.createElement(CompletenessMessage, null), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smscommand-dataelementtimescategoryoptioncombos-rows')\n  }, DE_COC_combinations.map(_ref2 => {\n    let {\n      dataElement,\n      categoryOptionCombo\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(FormRow, {\n      className: styles.formRow,\n      key: dataElement.id + (categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.id)\n    }, /*#__PURE__*/React.createElement(FieldDataElementWithCategoryOptionCombo, {\n      dataElement: dataElement,\n      categoryOptionCombo: categoryOptionCombo\n    }));\n  })));\n};\nDataElementTimesCategoryOptionCombos.defaultProps = {\n  allRequired: false\n};\nDataElementTimesCategoryOptionCombos.propTypes = {\n  DE_COC_combinations: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired\n};","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME = 'currentPeriodUsedForReporting';\nexport const FieldUseCurrentPeriodForReporting = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smscommand-fieldusecurrentperiodforreporting'),\n  name: FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME,\n  label: i18n.t('Use current period for reporting'),\n  component: CheckboxFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters/index.js';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod/index.js';\nimport { FieldDataSet } from '../FieldDataSet/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const Form = _ref => {\n  let {\n    DE_COC_combination_data,\n    handleSubmit,\n    hasSpecialChars,\n    onCancel,\n    pristine,\n    selectedDataSetOption\n  } = _ref;\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formj2meparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, _ref2 => {\n    let {\n      values\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n      key: index\n    }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n      index: index,\n      onSpecialKeyRemoved: onSpecialKeyRemoved\n    }))));\n  }), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst {\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  J2ME_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = J2ME_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, payload) => {\n    const {\n      code,\n      compulsory,\n      formula,\n      optionId: optionIdWrapper,\n      dataElement\n    } = payload;\n    const {\n      id: optionId\n    } = optionIdWrapper;\n    const key = optionId < 10 ? dataElement.id : `${dataElement.id}-${optionId}`;\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n    if (formula) {\n      smsCode.formula = formula;\n    }\n    return {\n      ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","export const getSmsCodeDuplicates = smsCodes => {\n  const duplicates = smsCodes.reduce((curDuplicates, smsCode, index) => {\n    const [name, code] = smsCode;\n    const errorAlreadyPresent = curDuplicates.includes(name);\n    if (errorAlreadyPresent) {\n      return curDuplicates;\n    }\n    const potentialDuplicates = smsCodes.filter(\n    // eslint-disable-next-line no-unused-vars\n    (_ref, curIndex) => {\n      let [_, curCode] = _ref;\n      return curCode.code === code.code && curIndex !== index;\n    });\n    const noDuplicates = !potentialDuplicates.length;\n    if (noDuplicates) {\n      return curDuplicates;\n    }\n    const newlyFoundDuplicates = potentialDuplicates.reduce((curWithCodeDuplicates, _ref2) => {\n      let [curName] = _ref2;\n      return [...curWithCodeDuplicates, curName];\n    }, [name]);\n    return [...curDuplicates, ...newlyFoundDuplicates];\n  }, []);\n  return duplicates;\n};","import i18n from '../../locales/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { getSmsCodeDuplicates } from '../getSmsCodeDuplicates/index.js';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(_ref => {\n    let [_, {\n      code\n    }] = _ref;\n    return code;\n  }); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react';\n\n// @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: () => ({\n      fields: ['*', `dataset[id,displayName,dataSetElements[dataElement[id,displayName,categoryCombo[categoryOptionCombos[*,id,displayName]]]]]`]\n    })\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  };\n\n  // initial request\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME } from '../FieldParser/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst updateJ2meParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]).map(_ref2 => {\n      let {\n        code: codeWrapper,\n        compulsory,\n        optionId,\n        dataElement\n      } = _ref2;\n      const {\n        code,\n        formula\n      } = codeWrapper;\n      const formattedSmsCode = {\n        code,\n        compulsory: !!compulsory,\n        dataElement\n      };\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = _ref3 => {\n  let {\n    id,\n    onAfterChange\n  } = _ref3;\n  const engine = useDataEngine();\n  const onSubmit = values => {\n    const variables = {\n      ...values,\n      id,\n      smsCodes: !values.smsCodes || !Object.values(values.smsCodes).length ? [] : Object.entries(values.smsCodes).map(_ref4 => {\n        let [key, value] = _ref4;\n        const [dataElementId, categoryOptionComboId] = key.split('-');\n        return {\n          ...(categoryOptionComboId ? {\n            optionId: {\n              id: categoryOptionComboId\n            }\n          } : {}),\n          code: value,\n          dataElement: {\n            id: dataElementId\n          }\n        };\n      })\n    };\n    return engine.mutate(updateJ2meParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { getInitialFormState } from './getInitialFormState.js';\nimport { globalValidate } from './globalValidate.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormJ2meParser = _ref => {\n  let {\n    commandId,\n    onAfterChange,\n    onCancel\n  } = _ref;\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, _ref2) => {\n    var _dataElement$category;\n    let {\n      dataElement\n    } = _ref2;\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombos;\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars !== null && specialChars !== void 0 && specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, _ref3 => {\n    let {\n      handleSubmit,\n      pristine,\n      dirty\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      DE_COC_combination_data: DE_COC_combination_data,\n      dirty: dirty,\n      handleSubmit: handleSubmit,\n      pristine: pristine,\n      hasSpecialChars: hasSpecialChars,\n      selectedDataSetOption: selectedDataSetOption,\n      onCancel: onCancel\n    });\n  });\n};\nFormJ2meParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters/index.js';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod/index.js';\nimport { FieldDataSet } from '../FieldDataSet/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const Form = _ref => {\n  let {\n    DE_COC_combination_data,\n    handleSubmit,\n    hasSpecialChars,\n    onCancel,\n    pristine,\n    selectedDataSetOption\n  } = _ref;\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formkeyvalueparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, _ref2 => {\n    let {\n      values\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n      key: index\n    }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n      index: index,\n      onSpecialKeyRemoved: onSpecialKeyRemoved\n    }))));\n  }), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst {\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  KEY_VALUE_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = KEY_VALUE_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, payload) => {\n    const {\n      code,\n      compulsory,\n      formula,\n      optionId: optionIdWrapper,\n      dataElement\n    } = payload;\n    const {\n      id: optionId\n    } = optionIdWrapper;\n    const key = optionId < 10 ? dataElement.id : `${dataElement.id}-${optionId}`;\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n    if (formula) {\n      smsCode.formula = formula;\n    }\n    return {\n      ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","import i18n from '../../locales/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { getSmsCodeDuplicates } from '../getSmsCodeDuplicates/index.js';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(_ref => {\n    let [_, {\n      code\n    }] = _ref;\n    return code;\n  }); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react';\n\n// @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: () => ({\n      fields: ['*', `dataset[id,displayName,dataSetElements[dataElement[id,displayName,categoryCombo[categoryOptionCombos[*,id,displayName]]]]]`]\n    })\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  };\n\n  // initial request\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME } from '../FieldParser/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst updateKeyValueParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]).map(_ref2 => {\n      let {\n        code: codeWrapper,\n        compulsory,\n        optionId,\n        dataElement\n      } = _ref2;\n      const {\n        code,\n        formula\n      } = codeWrapper;\n      const formattedSmsCode = {\n        code,\n        compulsory: !!compulsory,\n        dataElement\n      };\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = _ref3 => {\n  let {\n    id,\n    onAfterChange\n  } = _ref3;\n  const engine = useDataEngine();\n  const onSubmit = values => {\n    const variables = {\n      ...values,\n      id,\n      smsCodes: !values.smsCodes || !Object.values(values.smsCodes).length ? [] : Object.entries(values.smsCodes).map(_ref4 => {\n        let [key, value] = _ref4;\n        const [dataElementId, categoryOptionComboId] = key.split('-');\n        return {\n          ...(categoryOptionComboId ? {\n            optionId: {\n              id: categoryOptionComboId\n            }\n          } : {}),\n          code: value,\n          dataElement: {\n            id: dataElementId\n          }\n        };\n      })\n    };\n    return engine.mutate(updateKeyValueParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest as createDataTestValue } from '../../shared/index.js';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet/index.js';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { getInitialFormState } from './getInitialFormState.js';\nimport { globalValidate } from './globalValidate.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormKeyValueParser = _ref => {\n  let {\n    commandId,\n    onAfterChange,\n    onCancel\n  } = _ref;\n  const dataTest = createDataTestValue('smscommandkeyvalueparser-commandeditj2meparserform');\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, _ref2) => {\n    var _dataElement$category;\n    let {\n      dataElement\n    } = _ref2;\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombos;\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars !== null && specialChars !== void 0 && specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, _ref3 => {\n    let {\n      handleSubmit,\n      pristine,\n      dirty\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      DE_COC_combination_data: DE_COC_combination_data,\n      dataTest: dataTest,\n      dirty: dirty,\n      handleSubmit: handleSubmit,\n      pristine: pristine,\n      hasSpecialChars: hasSpecialChars,\n      selectedDataSetOption: selectedDataSetOption,\n      onCancel: onCancel\n    });\n  });\n};\nFormKeyValueParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldProgram } from '../FieldProgram/index.js';\nimport { FieldProgramStage } from '../FieldProgramStage/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FieldSmsCodeDataElement } from '../FieldSmsCodeDataElement/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = _ref => {\n  let {\n    handleSubmit,\n    selectedProgramOption,\n    programStageDataElements,\n    selectedProgramStageOption,\n    onCancel\n  } = _ref;\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditprogramstagedataentryparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, programStageDataElements.map(_ref2 => {\n    let {\n      dataElement\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(FieldSmsCodeDataElement, {\n      key: dataElement.id,\n      dataElement: dataElement,\n      smsCodes: values[FIELD_SMS_CODES_NAME]\n    });\n  })), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName/index.js';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage/index.js';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram/index.js';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage/index.js';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage/index.js';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage/index.js';\nconst {\n  PROGRAM_STAGE_DATAENTRY_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({\n    ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: PROGRAM_STAGE_DATAENTRY_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[dataElement[id,displayName]]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandData = programStageId => useDataQuery(READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY, {\n  variables: {\n    id: programStageId\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: _ref => {\n    let {\n      commandId\n    } = _ref;\n    return commandId;\n  },\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: _ref2 => {\n    let {\n      commandId,\n      ...params\n    } = _ref2;\n    return {\n      ...params,\n      [FIELD_SMS_CODES_NAME]: Object.values(params[FIELD_SMS_CODES_NAME])\n    };\n  }\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = {\n  ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = _ref3 => {\n  let {\n    onAfterChange,\n    commandId\n  } = _ref3;\n  const engine = useDataEngine();\n  const onSubmit = values => {\n    const variables = {\n      ...values,\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { ContentLoading, ContentLoadingError } from '../../shared/index.js';\nimport { FormComponent } from './FormComponent.js';\nimport { getInitialFormState } from './getInitialFormState.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormProgramStageDataEntryParser = _ref => {\n  let {\n    commandId,\n    onAfterChange,\n    onCancel\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ContentLoading, null);\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n  const command = data === null || data === void 0 ? void 0 : data.smsCommand;\n  const programStageDataElements = command === null || command === void 0 ? void 0 : command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, _ref2 => {\n    let {\n      handleSubmit\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      handleSubmit: handleSubmit,\n      selectedProgramOption: selectedProgramOption,\n      programStageDataElements: programStageDataElements,\n      selectedProgramStageOption: selectedProgramStageOption,\n      onCancel: onCancel\n    });\n  });\n};\nFormProgramStageDataEntryParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage/index.js';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage/index.js';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FieldProgram } from '../FieldProgram/index.js';\nimport { FieldSeparator } from '../FieldSeparator/index.js';\nimport { FieldSmsCode } from '../FieldSmsCode/index.js';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage/index.js';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const Form = _ref => {\n  let {\n    handleSubmit,\n    dynamicFields,\n    selectedProgramOption,\n    onCancel\n  } = _ref;\n  const {\n    pristine\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formtrackedentityregistrationparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), dynamicFields.map(dynamicField => {\n    // I assume this should switch field types based on `valueType`\n    // which can be 'TEXT', 'NUMBER', etc. Currently this renders\n    // a regular input for everything.\n    return /*#__PURE__*/React.createElement(FormRow, {\n      key: dynamicField.id\n    }, /*#__PURE__*/React.createElement(FieldSmsCode, {\n      id: dynamicField.id,\n      displayName: dynamicField.displayName,\n      valueType: dynamicField.valueType\n    }));\n  }), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  dynamicFields: PropTypes.arrayOf(PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    valueType: PropTypes.string.isRequired\n  })).isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: () => {\n      const fields = ['name', 'parserType', 'separator', 'defaultMessage', 'wrongFormatMessage', 'noUserMessage', 'moreThanOneOrgUnitMessage', 'successMessage',\n      // The queries below should be reduced to only the data we need\n      `program [\n                    id,\n                    displayName,\n                    programTrackedEntityAttributes [\n                        trackedEntityAttribute [\n                            :all,\n                            id,\n                            displayName\n                        ]\n                    ]\n                ]`, `smsCodes [\n                    :all,\n                    trackedEntityAttribute [\n                        id,\n                        displayName,\n                        valueType\n                    ]\n                ]`];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, ''))\n      };\n    }\n  }\n};\nexport const useCommandData = id => useDataQuery(query, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode/index.js';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: _ref => {\n    let {\n      commandId\n    } = _ref;\n    return commandId;\n  },\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: _ref2 => {\n    let {\n      commandId,\n      ...params\n    } = _ref2;\n    return {\n      ...params,\n      [FIELD_SMS_CODES_NAME]: Object.values(params[FIELD_SMS_CODES_NAME])\n    };\n  }\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = {\n  ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = _ref3 => {\n  let {\n    onAfterChange,\n    commandId\n  } = _ref3;\n  const engine = useDataEngine();\n  const onSubmit = values => {\n    const variables = {\n      ...values,\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { ContentLoading, ContentLoadingError } from '../../shared/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormTrackedEntityRegistrationParser = _ref => {\n  let {\n    commandId,\n    onAfterChange,\n    onCancel\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ContentLoading, null);\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n  const {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes: smsCodesOriginal\n  } = data.smsCommand;\n  const smsCodes = smsCodesOriginal.reduce((curSmsCodes, smsCode) => ({\n    ...curSmsCodes,\n    [smsCode.trackedEntityAttribute.id]: smsCode\n  }), {});\n  const initialValues = {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes\n  };\n  const selectedProgramOption = {\n    value: program.id,\n    label: program.displayName\n  };\n\n  /**\n   * Create usable data for the dynamic fields\n   */\n\n  // The tracked entity attributes here have the right order for the fields\n  const trackedEntityAttributes = program.programTrackedEntityAttributes.map(_ref2 => {\n    let {\n      trackedEntityAttribute\n    } = _ref2;\n    return trackedEntityAttribute;\n  });\n\n  // Creating an array with only the data we need to render our dynamic form fields\n  const dynamicFields = trackedEntityAttributes.map(trackedEntityAttribute => {\n    const {\n      id,\n      displayName,\n      valueType\n    } = trackedEntityAttribute;\n    const merged = {\n      id,\n      displayName,\n      valueType\n    };\n    const smsCode = smsCodes[id];\n    if (smsCode) {\n      // This contains the actual value of the field\n      merged.initialValue = smsCode.code;\n    }\n    return merged;\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, _ref3 => {\n    let {\n      handleSubmit\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      dynamicFields: dynamicFields,\n      handleSubmit: handleSubmit,\n      selectedProgramOption: selectedProgramOption,\n      onCancel: onCancel\n    });\n  });\n};\nFormTrackedEntityRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { FormRow, FieldUserGroup, dataTest } from '../../shared/index.js';\nimport { FieldCommandName } from '../FieldCommandName/index.js';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage/index.js';\nimport { FieldParser } from '../FieldParser/index.js';\nimport { FormActions } from '../FormActions/index.js';\nimport { SubmitErrors } from '../SubmitErrors/index.js';\nexport const Form = _ref => {\n  let {\n    handleSubmit,\n    userGroups,\n    pristine,\n    onCancel\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandunregisteredparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n    disabled: true,\n    userGroups: userGroups\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: _ref => {\n      let {\n        commandId\n      } = _ref;\n      return commandId;\n    },\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useCommandData = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(query, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared/index.js';\nexport const UPDATE_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  partial: true,\n  id: _ref => {\n    let {\n      commandId\n    } = _ref;\n    return commandId;\n  },\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: _ref2 => {\n    let {\n      commandId,\n      ...params\n    } = _ref2;\n    return params;\n  }\n};\nexport const useUpdateCommandMutation = _ref3 => {\n  let {\n    onAfterChange,\n    commandId\n  } = _ref3;\n  const engine = useDataEngine();\n  const onSubmit = values => {\n    const variables = {\n      ...values,\n      commandId\n    };\n    return engine.mutate(UPDATE_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { ContentLoading, ContentLoadingError } from '../../shared/index.js';\nimport { Form as FormComponent } from './Form.js';\nimport { useCommandData } from './useCommandData.js';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormUnregisteredParser = _ref => {\n  let {\n    commandId,\n    onAfterChange,\n    onCancel\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ContentLoading, null);\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n  const {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  } = data.smsCommand;\n  const initialValues = {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup: userGroup.id\n  };\n  const userGroups = [{\n    value: userGroup.id,\n    label: userGroup.name\n  }];\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, _ref2 => {\n    let {\n      handleSubmit,\n      pristine\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      handleSubmit: handleSubmit,\n      userGroups: userGroups,\n      pristine: pristine,\n      onCancel: onCancel\n    });\n  });\n};\nFormUnregisteredParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_PARSER_TYPE_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    },\n    params: {\n      fields: 'parserType',\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandParserTypeQuery = id => useDataQuery(READ_SMS_COMMAND_PARSER_TYPE_QUERY, {\n  variables: {\n    id\n  }\n});","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewSmsCommandEdit_container__lcWcs\"};","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { CancelDialog, PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser/index.js';\nimport { FormAlertParser } from '../FormAlertParser/index.js';\nimport { FormEventRegistrationParser } from '../FormEventRegistrationParser/index.js';\nimport { FormJ2meParser } from '../FormJ2meParser/index.js';\nimport { FormKeyValueParser } from '../FormKeyValueParser/index.js';\nimport { FormProgramStageDataEntryParser } from '../FormProgramStageDataEntryParser/index.js';\nimport { FormTrackedEntityRegistrationParser } from '../FormTrackedEntityRegistrationParser/index.js';\nimport { FormUnregisteredParser } from '../FormUnregisteredParser/index.js';\nimport { useReadSmsCommandParserTypeQuery } from './useReadSmsCommandParserTypeQuery.js';\nimport styles from './ViewSmsCommandEdit.module.css';\nexport const SMS_COMMAND_FORM_EDIT_PATH_STATIC = '/sms-config/edit';\nexport const SMS_COMMAND_FORM_EDIT_PATH = `${SMS_COMMAND_FORM_EDIT_PATH_STATIC}/:id`;\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nconst isParserType = (parserType, parser) => parserType === parser.value;\nconst getSmsCommandEditFormComponent = parserType => {\n  const isParser = isParserType.bind(null, parserType);\n  if (!parserType) {\n    return null;\n  }\n  if (isParser(KEY_VALUE_PARSER)) {\n    return FormKeyValueParser;\n  }\n  if (isParser(J2ME_PARSER)) {\n    return FormJ2meParser;\n  }\n  if (isParser(ALERT_PARSER)) {\n    return FormAlertParser;\n  }\n  if (isParser(PROGRAM_STAGE_DATAENTRY_PARSER)) {\n    return FormProgramStageDataEntryParser;\n  }\n  if (isParser(UNREGISTERED_PARSER)) {\n    return FormUnregisteredParser;\n  }\n  if (isParser(EVENT_REGISTRATION_PARSER)) {\n    return FormEventRegistrationParser;\n  }\n  if (isParser(TRACKED_ENTITY_REGISTRATION_PARSER)) {\n    return FormTrackedEntityRegistrationParser;\n  }\n  return null;\n};\nexport const ViewSmsCommandEdit = () => {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useReadSmsCommandParserTypeQuery(id);\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const onAfterChange = () => history.push('/sms-command');\n  const onCancel = pristine => pristine ? history.goBack() : setShowCancelDialog(true);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading commands');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n  const parserType = data === null || data === void 0 ? void 0 : data.smsCommand[FIELD_PARSER_NAME];\n  const FormComponent = getSmsCommandEditFormComponent(parserType);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smscommand-viewsmscommandedit')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit command')), FormComponent && /*#__PURE__*/React.createElement(FormComponent, {\n    commandId: id,\n    onCancel: onCancel,\n    onAfterChange: onAfterChange\n  }), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-command'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }), !parserType && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Unrecognised parser type')\n  }, i18n.t('Could not find the requested parser type'))));\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'delete',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  }\n};\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_SMS_COMMAND_MUTATION, {\n    variables\n  });\n};\nexport const useDeleteSmsCommandMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n  const onStart = () => setLoading(true);\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n  const mutate = _ref2 => {\n    let {\n      ids\n    } = _ref2;\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const SMS_COMMANDS_QUERY = {\n  smsCommands: {\n    resource: 'smsCommands',\n    pager: false,\n    params: function () {\n      let {\n        ids\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        // @TODO: Why is `paging: false` not working?\n        paging: 'false',\n        fields: '*',\n        filter: ids ? `ids:in:[${ids.join(',')}]` : undefined\n      };\n    }\n  }\n};\nexport const useReadSmsCommandsQuery = () => useDataQuery(SMS_COMMANDS_QUERY);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewSmsCommandList_container__4MkkG\",\"editButtonCell\":\"ViewSmsCommandList_editButtonCell__OxfWd\",\"checkbox\":\"ViewSmsCommandList_checkbox__QnQbi\",\"noResults\":\"ViewSmsCommandList_noResults__EcUgG\"};","import { Button, Checkbox, Table, TableHead, TableBody, TableRow, TableRowHead, TableCell, TableCellHead, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { ListActions, DeleteConfirmationDialog, PageHeadline, Paragraph, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { parserTypes } from '../FieldParser/index.js';\nimport { useDeleteSmsCommandMutation } from './useDeleteSmsCommandMutation.js';\nimport { useReadSmsCommandsQuery } from './useReadSmsCommandsQuery.js';\nimport styles from './ViewSmsCommandList.module.css';\nexport const SMS_COMMAND_LIST_LABEL = i18n.t('Commands');\nexport const SMS_COMMAND_LIST_PATH = '/sms-config';\nconst getLabelByParserTypes = parserType => {\n  const type = Object.values(parserTypes).find(_ref => {\n    let {\n      value\n    } = _ref;\n    return value === parserType;\n  });\n  return (type === null || type === void 0 ? void 0 : type.label) || parserType;\n};\nexport const ViewSmsCommandList = () => {\n  var _data$smsCommands2, _data$smsCommands2$sm, _data$smsCommands3, _data$smsCommands3$sm, _data$smsCommands4, _data$smsCommands4$sm;\n  const history = useHistory();\n  const onAddCommandClick = () => history.push('sms-command/new');\n  const [checkedSmsCommands, setCheckedSmsCommands] = useState([]);\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const {\n    loading: loadingReadSmsCommands,\n    error: errorReadSmsCommands,\n    data,\n    refetch\n  } = useReadSmsCommandsQuery();\n  const [deleteSmsCommands, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteSmsCommandMutation();\n  if (loadingReadSmsCommands) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('smscommand-viewsmscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))));\n  }\n  const error = errorReadSmsCommands || errorDelete;\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message)));\n  }\n  const onToggleCallChange = () => {\n    var _data$smsCommands;\n    const smsCommands = data === null || data === void 0 ? void 0 : (_data$smsCommands = data.smsCommands) === null || _data$smsCommands === void 0 ? void 0 : _data$smsCommands.smsCommands;\n    if (!smsCommands) {\n      return;\n    }\n    if (checkedSmsCommands.length === smsCommands.length) {\n      setCheckedSmsCommands([]);\n    } else {\n      setCheckedSmsCommands(smsCommands.map(_ref2 => {\n        let {\n          id,\n          displayName\n        } = _ref2;\n        return {\n          id,\n          displayName\n        };\n      }));\n    }\n  };\n  const toggleSmsCommand = smsCommand => {\n    const {\n      id\n    } = smsCommand;\n    if (checkedSmsCommands.find(_ref3 => {\n      let {\n        id: checkedId\n      } = _ref3;\n      return id === checkedId;\n    })) {\n      const index = checkedSmsCommands.findIndex(_ref4 => {\n        let {\n          id: checkedId\n        } = _ref4;\n        return id === checkedId;\n      });\n      return setCheckedSmsCommands([...checkedSmsCommands.slice(0, index), ...checkedSmsCommands.slice(index + 1)]);\n    }\n    return setCheckedSmsCommands([...checkedSmsCommands, smsCommand]);\n  };\n  const onDeleteClick = async () => {\n    const ids = checkedSmsCommands.map(_ref5 => {\n      let {\n        id\n      } = _ref5;\n      return id;\n    });\n    await deleteSmsCommands({\n      ids\n    });\n    setCheckedSmsCommands([]);\n    setShowDeleteConfirmationDialog(false);\n    refetch();\n  };\n  const allChecked = checkedSmsCommands.length === (data === null || data === void 0 ? void 0 : (_data$smsCommands2 = data.smsCommands) === null || _data$smsCommands2 === void 0 ? void 0 : (_data$smsCommands2$sm = _data$smsCommands2.smsCommands) === null || _data$smsCommands2$sm === void 0 ? void 0 : _data$smsCommands2$sm.length);\n  const hasCommands = (data === null || data === void 0 ? void 0 : (_data$smsCommands3 = data.smsCommands) === null || _data$smsCommands3 === void 0 ? void 0 : (_data$smsCommands3$sm = _data$smsCommands3.smsCommands) === null || _data$smsCommands3$sm === void 0 ? void 0 : _data$smsCommands3$sm.length) > 0;\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandlist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('SMS commands process SMS messages received by a DHIS2 instance, taking certain actions depending on the command and message content. Multiple SMS commands can be set up to process and handle data in multiple ways. Add and configure SMS commands below. Read about SMS commands in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add command'),\n    deleteLabel: i18n.t('Delete selected'),\n    onAddClick: onAddCommandClick,\n    onDeleteClick: () => setShowDeleteConfirmationDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedSmsCommands.length || loadingDelete\n  }), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteConfirmationDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected commands?')), /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('views-smscommandlist-commandtable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: allChecked,\n    onChange: onToggleCallChange\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Sms command')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Parser')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, hasCommands ? data === null || data === void 0 ? void 0 : (_data$smsCommands4 = data.smsCommands) === null || _data$smsCommands4 === void 0 ? void 0 : (_data$smsCommands4$sm = _data$smsCommands4.smsCommands) === null || _data$smsCommands4$sm === void 0 ? void 0 : _data$smsCommands4$sm.map(_ref6 => {\n    let {\n      id,\n      displayName,\n      parserType\n    } = _ref6;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: id\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: styles.checkbox\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: !!checkedSmsCommands.find(_ref7 => {\n        let {\n          id: checkedId\n        } = _ref7;\n        return id === checkedId;\n      }),\n      onChange: () => toggleSmsCommand({\n        id,\n        displayName\n      })\n    })), /*#__PURE__*/React.createElement(TableCell, null, displayName), /*#__PURE__*/React.createElement(TableCell, null, getLabelByParserTypes(parserType)), /*#__PURE__*/React.createElement(TableCell, {\n      className: styles.editButtonCell\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => history.push(`sms-command/${id}`)\n    }, i18n.t('Edit'))));\n  }) : /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: \"4\",\n    className: styles.noResults\n  }, i18n.t('No commands to display')))))));\n};","import i18n from '@dhis2/d2-i18n';\nimport { Checkbox } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nexport const FieldEditConfidential = _ref => {\n  let {\n    editMode,\n    allowConfidentialFieldEdit,\n    setAllowConfidentialFieldEdit,\n    fieldType\n  } = _ref;\n  if (!editMode) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(Checkbox, {\n    label: i18n.t('Edit {{fieldType}}', {\n      fieldType\n    }),\n    checked: allowConfidentialFieldEdit,\n    onChange: () => setAllowConfidentialFieldEdit(prev => !prev)\n  });\n};\nFieldEditConfidential.propTypes = {\n  allowConfidentialFieldEdit: PropTypes.bool.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  setAllowConfidentialFieldEdit: PropTypes.func.isRequired,\n  fieldType: PropTypes.string\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldgatewayname'),\n  name: \"name\",\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PASSWORD_NAME = 'password';\nexport const FIELD_PASSWORD_LABEL = i18n.t('Password');\nexport const FieldPassword = _ref => {\n  let {\n    editMode,\n    disabled\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    required: !editMode,\n    disabled: disabled,\n    placeholder: editMode ? '•••••••••' : null,\n    type: \"password\",\n    dataTest: dataTest('smsgateway-fieldpassword'),\n    name: FIELD_PASSWORD_NAME,\n    label: FIELD_PASSWORD_LABEL,\n    component: InputFieldFF,\n    validate: disabled ? null : composeValidators(string, hasValue)\n  });\n};\nFieldPassword.propTypes = {\n  disabled: PropTypes.bool,\n  editMode: PropTypes.bool\n};","import { InputFieldFF, ReactFinalForm, composeValidators, createEqualTo, hasValue, string } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { FIELD_PASSWORD_LABEL, FIELD_PASSWORD_NAME } from '../FieldPassword/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst equalToPassword = createEqualTo(FIELD_PASSWORD_NAME, FIELD_PASSWORD_LABEL);\nexport const FIELD_PASSWORD_CONFIRMATION_NAME = 'password-confirmation';\nexport const FieldPasswordConfirmation = _ref => {\n  let {\n    editMode,\n    disabled\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    required: !editMode,\n    disabled: disabled,\n    placeholder: editMode ? '•••••••••' : null,\n    type: \"password\",\n    dataTest: dataTest('smsgateway-fieldpasswordconfirmation'),\n    name: FIELD_PASSWORD_CONFIRMATION_NAME,\n    label: i18n.t('Confirm password'),\n    component: InputFieldFF,\n    validate: disabled ? null : composeValidators(string, hasValue, equalToPassword)\n  });\n};\nFieldPasswordConfirmation.propTypes = {\n  disabled: PropTypes.bool,\n  editMode: PropTypes.bool\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUsername = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldusername'),\n  name: \"username\",\n  label: i18n.t('User name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest, useFeatureToggle } from '../../shared/index.js';\nimport { FieldEditConfidential } from '../FieldEditConfidential/index.js';\nimport { FieldGatewayName } from '../FieldGatewayName/index.js';\nimport { FieldPassword } from '../FieldPassword/index.js';\nimport { FieldPasswordConfirmation } from '../FieldPasswordConfirmation/index.js';\nimport { FieldUsername } from '../FieldUsername/index.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormBulkSMS = _ref => {\n  let {\n    onCancelClick,\n    onSubmit,\n    initialValues,\n    editMode\n  } = _ref;\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  const {\n    disableConfidentialEdit\n  } = useFeatureToggle();\n  const [allowConfidentialFieldEdit, setAllowConfidentialFieldEdit] = useState(disableConfidentialEdit ? !editMode : true);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, _ref2 => {\n    let {\n      handleSubmit,\n      submitting,\n      pristine\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      \"data-test\": dataTest('smsgateway-formbulksms')\n    }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, disableConfidentialEdit && /*#__PURE__*/React.createElement(FieldEditConfidential, {\n      editMode: editMode,\n      fieldType: i18n.t('password'),\n      allowConfidentialFieldEdit: allowConfidentialFieldEdit,\n      setAllowConfidentialFieldEdit: setAllowConfidentialFieldEdit\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, {\n      editMode: editMode,\n      disabled: !allowConfidentialFieldEdit\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPasswordConfirmation, {\n      editMode: editMode,\n      disabled: !allowConfidentialFieldEdit\n    })), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      type: \"submit\",\n      icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n        small: true\n      }) : null,\n      disabled: submitting,\n      dataTest: dataTest('forms-gatewaybulksmsform-submit')\n    }, submitText), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => onCancelClick(pristine)\n    }, i18n.t('Cancel'))));\n  });\n};\nFormBulkSMS.defaultProps = {\n  initialValues: {},\n  editMode: false\n};\nFormBulkSMS.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  editMode: PropTypes.bool,\n  initialValues: PropTypes.object\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldAuthToken = _ref => {\n  let {\n    editMode,\n    disabled\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Field, {\n    required: !editMode,\n    disabled: disabled,\n    type: \"password\",\n    placeholder: editMode ? '••••••••••••••••••' : null,\n    dataTest: dataTest('smsgateway-fieldauthtoken'),\n    name: \"authToken\",\n    label: i18n.t('Auth token'),\n    component: InputFieldFF,\n    validate: editMode ? null : composeValidators(string, hasValue)\n  });\n};\nFieldAuthToken.propTypes = {\n  disabled: PropTypes.bool,\n  editMode: PropTypes.bool\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, url } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUrlTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldurltemplate'),\n  name: \"urlTemplate\",\n  label: i18n.t('Url template'),\n  component: InputFieldFF,\n  validate: composeValidators(url, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest, useFeatureToggle } from '../../shared/index.js';\nimport { FieldAuthToken } from '../FieldAuthToken/index.js';\nimport { FieldEditConfidential } from '../FieldEditConfidential/index.js';\nimport { FieldGatewayName } from '../FieldGatewayName/index.js';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate/index.js';\nimport { FieldUsername } from '../FieldUsername/index.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormClickatell = _ref => {\n  let {\n    onCancelClick,\n    onSubmit,\n    initialValues,\n    editMode\n  } = _ref;\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  const {\n    disableConfidentialEdit\n  } = useFeatureToggle();\n  const [allowConfidentialFieldEdit, setAllowConfidentialFieldEdit] = useState(disableConfidentialEdit ? !editMode : true);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, _ref2 => {\n    let {\n      handleSubmit,\n      submitting,\n      pristine\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      \"data-test\": dataTest('smsgateway-formclickatell')\n    }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, disableConfidentialEdit && /*#__PURE__*/React.createElement(FieldEditConfidential, {\n      editMode: editMode,\n      fieldType: i18n.t('auth token'),\n      allowConfidentialFieldEdit: allowConfidentialFieldEdit,\n      setAllowConfidentialFieldEdit: setAllowConfidentialFieldEdit\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldAuthToken, {\n      editMode: editMode,\n      disabled: !allowConfidentialFieldEdit\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      type: \"submit\",\n      icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n        small: true\n      }) : null,\n      disabled: submitting,\n      dataTest: dataTest('forms-gatewayclickatellform-submit')\n    }, submitText), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => onCancelClick(pristine)\n    }, i18n.t('Cancel'))));\n  });\n};\nFormClickatell.defaultProps = {\n  initialValues: {}\n};\nFormClickatell.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  editMode: PropTypes.bool,\n  initialValues: PropTypes.object\n};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ActionAddKeyValuePair_button__Mkrzl\"};","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './ActionAddKeyValuePair.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const ActionAddKeyValuePair = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n  const addKeyValueToFormState = () => {\n    const {\n      parameters\n    } = getState().values;\n    change('parameters', [...parameters, {\n      header: false,\n      encode: false,\n      key: '',\n      value: '',\n      confidential: false,\n      unsaved: true\n    }]);\n  };\n  return /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: addKeyValueToFormState,\n    dataTest: dataTest('smsgateway-actionaddkeyvaluepair')\n  }, i18n.t('Add key value pair'));\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldConfigurationTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldconfigurationtemplate'),\n  name: \"configurationTemplate\",\n  label: i18n.t('Configuration template'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue),\n  helpText: i18n.t('Please refer to the documentation for possible values')\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst optionApplicationJson = {\n  label: i18n.t('Application/json'),\n  value: 'APPLICATION_JSON'\n};\nconst optionApplicationXml = {\n  label: i18n.t('Application/xml'),\n  value: 'APPLICATION_XML'\n};\nconst optionFormUrlEncoded = {\n  label: i18n.t('Form url encoded'),\n  value: 'FORM_URL_ENCODED'\n};\nconst optionTextPlain = {\n  label: i18n.t('Plain text'),\n  value: 'TEXT_PLAIN'\n};\nconst options = [optionApplicationJson, optionApplicationXml, optionFormUrlEncoded, optionTextPlain];\nexport const FieldContentType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smsgateway-fieldcontenttype'),\n  name: \"contentType\",\n  label: i18n.t('Content type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  initialValue: optionApplicationJson.value\n});","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FieldKeyValuePair_container__VJzv2\",\"textInputs\":\"FieldKeyValuePair_textInputs__uUO2h\",\"keyInput\":\"FieldKeyValuePair_keyInput__-1lvl\",\"valueInput\":\"FieldKeyValuePair_valueInput__S832j\",\"checkboxGroup\":\"FieldKeyValuePair_checkboxGroup__F6DUf\",\"checkbox\":\"FieldKeyValuePair_checkbox__qXj2M\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm, composeValidators, string, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const createFieldGatewayKeyValuePairValueName = index => `parameters[${index}].value`;\nexport const ValueField = _ref => {\n  let {\n    index,\n    editMode,\n    disabled\n  } = _ref;\n  const {\n    confidential\n  } = useFormState().values.parameters[index];\n  return /*#__PURE__*/React.createElement(Field, {\n    type: confidential ? 'password' : 'text',\n    placeholder: editMode && confidential ? '•••••••••' : null,\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-value'),\n    name: createFieldGatewayKeyValuePairValueName(index),\n    label: i18n.t('Value'),\n    component: InputFieldFF,\n    validate: editMode ? null : isStringWithLengthAtLeastOne,\n    disabled: disabled\n  });\n};\nValueField.propTypes = {\n  index: PropTypes.number.isRequired,\n  disabled: PropTypes.bool,\n  editMode: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CheckboxFieldFF, InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest, useFeatureToggle } from '../../shared/index.js';\nimport styles from './FieldKeyValuePair.module.css';\nimport { ValueField } from './ValueField.js';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const FieldKeyValuePair = _ref => {\n  var _getState$values, _getState$values$para;\n  let {\n    index,\n    editMode\n  } = _ref;\n  const {\n    change,\n    getState\n  } = useForm();\n  const currentParameter = (_getState$values = getState().values) === null || _getState$values === void 0 ? void 0 : (_getState$values$para = _getState$values.parameters) === null || _getState$values$para === void 0 ? void 0 : _getState$values$para[index];\n  const {\n    confidential: isConfidential,\n    unsaved: isUnsaved\n  } = currentParameter !== null && currentParameter !== void 0 ? currentParameter : {};\n  const {\n    disableConfidentialEdit\n  } = useFeatureToggle();\n  const isDisabled = disableConfidentialEdit && isConfidential && !isUnsaved;\n  const removeKeyValueFromFormState = index => {\n    const {\n      parameters\n    } = getState().values;\n    if (index === 0) {\n      change('parameters', parameters.slice(1));\n    } else {\n      change('parameters', [...parameters.slice(0, index), ...parameters.slice(index + 1)]);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smsgateway-fieldkeyvaluepair')\n  }, isDisabled && /*#__PURE__*/React.createElement(\"p\", null, i18n.t('Saved confidential key value pairs can be deleted, but cannot be edited.')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textInputs\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-key'),\n    className: styles.keyInput,\n    name: `parameters[${index}].key`,\n    label: i18n.t('Key'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne,\n    disabled: isDisabled\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.valueInput\n  }, /*#__PURE__*/React.createElement(ValueField, {\n    index: index,\n    editMode: editMode,\n    disabled: isDisabled\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.checkboxGroup\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-isheader'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: `parameters[${index}].header`,\n    label: i18n.t('Send as header'),\n    component: CheckboxFieldFF,\n    disabled: isDisabled\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-isencoded'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: `parameters[${index}].encode`,\n    label: i18n.t('Encode'),\n    component: CheckboxFieldFF,\n    disabled: isDisabled\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-isconfidential'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: `parameters[${index}].confidential`,\n    label: i18n.t('Confidential'),\n    component: CheckboxFieldFF,\n    disabled: isDisabled\n  })), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    dataTest: dataTest('smsgateway-fieldkeyvaluepair-remove'),\n    onClick: () => removeKeyValueFromFormState(index)\n  }, i18n.t('Remove key value pair')));\n};\nFieldKeyValuePair.propTypes = {\n  index: PropTypes.number.isRequired,\n  editMode: PropTypes.bool\n};","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSendUrlParameters = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smsgateway-fieldsendurlparameters'),\n  name: \"sendUrlParameters\",\n  label: i18n.t('Send url parameters'),\n  component: CheckboxFieldFF\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUseGet = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smsgateway-fielduseget'),\n  name: \"useGet\",\n  label: i18n.t('Use GET'),\n  component: CheckboxFieldFF,\n  helpText: i18n.t('Use GET instead of POST to send data to gateway')\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared/index.js';\nimport { ActionAddKeyValuePair } from '../ActionAddKeyValuePair/index.js';\nimport { FieldConfigurationTemplate } from '../FieldConfigurationTemplate/index.js';\nimport { FieldContentType } from '../FieldContentType/index.js';\nimport { FieldGatewayName } from '../FieldGatewayName/index.js';\nimport { FieldKeyValuePair } from '../FieldKeyValuePair/index.js';\nimport { FieldSendUrlParameters } from '../FieldSendUrlParameters/index.js';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate/index.js';\nimport { FieldUseGet } from '../FieldUseGet/index.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormGeneric = _ref => {\n  let {\n    onCancelClick,\n    onSubmit,\n    initialValues,\n    editMode\n  } = _ref;\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, _ref2 => {\n    let {\n      handleSubmit,\n      values,\n      submitting,\n      pristine\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      \"data-test\": dataTest('smsgateway-formgeneric')\n    }, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Gateway setup')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfigurationTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldContentType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseGet, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSendUrlParameters, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Key value pairs')), values.parameters.map((_, index) => /*#__PURE__*/React.createElement(FieldKeyValuePair, {\n      index: index,\n      key: index,\n      editMode: editMode\n    })), /*#__PURE__*/React.createElement(ActionAddKeyValuePair, null), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      type: \"submit\",\n      dataTest: dataTest('forms-gatewaygenericform-submit'),\n      disabled: submitting,\n      icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n        small: true\n      }) : null\n    }, submitText), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => onCancelClick(pristine)\n    }, i18n.t('Cancel'))));\n  });\n};\nFormGeneric.defaultProps = {\n  initialValues: {\n    parameters: []\n  }\n};\nFormGeneric.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  editMode: PropTypes.bool,\n  initialValues: PropTypes.object\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'BIND_TX',\n  value: 'BIND_TX'\n}, {\n  label: 'BIND_RX',\n  value: 'BIND_RX'\n}, {\n  label: 'BIND_TRX',\n  value: 'BIND_TRX'\n}];\nexport const FieldBindType = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldbindtype'),\n  name: \"bindType\",\n  label: i18n.t('Bind type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCompressed = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smsgateway-fieldcompressed'),\n  name: \"compressed\",\n  type: \"checkbox\",\n  label: i18n.t('Compressed'),\n  component: CheckboxFieldFF,\n  defaultValue: false\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldHost = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldhost'),\n  name: \"host\",\n  label: i18n.t('Host'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'ISDN',\n  value: 'ISDN'\n}, {\n  label: 'DATA',\n  value: 'DATA'\n}, {\n  label: 'TELEX',\n  value: 'TELEX'\n}, {\n  label: 'LAND_MOBILE',\n  value: 'LAND_MOBILE'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'PRIVATE',\n  value: 'PRIVATE'\n}, {\n  label: 'ERMES',\n  value: 'ERMES'\n}, {\n  label: 'INTERNET',\n  value: 'INTERNET'\n}, {\n  label: 'WAP',\n  value: 'WAP'\n}];\nexport const FieldNumberPlanIndicator = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldnumberplanindicator'),\n  name: \"numberPlanIndicator\",\n  label: i18n.t('Number plan indicator'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, integer } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldPort = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldport'),\n  name: \"port\",\n  label: i18n.t('Port'),\n  component: InputFieldFF,\n  validate: composeValidators(integer, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemId = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldsystemid'),\n  name: \"systemId\",\n  label: i18n.t('System id'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smsgateway-fieldsystemtype'),\n  name: \"systemType\",\n  label: i18n.t('System type'),\n  component: InputFieldFF,\n  defaultValue: \"\"\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'INTERNATIONAL',\n  value: 'INTERNATIONAL'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'NETWORK_SPECIFIC',\n  value: 'NETWORK_SPECIFIC'\n}, {\n  label: 'SUBSCRIBER_NUMBER',\n  value: 'SUBSCRIBER_NUMBER'\n}, {\n  label: 'ALPHANUMERIC',\n  value: 'ALPHANUMERIC'\n}, {\n  label: 'ABBREVIATED',\n  value: 'ABBREVIATED'\n}];\nexport const FieldTypeOfNumber = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smsgateway-fieldtypeofnumber'),\n  name: \"typeOfNumber\",\n  label: i18n.t('Type of number'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales/index.js';\nimport { FormRow, dataTest, useFeatureToggle } from '../../shared/index.js';\nimport { FieldBindType } from '../FieldBindType/index.js';\nimport { FieldCompressed } from '../FieldCompressed/index.js';\nimport { FieldEditConfidential } from '../FieldEditConfidential/index.js';\nimport { FieldGatewayName } from '../FieldGatewayName/index.js';\nimport { FieldHost } from '../FieldHost/index.js';\nimport { FieldNumberPlanIndicator } from '../FieldNumberPlanIndicator/index.js';\nimport { FieldPassword } from '../FieldPassword/index.js';\nimport { FieldPort } from '../FieldPort/index.js';\nimport { FieldSystemId } from '../FieldSystemId/index.js';\nimport { FieldSystemType } from '../FieldSystemType/index.js';\nimport { FieldTypeOfNumber } from '../FieldTypeOfNumber/index.js';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormSMPP = _ref => {\n  let {\n    onCancelClick,\n    onSubmit,\n    initialValues,\n    editMode\n  } = _ref;\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  const {\n    disableConfidentialEdit\n  } = useFeatureToggle();\n  const [allowConfidentialFieldEdit, setAllowConfidentialFieldEdit] = useState(disableConfidentialEdit ? !editMode : true);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, _ref2 => {\n    let {\n      handleSubmit,\n      submitting,\n      pristine\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      \"data-test\": dataTest('smsgateway-formsmpp')\n    }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemId, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldHost, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNumberPlanIndicator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldTypeOfNumber, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldBindType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPort, null)), /*#__PURE__*/React.createElement(FormRow, null, disableConfidentialEdit && /*#__PURE__*/React.createElement(FieldEditConfidential, {\n      editMode: editMode,\n      fieldType: i18n.t('password'),\n      allowConfidentialFieldEdit: allowConfidentialFieldEdit,\n      setAllowConfidentialFieldEdit: setAllowConfidentialFieldEdit\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, {\n      editMode: editMode,\n      disabled: !allowConfidentialFieldEdit\n    })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompressed, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      type: \"submit\",\n      icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n        small: true\n      }) : null,\n      disabled: submitting,\n      dataTest: dataTest('forms-gatewaysmppform-submit')\n    }, submitText), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => onCancelClick(pristine)\n    }, i18n.t('Cancel'))));\n  });\n};\nFormSMPP.defaultProps = {\n  initialValues: {}\n};\nFormSMPP.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  editMode: PropTypes.bool,\n  initialValues: PropTypes.object\n};","const GENERIC_FORM = 'http';\nconst BULK_SMS_FORM = 'bulksms';\nconst CLICKATELL_FORM = 'clickatell';\nconst SMPP_FORM = 'smpp';\nexport const gatewayTypes = {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n};","import { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport { PropTypes } from 'prop-types';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { gatewayTypes } from './gatewayTypes.js';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const InputSingleSelectGatewayType = _ref => {\n  let {\n    onChange,\n    selected\n  } = _ref;\n  return /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Type'),\n    onChange: onChange,\n    selected: selected,\n    dataTest: dataTest('smsgateway-viewsmsgatewayadd-gatewaytype')\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: GENERIC_FORM,\n    label: i18n.t('Generic')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: BULK_SMS_FORM,\n    label: i18n.t('BulkSMS')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: CLICKATELL_FORM,\n    label: i18n.t('Clickatell')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: SMPP_FORM,\n    label: i18n.t('SMPP')\n  }));\n};\nInputSingleSelectGatewayType.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: _ref => {\n    let {\n      name,\n      username,\n      password\n    } = _ref;\n    return {\n      type: 'bulksms',\n      name,\n      username,\n      password\n    };\n  }\n};\nexport const useCreateBulkSMSGatewayMutation = () => useDataMutation(CREATE_BULK_SMS_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: _ref => {\n    let {\n      name,\n      username,\n      authToken,\n      urlTemplate\n    } = _ref;\n    return {\n      type: 'clickatell',\n      name,\n      username,\n      authToken,\n      urlTemplate\n    };\n  }\n};\nexport const useCreateClickatellGatewayMutation = () => useDataMutation(CREATE_CLICKATELL_GATEWAY_MUTATION);","/**\n * This the shape of the additional fields\n * that can be added to a generic config\n *\n * @typedef {Object} Parameter\n * @prop {string} key\n * @prop {string} value\n * @prop {bool} header\n * @prop {bool} encode\n * @prop {bool} confidential\n */\n\n/**\n * @param {Object} args\n * @param {string} args.configurationTemplate\n * @param {string} args.contentType\n * @param {string} args.name\n * @param {string} args.urlTemplate\n * @param {bool} args.sendUrlParameters\n * @param {bool} args.useGet\n * @param {Parameter[]} args.parameters\n *\n * @returns {Object}\n */\nexport const createGenericGateWayDataFromVariables = _ref => {\n  let {\n    configurationTemplate,\n    contentType,\n    name,\n    parameters,\n    sendUrlParameters,\n    urlTemplate,\n    useGet\n  } = _ref;\n  return {\n    type: 'http',\n    configurationTemplate,\n    contentType,\n    name,\n    parameters: parameters.filter(p => {\n      var _p$value;\n      return p.confidential || ((_p$value = p.value) === null || _p$value === void 0 ? void 0 : _p$value.length);\n    }),\n    sendUrlParameters,\n    urlTemplate,\n    useGet\n  };\n};","import { useDataMutation } from '@dhis2/app-runtime';\nimport { createGenericGateWayDataFromVariables } from '../createGenericGateWayDataFromVariables/index.js';\nexport const CREATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useCreateGenericGatewayMutation = () => useDataMutation(CREATE_GENERIC_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: _ref => {\n    let {\n      name,\n      systemId,\n      host,\n      systemType,\n      numberPlanIndicator,\n      typeOfNumber,\n      bindType,\n      port,\n      password,\n      compressed\n    } = _ref;\n    return {\n      type: 'smpp',\n      name,\n      systemId,\n      host,\n      systemType,\n      numberPlanIndicator,\n      typeOfNumber,\n      bindType,\n      port,\n      password,\n      compressed\n    };\n  }\n};\nexport const useCreateSMPPGatewayMutation = () => useDataMutation(CREATE_SMPP_GATEWAY_MUTATION);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewSmsGatewayAdd_container__ynipB\"};","import { SingleSelectField, SingleSelectOption, NoticeBox } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { FormRow, PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { FormBulkSMS } from '../FormBulkSMS/index.js';\nimport { FormClickatell } from '../FormClickatell/index.js';\nimport { FormGeneric } from '../FormGeneric/index.js';\nimport { FormSMPP } from '../FormSMPP/index.js';\nimport { gatewayTypes } from '../InputSingleSelectGatewayType/index.js';\nimport { useCreateBulkSMSGatewayMutation } from './useCreateBulkSMSGatewayMutation.js';\nimport { useCreateClickatellGatewayMutation } from './useCreateClickatellGatewayMutation.js';\nimport { useCreateGenericGatewayMutation } from './useCreateGenericGatewayMutation.js';\nimport { useCreateSMPPGatewayMutation } from './useCreateSMPPGatewayMutation.js';\nimport styles from './ViewSmsGatewayAdd.module.css';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const GATEWAY_CONFIG_FORM_NEW_PATH = '/sms-gateway/new';\nexport const ViewSmsGatewayAdd = () => {\n  const history = useHistory();\n  const [visibleForm, setVisibleForm] = useState(GENERIC_FORM);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useCreateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useCreateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useCreateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useCreateSMPPGatewayMutation();\n  const error = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst saving the gateway');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('smsgateway-viewsmsgatewayadd')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message)));\n  }\n  const onSubmit = async values => {\n    try {\n      if (visibleForm === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n      if (visibleForm === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n      if (visibleForm === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n      if (visibleForm === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  const onCancelClick = () => history.push('/sms-gateway');\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsgateway-viewsmsgatewayadd'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Type'),\n    onChange: _ref => {\n      let {\n        selected\n      } = _ref;\n      return setVisibleForm(selected);\n    },\n    selected: visibleForm,\n    dataTest: dataTest('smsgateway-viewsmsgatewayadd-gatewaytype')\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: GENERIC_FORM,\n    label: i18n.t('Generic')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: BULK_SMS_FORM,\n    label: i18n.t('BulkSMS')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: CLICKATELL_FORM,\n    label: i18n.t('Clickatell')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: SMPP_FORM,\n    label: i18n.t('SMPP')\n  }))), /*#__PURE__*/React.createElement(FormRow, null, visibleForm === GENERIC_FORM && /*#__PURE__*/React.createElement(FormGeneric, {\n    onSubmit: onSubmit,\n    onCancelClick: onCancelClick\n  }), visibleForm === BULK_SMS_FORM && /*#__PURE__*/React.createElement(FormBulkSMS, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === CLICKATELL_FORM && /*#__PURE__*/React.createElement(FormClickatell, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === SMPP_FORM && /*#__PURE__*/React.createElement(FormSMPP, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }))));\n};","import { useDataQuery } from '@dhis2/app-runtime';\n\n/**\n * @TODO:\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n *   * Api does not return password of BulkSMS gateway configs\n *     -> https://jira.dhis2.org/browse/DHIS2-9248\n */\nexport const GATEWAY_QUERY = {\n  gateway: {\n    resource: 'gateways',\n    id: _ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    }\n  }\n};\nexport const useReadGatewayQuery = id => useDataQuery(GATEWAY_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\n\n/**\n * @TODO\n *   * Create jira issue: Make `useDataMutation` accept function for \"id\"\n */\n\n/**\n * @param {Object} query\n * @returns {Object}\n */\nexport const useUpdateGatewayMutation = query => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const doFetch = variables => {\n    const updatedQuery = {\n      ...query,\n      id: variables.id\n    };\n    setLoading(true);\n    setError(null);\n    return engine.mutate(updatedQuery, {\n      variables\n    }).then(data => {\n      setLoading(false);\n      return data;\n    }).catch(error => {\n      setLoading(false);\n      setError(error);\n      throw error;\n    });\n  };\n  return [doFetch, {\n    loading,\n    error\n  }];\n};","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation.js';\nexport const UPDATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  type: 'update',\n  data: _ref2 => {\n    let {\n      name,\n      username,\n      password\n    } = _ref2;\n    const data = {\n      type: 'bulksms',\n      name,\n      username\n    };\n    if (password) {\n      data.password = password;\n    }\n    return data;\n  }\n};\nexport const useUpdateBulkSMSGatewayMutation = () => useUpdateGatewayMutation(UPDATE_BULK_SMS_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation.js';\nexport const UPDATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  type: 'update',\n  data: _ref2 => {\n    let {\n      name,\n      username,\n      authToken,\n      urlTemplate\n    } = _ref2;\n    const data = {\n      type: 'clickatell',\n      name,\n      username,\n      urlTemplate\n    };\n    if (authToken) {\n      data.authToken = authToken;\n    }\n    return data;\n  }\n};\nexport const useUpdateClickatellGatewayMutation = () => useUpdateGatewayMutation(UPDATE_CLICKATELL_GATEWAY_MUTATION);","import { createGenericGateWayDataFromVariables } from '../createGenericGateWayDataFromVariables/index.js';\nimport { useUpdateGatewayMutation } from './useUpdateGatewayMutation.js';\nexport const UPDATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  type: 'replace',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useUpdateGenericGatewayMutation = () => useUpdateGatewayMutation(UPDATE_GENERIC_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation.js';\nexport const UPDATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  },\n  type: 'update',\n  data: _ref2 => {\n    let {\n      name,\n      systemId,\n      host,\n      systemType,\n      numberPlanIndicator,\n      typeOfNumber,\n      bindType,\n      port,\n      password,\n      compressed\n    } = _ref2;\n    const data = {\n      type: 'smpp',\n      name,\n      systemId,\n      host,\n      systemType,\n      numberPlanIndicator,\n      typeOfNumber,\n      bindType,\n      port,\n      compressed\n    };\n    if (password) {\n      data.password = password;\n    }\n    return data;\n  }\n};\nexport const useUpdateSMPPGatewayMutation = () => useUpdateGatewayMutation(UPDATE_SMPP_GATEWAY_MUTATION);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewSmsGatewayEdit_container__tMfMX\"};","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { CancelDialog, PageHeadline, TemplateSidebarNavContent, dataTest, useFeatureToggle } from '../../shared/index.js';\nimport { FIELD_PASSWORD_NAME } from '../FieldPassword/index.js';\nimport { FIELD_PASSWORD_CONFIRMATION_NAME } from '../FieldPasswordConfirmation/index.js';\nimport { FormBulkSMS } from '../FormBulkSMS/index.js';\nimport { FormClickatell } from '../FormClickatell/index.js';\nimport { FormGeneric } from '../FormGeneric/index.js';\nimport { FormSMPP } from '../FormSMPP/index.js';\nimport { gatewayTypes } from '../InputSingleSelectGatewayType/index.js';\nimport { useReadGatewayQuery } from './useReadGatewayQuery.js';\nimport { useUpdateBulkSMSGatewayMutation } from './useUpdateBulkSMSGatewayMutation.js';\nimport { useUpdateClickatellGatewayMutation } from './useUpdateClickatellGatewayMutation.js';\nimport { useUpdateGenericGatewayMutation } from './useUpdateGenericGatewayMutation.js';\nimport { useUpdateSMPPGatewayMutation } from './useUpdateSMPPGatewayMutation.js';\nimport styles from './ViewSmsGatewayEdit.module.css';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC = '/sms-gateway/edit';\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH = `${GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC}/:id`;\nconst getFormComponent = gatewayType => {\n  if (gatewayType === GENERIC_FORM) {\n    return FormGeneric;\n  }\n  if (gatewayType === BULK_SMS_FORM) {\n    return FormBulkSMS;\n  }\n  if (gatewayType === CLICKATELL_FORM) {\n    return FormClickatell;\n  }\n  if (gatewayType === SMPP_FORM) {\n    return FormSMPP;\n  }\n  throw new Error(`The gateway type does not exist, got \"${gatewayType}\"`);\n};\nconst getInitialValues = (gateway, disableConfidentialEdit) => {\n  const filteredParameters = gateway !== null && gateway !== void 0 && gateway.parameters ? gateway.parameters.map(param => param !== null && param !== void 0 && param.confidential ? {\n    ...param,\n    value: disableConfidentialEdit ? null : param === null || param === void 0 ? void 0 : param.value\n  } : param) : null;\n  const initialValues = {\n    ...gateway,\n    password: disableConfidentialEdit ? null : gateway === null || gateway === void 0 ? void 0 : gateway.password,\n    authToken: disableConfidentialEdit ? null : gateway === null || gateway === void 0 ? void 0 : gateway.authToken,\n    parameters: filteredParameters\n  };\n  if (!disableConfidentialEdit && gateway.type === BULK_SMS_FORM) {\n    initialValues[FIELD_PASSWORD_CONFIRMATION_NAME] = gateway[FIELD_PASSWORD_NAME];\n  }\n  return initialValues;\n};\nexport const ViewSmsGatewayEdit = () => {\n  var _data$gateway;\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const {\n    loading,\n    error: loadError,\n    data: jsonData\n  } = useReadGatewayQuery(id);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useUpdateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useUpdateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useUpdateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useUpdateSMPPGatewayMutation();\n  const {\n    disableConfidentialEdit\n  } = useFeatureToggle();\n  const saveError = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n  if (loading) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n  if (loadError) {\n    const msg = i18n.t('Something went wrong whilst loading gateways');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadError.message));\n  }\n  const data =\n  /**\n   * @TODO:\n   *   * The response does not contain the right content type header\n   *     -> https://jira.dhis2.org/browse/DHIS2-9252\n   */\n  jsonData && typeof jsonData.gateway === 'string' ? {\n    gateway: JSON.parse(jsonData.gateway)\n  } : jsonData;\n  const gatewayType = data === null || data === void 0 ? void 0 : (_data$gateway = data.gateway) === null || _data$gateway === void 0 ? void 0 : _data$gateway.type;\n  const onSubmit = async formValues => {\n    const values = {\n      ...formValues,\n      id: data.gateway.uid\n    };\n    try {\n      if (values.type === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n      if (values.type === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n      if (values.type === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n      if (values.type === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  const FormComponent = getFormComponent(gatewayType);\n  const initialValues = gatewayType && getInitialValues(data.gateway, disableConfidentialEdit);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsgateway-viewsmsgatewayedit'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit gateway')), gatewayType ? /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsgateway-viewsmsgatewayedit-formcontainer'),\n    \"data-gateway-id\": data.gateway.uid\n  }, saveError && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving gateways')\n  }, saveError.message), /*#__PURE__*/React.createElement(FormComponent, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    onCancelClick: pristine => pristine ? history.push('/sms-gateway') : setShowCancelDialog(true),\n    editMode: true\n  })) : /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Gateway not found')\n  }, i18n.t('The requested gateway could not be loaded')), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-gateway'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  })));\n};","// extracted by mini-css-extract-plugin\nexport default {\"rowActions\":\"GatewaysTable_rowActions__tDOhR\",\"checkboxCell\":\"GatewaysTable_checkboxCell__l-9eP\",\"typeCell\":\"GatewaysTable_typeCell__7xbf-\",\"editCell\":\"GatewaysTable_editCell__UsYY9\",\"defaultCell\":\"GatewaysTable_defaultCell__R0HKt\",\"makeDefaultButton\":\"GatewaysTable_makeDefaultButton__iEa8j\",\"isDefaultText\":\"GatewaysTable_isDefaultText__J1N7r\"};","import i18n from '../../locales/index.js';\n\n/**\n * @param {string} type\n * @returns {string}\n */\nexport const getTypeLabelByType = type => {\n  if (type === 'bulksms') {\n    return i18n.t('BulkSMS');\n  }\n  if (type === 'clickatell') {\n    return i18n.t('Clickatell');\n  }\n  if (type === 'http' || !type) {\n    return i18n.t('Generic');\n  }\n  return type;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Checkbox, Table, TableHead, TableBody, TableRowHead, TableCellHead, TableRow, TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport styles from './GatewaysTable.module.css';\nimport { getTypeLabelByType } from './getTypeLabelByType.js';\nexport const GatewaysTable = _ref => {\n  let {\n    allGatewaysChecked,\n    checkedGateways,\n    gateways,\n    onGatewayToggle,\n    onToggleAll,\n    onMakeDefaultClick\n  } = _ref;\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('smsgateway-stable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, {\n    dataTest: dataTest('smsgateway-table-checkall')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: onToggleAll,\n    checked: allGatewaysChecked\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, gateways.map(gateway => /*#__PURE__*/React.createElement(TableRow, {\n    key: gateway.uid,\n    dataTest: dataTest('smsgateway-table-row')\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkboxCell,\n    dataTest: dataTest('smsgateway-table-checkbox')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    value: gateway.uid,\n    onChange: () => onGatewayToggle(gateway.uid),\n    checked: checkedGateways.includes(gateway.uid),\n    dataTest: dataTest('smsgateway-table-id')\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('smsgateway-table-name')\n  }, gateway.name), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.typeCell,\n    dataTest: dataTest('smsgateway-table-type')\n  }, getTypeLabelByType(gateway.type)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.defaultCell\n  }, !gateway.isDefault ? /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('smsgateway-table-makedefault'),\n    onClick: () => onMakeDefaultClick(gateway.uid),\n    className: styles.makeDefaultButton\n  }, i18n.t('Make default')) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.isDefaultText,\n    \"data-test\": dataTest('smsgateway-table-isdefault')\n  }, i18n.t('Default gateway'))), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('smsgateway-table-actions'),\n    className: styles.editCell\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    className: styles.rowActions\n  }, /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('smsgateway-table-edit'),\n    onClick: () => {\n      history.push(`sms-gateway/${gateway.uid}`);\n    }\n  }, i18n.t('Edit'))))))));\n};\nGatewaysTable.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    isDefault: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired\n  })).isRequired,\n  onGatewayToggle: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  onToggleAll: PropTypes.func.isRequired,\n  allGatewaysChecked: PropTypes.bool\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"List_container__is6-f\",\"processingMessage\":\"List_processingMessage__x1Qgw\",\"loadingContainer\":\"List_loadingContainer__50vAI\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared/index.js';\nimport { GatewaysTable } from './GatewaysTable.js';\nimport styles from './List.module.css';\nexport const List = _ref => {\n  let {\n    checkedGateways,\n    gateways,\n    setCheckedGateways,\n    onMakeDefaultClick,\n    processing\n  } = _ref;\n  const allGatewaysChecked = checkedGateways.length === gateways.length;\n  const toggleGateway = id => {\n    if (checkedGateways.includes(id)) {\n      const index = checkedGateways.findIndex(curId => curId === id);\n      const newCheckedGateways = index === 0 ? checkedGateways.slice(1) : [...checkedGateways.slice(0, index), ...checkedGateways.slice(index + 1)];\n      setCheckedGateways(newCheckedGateways);\n    } else {\n      setCheckedGateways([...checkedGateways, id]);\n    }\n  };\n  const toggleAll = () => {\n    if (!allGatewaysChecked) {\n      const allGatewayIds = gateways.map(_ref2 => {\n        let {\n          uid\n        } = _ref2;\n        return uid;\n      });\n      setCheckedGateways(allGatewayIds);\n    } else {\n      setCheckedGateways([]);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smsgateway-viewsmsgatewaylist-list')\n  }, processing && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.processingMessage\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loadingContainer\n  }, /*#__PURE__*/React.createElement(CircularLoader, null))), /*#__PURE__*/React.createElement(GatewaysTable, {\n    allGatewaysChecked: allGatewaysChecked,\n    gateways: gateways,\n    checkedGateways: checkedGateways,\n    onGatewayToggle: toggleGateway,\n    onMakeDefaultClick: onMakeDefaultClick,\n    onToggleAll: toggleAll\n  }));\n};\nList.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    isDefault: PropTypes.bool\n  })).isRequired,\n  setCheckedGateways: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  processing: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'delete',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  }\n};\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_GATEWAY_MUTATION, {\n    variables\n  });\n};\nexport const useDeleteGatewaysMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n  const onStart = () => setLoading(true);\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n  const mutate = _ref2 => {\n    let {\n      ids\n    } = _ref2;\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\n\n/**\n * @TODO:\n *   * The endpoint requires a `.json`, ignores \"Accept\" header\n *     -> https://jira.dhis2.org/browse/DHIS2-9250\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n */\nexport const GATEWAYS_QUERY = {\n  gateways: {\n    resource: 'gateways.json',\n    params: _ref => {\n      let {\n        fields,\n        filter\n      } = _ref;\n      const params = {};\n      if (fields) {\n        params.fields = fields;\n      }\n      if (filter) {\n        params.filter = filter;\n      }\n      return params;\n    }\n  }\n};\n\n/**\n * @param {string[]} [ids]\n * @return {Object}\n */\nexport const useReadGatewaysQuery = ids => {\n  var _parsedData$gateways;\n  /*\n   * @TODO(filtering): Currently the `id:in:[...]` doesn't work\n   *   -> https://jira.dhis2.org/browse/DHIS2-9259\n   *\n   * This is because filtering doesn't work right now\n   * So there's no need for sending any variables\n   */\n  const filter = `id:in:[${ids === null || ids === void 0 ? void 0 : ids.join(',')}]`;\n  const variables = false && ids ? {\n    filter\n  } : {}; // eslint-disable-line no-constant-condition\n  const {\n    data: jsonData,\n    ...rest\n  } = useDataQuery(GATEWAYS_QUERY, {\n    variables\n  });\n  const parsedData =\n  /**\n   * @TODO:\n   *   Create Jira issue for:\n   *   The response does not contain the right content type header\n   */\n  jsonData && typeof jsonData.gateways === 'string' ? {\n    gateways: JSON.parse(jsonData.gateways)\n  } : jsonData;\n  const data = ids && parsedData !== null && parsedData !== void 0 && (_parsedData$gateways = parsedData.gateways) !== null && _parsedData$gateways !== void 0 && _parsedData$gateways.gateways ? {\n    gateways: {\n      gateways: parsedData.gateways.gateways.filter(_ref2 => {\n        let {\n          uid\n        } = _ref2;\n        return ids.includes(uid);\n      })\n    }\n  } : parsedData;\n  return {\n    data,\n    ...rest\n  };\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const SET_DEFAULT_GATEWAY_MUTATION = {\n  resource: 'gateways/default',\n  type: 'replace',\n  id: _ref => {\n    let {\n      id\n    } = _ref;\n    return id;\n  }\n};\nexport const useSetDefaultGatewayMutation = () => useDataMutation(SET_DEFAULT_GATEWAY_MUTATION);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewSmsGatewayList_container__jgF3T\",\"actions\":\"ViewSmsGatewayList_actions__8wTv0\"};","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales/index.js';\nimport { ListActions, PageHeadline, DeleteConfirmationDialog, Paragraph, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { List } from './List.js';\nimport { useDeleteGatewaysMutation } from './useDeleteGatewaysMutation.js';\nimport { useReadGatewaysQuery } from './useReadGatewaysQuery.js';\nimport { useSetDefaultGatewayMutation } from './useSetDefaultGatewayMutation.js';\nimport styles from './ViewSmsGatewayList.module.css';\nexport const GATEWAY_CONFIG_LIST_PATH = '/sms-gateway';\nexport const GATEWAY_CONFIG_LIST_LABEL = i18n.t('Gateway configuration');\nexport const ViewSmsGatewayList = () => {\n  var _data$gateways, _data$gateways$gatewa;\n  const history = useHistory();\n  const onAddGatewayClick = () => history.push('/sms-gateway/new');\n  const [checkedGateways, setCheckedGateways] = useState([]);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const {\n    loading: loadingReadGateways,\n    error: errorReadGateways,\n    data,\n    refetch: refetchReadGateways\n  } = useReadGatewaysQuery();\n  const [deleteCheckedGateways, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteGatewaysMutation();\n  const [makeGatewayDefault, {\n    loading: loadingSetDefault,\n    error: errorSetDefault\n  }] = useSetDefaultGatewayMutation();\n  const onDeleteClick = () => {\n    const variables = {\n      ids: checkedGateways\n    };\n    deleteCheckedGateways(variables).then(refetchReadGateways);\n    setShowDeleteDialog(false);\n  };\n  const onMakeDefaultClick = id => {\n    const variables = {\n      id\n    };\n    makeGatewayDefault(variables).then(refetchReadGateways);\n  };\n  const loading = loadingReadGateways || loadingDelete || loadingSetDefault;\n  if (loading) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n  const error = errorReadGateways || errorDelete || errorSetDefault;\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n  const hasGateways = !!(data !== null && data !== void 0 && (_data$gateways = data.gateways) !== null && _data$gateways !== void 0 && (_data$gateways$gatewa = _data$gateways.gateways) !== null && _data$gateways$gatewa !== void 0 && _data$gateways$gatewa.length);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smsgateway-viewsmsgatewaylist')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('An SMS gateway lets a DHIS2 instance send and receive SMS messages. Different gateway types can be added and configured below. At least one gateway is needed to send and receive SMS messages. Load balancing will use all gateways if there are multiple available. Read about gateway configuration in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add gateway'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"smsgateway-viewsmsgatewaylist\",\n    onAddClick: onAddGatewayClick,\n    onDeleteClick: () => setShowDeleteDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedGateways.length || loadingDelete\n  }), hasGateways ? /*#__PURE__*/React.createElement(List, {\n    processing: loading,\n    checkedGateways: checkedGateways,\n    setCheckedGateways: setCheckedGateways,\n    gateways: data.gateways.gateways,\n    onMakeDefaultClick: onMakeDefaultClick\n  }) : /*#__PURE__*/React.createElement(NoticeBox, {\n    info: true,\n    title: i18n.t('No gateways found')\n  }, i18n.t(\"It looks like there aren't any configured gateways, or they couldn't be loaded.\")), showDeleteDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected gateways?'))));\n};","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  FAILED: i18n.t('Failed'),\n  INCOMING: i18n.t('Incoming'),\n  PROCESSED: i18n.t('Processed'),\n  PROCESSING: i18n.t('Processing'),\n  SENT: i18n.t('Sent'),\n  UNHANDLED: i18n.t('Unhandled')\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__lTAuw\",\"inputStrip\":\"Filter_inputStrip__1ZSej\"};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared/index.js';\nimport { translations } from '../translations/index.js';\nimport styles from './Filter.module.css';\n\n// From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/incoming/SmsMessageStatus.java\nconst STATUS_FILTER_OPTIONS = ['ALL', 'FAILED', 'INCOMING', 'PROCESSED', 'PROCESSING', 'SENT', 'UNHANDLED'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const Filter = _ref => {\n  let {\n    status,\n    setStatus,\n    phoneNumber,\n    setPhoneNumber,\n    onReset\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsinbound-filter'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.inputStrip\n  }, /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Filter by status'),\n    inputWidth: \"200px\",\n    onChange: _ref2 => {\n      let {\n        selected\n      } = _ref2;\n      return setStatus(selected);\n    },\n    selected: status,\n    dataTest: dataTest('smsinbound-statusfilter')\n  }, STATUS_FILTER_OPTIONS.map(_ref3 => {\n    let {\n      label,\n      value\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(SingleSelectOption, {\n      key: label,\n      label: label,\n      value: value\n    });\n  })), /*#__PURE__*/React.createElement(InputField, {\n    label: i18n.t('Filter by phone number'),\n    inputWidth: \"250px\",\n    value: phoneNumber,\n    onChange: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return setPhoneNumber(value);\n    },\n    dataTest: \"phone-number-filter\"\n  }), /*#__PURE__*/React.createElement(Button, {\n    large: true,\n    onClick: onReset,\n    dataTest: \"reset-filter-btn\"\n  }, i18n.t('Reset filter'))));\n};\nFilter.propTypes = {\n  phoneNumber: PropTypes.string.isRequired,\n  setPhoneNumber: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"originator\":\"ReceivedSmsTable_originator__C8jzJ\"};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { Date, Time, SmsTable } from '../../shared/index.js';\nimport { translations } from '../translations/index.js';\nimport styles from './ReceivedSmsTable.module.css';\nexport const ReceivedSmsTable = _ref => {\n  let {\n    messages,\n    pager,\n    selectedIds,\n    setSelectedIds\n  } = _ref;\n  return /*#__PURE__*/React.createElement(SmsTable, {\n    messages: messages,\n    pager: pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds,\n    columns: [i18n.t('Message'), i18n.t('Phone number'), i18n.t('Status'), i18n.t('Sender'), i18n.t('Received')],\n    rowRenderFn: message => {\n      var _message$user, _message$user$userCre;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.text), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: styles.originator\n      }, message.originator)), /*#__PURE__*/React.createElement(TableCell, null, translations[message.smsstatus]), /*#__PURE__*/React.createElement(TableCell, null, ((_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$userCre = _message$user.userCredentials) === null || _message$user$userCre === void 0 ? void 0 : _message$user$userCre.username) || i18n.t('Unknown')), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n        date: message.receiveddate\n      }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n        time: message.receiveddate\n      })));\n    }\n  });\n};\nReceivedSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nconst DELETE_INBOUND_SMS_MUTATION = {\n  resource: 'sms/inbound',\n  type: 'delete',\n  params: _ref => {\n    let {\n      ids\n    } = _ref;\n    return {\n      ids\n    };\n  }\n};\nexport const useDeleteMutation = _ref2 => {\n  let {\n    onComplete,\n    onError\n  } = _ref2;\n  return useDataMutation(DELETE_INBOUND_SMS_MUTATION, {\n    onComplete,\n    onError\n  });\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewReceivedSmsList_container__FR1WD\",\"header\":\"ViewReceivedSmsList_header__+3blX\"};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { Button, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport i18n from '../../locales/index.js';\nimport { AlertContext, DeleteConfirmationDialog, PageHeadline, useQueryParams, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { Filter } from '../Filter/index.js';\nimport { ReceivedSmsTable } from '../ReceivedSmsTable/index.js';\nimport { useDeleteMutation } from './useDeleteMutation.js';\nimport styles from './ViewReceivedSmsList.module.css';\nexport const RECEIVED_SMS_LIST_LABEL = i18n.t('Received');\nexport const RECEIVED_SMS_LIST_PATH = '/received';\nconst parseParams = _ref => {\n  let {\n    page,\n    pageSize,\n    phoneNumber,\n    status\n  } = _ref;\n  const params = {\n    page,\n    pageSize,\n    fields: ['id', 'text', 'originator', 'smsstatus', 'user[userCredentials[username]]',\n    // sender\n    'receiveddate'],\n    order: 'receiveddate:desc'\n  };\n  const filters = [];\n  if (phoneNumber) {\n    filters.push(`originator:ilike:${phoneNumber}`);\n  }\n  if (status && status !== 'ALL') {\n    filters.push(`smsstatus:eq:${status}`);\n  }\n  if (filters.length > 0) {\n    params.filter = filters;\n  }\n  return params;\n};\nconst query = {\n  inboundSms: {\n    resource: 'sms/inbound',\n    params: parseParams\n  }\n};\nexport const ViewReceivedSmsList = () => {\n  var _data$inboundSms;\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    phoneNumber,\n    status\n  } = queryParams;\n  const setPhoneNumber = phoneNumber => {\n    setQueryParams({\n      phoneNumber,\n      page: 1\n    }, 'replaceIn');\n  };\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n  const handleFilterReset = () => {\n    setQueryParams({\n      phoneNumber: undefined,\n      status: undefined,\n      page: 1\n    });\n  };\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n  const {\n    callback: debouncedRefetch\n  } = useDebouncedCallback(refetch, 500, {\n    leading: true\n  });\n  useEffect(() => {\n    debouncedRefetch({\n      page,\n      pageSize,\n      phoneNumber,\n      status\n    });\n  }, [page, pageSize, phoneNumber, status]);\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const [deleteSms] = useDeleteMutation({\n    onComplete: () => {\n      setShowDeleteConfirmationDialog(false);\n      refetch();\n      setSelectedIds([]);\n    },\n    onError: error => addAlert({\n      type: 'critical',\n      message: error.message\n    })\n  });\n  const onDeleteClick = () => deleteSms({\n    ids: selectedIds\n  });\n  const onCancelClick = () => setShowDeleteConfirmationDialog(false);\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading received SMSes');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n  const messages = (data === null || data === void 0 ? void 0 : (_data$inboundSms = data.inboundSms) === null || _data$inboundSms === void 0 ? void 0 : _data$inboundSms.inboundsmss) || [];\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smsinbound-viewreceivedsmslist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(Filter, {\n    status: status,\n    setStatus: setStatus,\n    phoneNumber: phoneNumber,\n    setPhoneNumber: setPhoneNumber,\n    onReset: handleFilterReset\n  }), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowDeleteConfirmationDialog(true),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected')), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: onCancelClick,\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected sms?'))), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(ReceivedSmsTable, {\n    messages: messages,\n    pager: data.inboundSms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  })));\n};","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  DELIVERED: i18n.t('Delivered'),\n  ERROR: i18n.t('Error'),\n  FAILED: i18n.t('Failed'),\n  OUTBOUND: i18n.t('Outbound'),\n  PENDING: i18n.t('Pending'),\n  SCHEDULED: i18n.t('Scheduled'),\n  SENT: i18n.t('Sent')\n};","// extracted by mini-css-extract-plugin\nexport default {\"recipient\":\"SentSmsTable_recipient__Xyh+J\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { SmsTable, Date, Time } from '../../shared/index.js';\nimport { translations } from '../translations/index.js';\nimport styles from './SentSmsTable.module.css';\nexport const SentSmsTable = _ref => {\n  let {\n    messages,\n    pager,\n    selectedIds,\n    setSelectedIds\n  } = _ref;\n  return /*#__PURE__*/React.createElement(SmsTable, {\n    messages: messages,\n    pager: pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds,\n    columns: [i18n.t('Message'), i18n.t('Recipients'), i18n.t('Status'), i18n.t('Sent')],\n    rowRenderFn: message => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.message), /*#__PURE__*/React.createElement(TableCell, null, (message.recipients || []).map((recipient, index, all) => /*#__PURE__*/React.createElement(\"span\", {\n      key: recipient + index,\n      className: styles.recipient\n    }, recipient, index !== all.length - 1 && ', '))), /*#__PURE__*/React.createElement(TableCell, null, translations[message.status]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n      date: message.date\n    }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n      time: message.date\n    })))\n  });\n};\nSentSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"StatusFilter_container__XN4pb\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales/index.js';\nimport { dataTest } from '../../shared/index.js';\nimport { translations } from '../translations/index.js';\nimport styles from './StatusFilter.module.css';\n\n// From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/outbound/OutboundSmsStatus.java\nconst STATUS_FILTER_OPTIONS = ['ALL', 'DELIVERED', 'ERROR', 'FAILED', 'OUTBOUND', 'PENDING', 'SCHEDULED', 'SENT'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const StatusFilter = _ref => {\n  let {\n    status,\n    setStatus\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Filter by status'),\n    inputWidth: \"200px\",\n    onChange: _ref2 => {\n      let {\n        selected\n      } = _ref2;\n      return setStatus(selected);\n    },\n    selected: status,\n    dataTest: dataTest('smsoutbound-statusfilter')\n  }, STATUS_FILTER_OPTIONS.map(_ref3 => {\n    let {\n      label,\n      value\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(SingleSelectOption, {\n      key: label,\n      label: label,\n      value: value\n    });\n  })));\n};\nStatusFilter.propTypes = {\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nconst DELETE_OUTBOUND_SMS_MUTATION = {\n  resource: 'sms/outbound',\n  type: 'delete',\n  params: _ref => {\n    let {\n      ids\n    } = _ref;\n    return {\n      ids\n    };\n  }\n};\nexport const useDeleteMutation = _ref2 => {\n  let {\n    onComplete,\n    onError\n  } = _ref2;\n  return useDataMutation(DELETE_OUTBOUND_SMS_MUTATION, {\n    onComplete,\n    onError\n  });\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewSentSmsList_container__ylw64\",\"header\":\"ViewSentSmsList_header__pd3jA\"};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { Button, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect, useContext } from 'react';\nimport i18n from '../../locales/index.js';\nimport { DeleteConfirmationDialog, PageHeadline, AlertContext, TemplateSidebarNavContent, useQueryParams } from '../../shared/index.js';\nimport { SentSmsTable } from '../SentSmsTable/index.js';\nimport { StatusFilter } from '../StatusFilter/index.js';\nimport { useDeleteMutation } from './useDeleteMutation.js';\nimport styles from './ViewSentSmsList.module.css';\nexport const SENT_SMS_LIST_LABEL = i18n.t('Sent');\nexport const SENT_SMS_LIST_PATH = '/sent';\nconst parseParams = _ref => {\n  let {\n    status,\n    page,\n    pageSize\n  } = _ref;\n  const params = {\n    pageSize,\n    page,\n    fields: ['id', 'message', 'status', 'date', 'recipients'],\n    order: 'date:desc'\n  };\n  if (status && status !== 'ALL') {\n    params.filter = `status:eq:${status}`;\n  }\n  return params;\n};\nconst query = {\n  sms: {\n    resource: 'sms/outbound',\n    params: parseParams\n  }\n};\nexport const ViewSentSmsList = () => {\n  var _data$sms;\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    status\n  } = queryParams;\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n  useEffect(() => {\n    refetch({\n      page,\n      pageSize,\n      status\n    });\n  }, [page, pageSize, status]);\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const [deleteSms] = useDeleteMutation({\n    onComplete: () => {\n      setShowDeleteConfirmationDialog(false);\n      refetch();\n      setSelectedIds([]);\n    },\n    onError: error => addAlert({\n      type: 'critical',\n      message: error.message\n    })\n  });\n  const onDeleteClick = () => deleteSms({\n    ids: selectedIds\n  });\n  const onCancelClick = () => setShowDeleteConfirmationDialog(false);\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading sent SMSes');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n  const messages = (data === null || data === void 0 ? void 0 : (_data$sms = data.sms) === null || _data$sms === void 0 ? void 0 : _data$sms.outboundsmss) || [];\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(StatusFilter, {\n    status: status,\n    setStatus: setStatus\n  }), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowDeleteConfirmationDialog(true),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected')), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: onCancelClick,\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected sms?'))), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(SentSmsTable, {\n    messages: messages,\n    pager: data.sms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  })));\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomeCard_container__Ktpu5\",\"title\":\"HomeCard_title__pmJa3\",\"body\":\"HomeCard_body__aI-y1\",\"linkContainer\":\"HomeCard_linkContainer__u8GfW\",\"link\":\"HomeCard_link__TaEzx\"};","import { PropTypes } from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport s from './HomeCard.module.css';\nexport const HomeCard = _ref => {\n  let {\n    titleText,\n    bodyText,\n    linkText,\n    to\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.container\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: s.title\n  }, titleText), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.body\n  }, bodyText), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.linkContainer\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: to\n  }, linkText))));\n};\nHomeCard.propTypes = {\n  bodyText: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired,\n  titleText: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ViewOverview_container__WzAFa\",\"explanation\":\"ViewOverview_explanation__KtByS\",\"grid\":\"ViewOverview_grid__KkFCn\",\"gridItem\":\"ViewOverview_gridItem__JfM-S\"};","import React from 'react';\nimport i18n from '../../locales/index.js';\nimport { PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared/index.js';\nimport { HomeCard } from '../HomeCard/index.js';\nimport s from './ViewOverview.module.css';\nexport const ViewOverview = () => {\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-home'),\n    className: s.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Overview: SMS Configuration', {\n    nsSeparator: '>'\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.explanation\n  }, i18n.t('Configure settings for SMS sending, receiving, data reporting, alerts, registration and more.')), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.grid\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Gateway Configuration'),\n    bodyText: i18n.t('Add and manage gateways for sending and receiving SMS messages in DHIS2.'),\n    linkText: i18n.t('Set up gateways'),\n    to: \"/sms-gateway\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('SMS Commands'),\n    bodyText: i18n.t('Add and manage commands triggered by incoming SMS messages to register, alert and more.'),\n    linkText: i18n.t('Set up SMS commands'),\n    to: \"/sms-command\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Sent SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages sent from DHIS2.'),\n    linkText: i18n.t('View all sent SMS'),\n    to: \"/sent\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Received SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages received by DHIS2.'),\n    linkText: i18n.t('View all received SMS'),\n    to: \"/received\"\n  })))));\n};","import { App } from './App.js';\nexport default App;","import './locales/index.js';\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { AppWrapper } from './AppWrapper.js';\nimport { ViewSmsCommandAdd, ViewSmsCommandList, ViewSmsCommandEdit } from './sms-command/index.js';\nimport { ViewSmsGatewayAdd, ViewSmsGatewayList, ViewSmsGatewayEdit } from './sms-gateway/index.js';\nimport { ViewReceivedSmsList } from './sms-inbound/index.js';\nimport { ViewSentSmsList } from './sms-outbound/index.js';\nimport { ViewOverview } from './sms-overview/index.js';\nexport const App = () => /*#__PURE__*/React.createElement(AppWrapper, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: ViewOverview\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-gateway\",\n  component: ViewSmsGatewayList\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/new\",\n  component: ViewSmsGatewayAdd\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/:id\",\n  component: ViewSmsGatewayEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-command\",\n  component: ViewSmsCommandList\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/new\",\n  component: ViewSmsCommandAdd\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/:id\",\n  component: ViewSmsCommandEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sent\",\n  component: ViewSentSmsList\n}), /* View received sms */'', /*#__PURE__*/React.createElement(Route, {\n  path: \"/received\",\n  component: ViewReceivedSmsList\n}), /* Handle 404 */'', /*#__PURE__*/React.createElement(Redirect, {\n  from: \"*\",\n  to: \"/\"\n})));"],"names":["namespace","i18n","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","es_419Translations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","neTranslations","nlTranslations","orTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","roTranslations","ruTranslations","siTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uz_CyrlTranslations","uz_LatnTranslations","uz_UZ_CyrlTranslations","uz_UZ_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","AlertContext","createContext","addAlert","Error","dataTest","name","arguments","length","undefined","AlertHandler","_ref","children","alerts","setAlerts","useState","React","Provider","value","_ref2","message","type","alert","timestamp","Date","now","AlertStack","map","_ref3","AlertBar","key","CancelDialog","onConfirmCancel","onAbortCancel","Modal","ModalTitle","t","ModalActions","ButtonStrip","Button","onClick","primary","ContentLoading","CenteredContent","CircularLoader","ContentLoadingError","title","errorMessage","NoticeBox","error","date","formatted","moment","format","className","styles","DeleteConfirmationDialog","onCancelClick","onDeleteClick","ModalContent","secondary","Field","ReactFinalForm","FieldUserGroup","userGroups","loading","required","disabled","errorText","validationText","label","component","SingleSelectFieldFF","options","validate","hasValue","defaultProps","USER_GROUPS_QUERY","resource","params","paging","FieldUserGroupWithAutoLoad","data","useDataQuery","showLoadingStatus","id","displayName","FormRow","cx","ListActions","addLabel","deleteLabel","onAddClick","disableAdd","disableDelete","destructive","NavigationItem","path","exactMatch","history","useHistory","active","useIsItemActive","routeMatch","useRouteMatch","isExact","MenuItem","navigateToPath","push","defualtProps","Navigation","Menu","PageHeadline","PageSubHeadline","Paragraph","useQueryParams","_useQueryParams","status","withDefault","StringParam","phoneNumber","page","NumberParam","pageSize","FORM_ERROR","FinalForm","useSubmit","onSubmit","useContext","catch","e","PAGE_LENGTHS","Pagination","pageCount","total","firstItem","Math","min","lastItem","availablePages","Array","from","_x","i","toString","setQueryParams","setPage","SingleSelect","dense","selected","onChange","setPageSize","SingleSelectOption","small","inputWidth","availablePage","SmsTable","messages","pager","selectedIds","setSelectedIds","columns","rowRenderFn","selectedIdSet","Set","allSelected","Table","TableHead","TableRowHead","TableCellHead","Checkbox","toggleAll","checked","column","TableBody","TableRow","TableCell","colSpan","String","has","toggle","delete","add","TableFoot","LayoutContainer","LayoutContent","LayoutSidebar","TemplateSidebarNavContent","Time","time","FeatureToggleContext","disableConfidentialEdit","useFeatureToggle","FeatureToggleProvider","serverVersion","useConfig","providerValue","minor","AppWrapper","CssVariables","spacers","colors","HashRouter","QueryParamProvider","ReactRouterRoute","Route","FIELD_COMMAND_NAME","FieldCommandName","InputFieldFF","composeValidators","string","FIELD_DATA_SET_NAME","FieldDataSet","dataSets","parse","DATA_SETS_QUERY","fields","FieldDataSetWithAutoLoad","programs","parserTypes","KEY_VALUE_PARSER","J2ME_PARSER","ALERT_PARSER","UNREGISTERED_PARSER","TRACKED_ENTITY_REGISTRATION_PARSER","PROGRAM_STAGE_DATAENTRY_PARSER","EVENT_REGISTRATION_PARSER","Object","values","sort","a","b","FIELD_PARSER_NAME","FieldParser","FIELD_PROGRAM_NAME","FieldProgram","programTypes","PROGRAMS_WITH_REGISTRATION","PROGRAMS_WITHOUT_REGISTRATION","ALL_PROGRAMS","PROGRAMS_QUERY","registration","filter","useForm","FieldProgramWithAutoLoad","form","refetch","variables","useReadProgramsQuery","lazy","useEffect","change","FIELD_PROGRAM_STAGE_NAME","FieldProgramStage","programStages","initialValue","iinitialValue","PROGRAM_STAGES_QUERY","programId","FieldProgramStageWithLoadingStates","_data$programStages2","_data$programStages3","parserType","useReadProgramStagesQuery","_data$programStages","_data$programStages$p","isEventRegistrationParser","programStageValueForEventRegistration","CREATE_SMS_COMMAND_MUTATION","dataset","userGroup","program","programStage","Form","ActualForm","handleSubmit","submitting","useResetFormFields","prevValues","setPrevValues","getState","subscribe","batch","prevProgram","prevParserType","showDataSetField","showUserGroupField","showProgramField","showProgramStageField","shouldProgramsBeWithRegistration","disableProgramStage","helpText","icon","goBack","ViewSmsCommandAdd","createSmsCommand","onComplete","onError","useDataMutation","useCreateSmsCommandMutation","destroyOnUnregister","FieldConfirmMessage","TextAreaFieldFF","useFormState","subscription","pristine","SaveCommandButton","enabled","FormActions","enableSubmit","onCancel","submitError","hasSubmitErrors","SubmitErrors","ALERT_DATA_QUERY","smsCommand","commandId","updateAlertParserMutation","partial","receivedMessage","FormAlertParser","onAfterChange","useAlertDataQuery","updateCommand","engine","useDataEngine","mutate","then","useUpdateCommandMutation","initialValues","createInitialValues","keepDirtyOnReinitialize","FormComponent","FIELD_DEFAULT_MESSAGE_NAME","FieldDefaultMessage","FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME","FieldMoreThanOneOrgUnitMessage","FIELD_NO_USER_MESSAGE_NAME","FieldNoUserMessage","FIELD_SEPARATOR_NAME","FieldSeparator","FIELD_SMS_CODES_NAME","FieldSmsCode","valueType","smsCode","code","nextCode","trackedEntityAttribute","FieldSmsCodeDataElement","dataElement","smsCodes","FIELD_SUCCESS_MESSAGE_NAME","FieldSuccessMessage","FIELD_WRONG_FORMAT_MESSAGE_NAME","FieldWrongFormatMessage","programStageDataElements","selectedProgramOption","selectedProgramStageOption","READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY","updateEventRegistrationParserMutation","command","separator","defaultMessage","wrongFormatMessage","noUserMessage","moreThanOneOrgUnitMessage","successMessage","FormEventRegistrationParser","msg","reduce","curSmsCodes","getInitialFormState","FIELD_SPECIAL_CHARS_NAME","FieldSpecialCharacter","index","onSpecialKeyRemoved","UiField","removeSpecialKeyFieldsFromFormState","specialChars","newSpecialChars","slice","AddSpecialCharacters","addSpecialKeyFieldsToFormState","CurrentFormula","formula","formulaDataElementName","operator","useField","DATA_ELEMENTS_QUERY","AddFormulaButton","baseName","setLoading","setFormulaDataElementName","input","dataElementId","query","response","finally","dataSet","useReadDataElementsOfDataSetQuery","dataSetId","setError","setData","queryDataElementsOfDataSet","dataSetElements","left","right","leftDisplayName","rightDisplayName","FormulaModalForm","combo","targetFieldName","onClose","initialFormula","useMemo","dataElementCode","modalDataTest","onRemove","newFormula","event","stopPropagation","_extends","assign","bind","n","r","hasOwnProperty","call","apply","FieldDataElementWithCategoryOptionCombo","categoryOptionCombo","showFormula","setShowFormula","DE_COC_toFormName","cocCode","formulaName","invalid","touched","meta","rest","formulaFieldName","completenessMethods","ALL_DATAVALUE","AT_LEAST_ONE_DATAVALUE","DO_NOT_MARK_COMPLETE","FIELD_COMPLETENESS_METHOD_NAME","FieldCompletenessMethod","CompletenessMessage","completenessMethod","warning","atLeastOneDataValueLabel","DataElementTimesCategoryOptionCombos","DE_COC_combinations","allRequired","FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME","FieldUseCurrentPeriodForReporting","CheckboxFieldFF","FormSpy","DE_COC_combination_data","hasSpecialChars","selectedDataSetOption","specialKeyRemoved","setSpecialKeyRemoved","_","getSmsCodeDuplicates","curDuplicates","includes","potentialDuplicates","curIndex","curCode","newlyFoundDuplicates","curWithCodeDuplicates","curName","globalValidate","hasErrors","errors","smsCodesFormState","smsCodesWithValue","entries","duplicates","duplicateErrors","forEach","duplicate","READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY","updateJ2meParserMutation","useCurrentPeriodForReporting","specialCharacters","codeWrapper","compulsory","optionId","formattedSmsCode","FormJ2meParser","loadingCommandError","commandData","useCommandData","_ref4","categoryOptionComboId","split","acc","payload","optionIdWrapper","curCombinations","_dataElement$category","categoryCombo","categoryOptionCombos","combos","COC","dirty","updateKeyValueParserMutation","FormKeyValueParser","createDataTestValue","READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY","REPLACE_SMS_COMMAND_MUTATION","FormProgramStageDataEntryParser","programStageId","dynamicFields","dynamicField","field","replace","FormTrackedEntityRegistrationParser","smsCodesOriginal","programTrackedEntityAttributes","merged","UPDATE_COMMAND_MUTATION","FormUnregisteredParser","READ_SMS_COMMAND_PARSER_TYPE_QUERY","isParserType","parser","ViewSmsCommandEdit","useParams","useReadSmsCommandParserTypeQuery","showCancelDialog","setShowCancelDialog","isParser","getSmsCommandEditFormComponent","DELETE_SMS_COMMAND_MUTATION","useDeleteSmsCommandMutation","idToMutationRequest","idToMutationRequestFactory","onDone","ids","Promise","all","SMS_COMMANDS_QUERY","smsCommands","join","SMS_COMMAND_LIST_LABEL","ViewSmsCommandList","_data$smsCommands2","_data$smsCommands2$sm","_data$smsCommands3","_data$smsCommands3$sm","_data$smsCommands4","_data$smsCommands4$sm","checkedSmsCommands","setCheckedSmsCommands","showDeleteConfirmationDialog","setShowDeleteConfirmationDialog","loadingReadSmsCommands","errorReadSmsCommands","deleteSmsCommands","loadingDelete","errorDelete","allChecked","hasCommands","onAddCommandClick","async","_ref5","onToggleCallChange","_data$smsCommands","_ref6","find","_ref7","checkedId","findIndex","toggleSmsCommand","getLabelByParserTypes","FieldEditConfidential","editMode","allowConfidentialFieldEdit","setAllowConfidentialFieldEdit","fieldType","prev","FieldGatewayName","FIELD_PASSWORD_NAME","FIELD_PASSWORD_LABEL","FieldPassword","placeholder","equalToPassword","createEqualTo","FIELD_PASSWORD_CONFIRMATION_NAME","FieldPasswordConfirmation","FieldUsername","FormBulkSMS","submitText","FieldAuthToken","FieldUrlTemplate","url","FormClickatell","ActionAddKeyValuePair","addKeyValueToFormState","parameters","header","encode","confidential","unsaved","FieldConfigurationTemplate","optionApplicationJson","optionApplicationXml","optionFormUrlEncoded","optionTextPlain","FieldContentType","isStringWithLengthAtLeastOne","createFieldGatewayKeyValuePairValueName","ValueField","FieldKeyValuePair","_getState$values","_getState$values$para","currentParameter","isConfidential","isUnsaved","isDisabled","removeKeyValueFromFormState","FieldSendUrlParameters","FieldUseGet","FormGeneric","FieldBindType","defaultValue","FieldCompressed","FieldHost","FieldNumberPlanIndicator","FieldPort","integer","FieldSystemId","FieldSystemType","FieldTypeOfNumber","FormSMPP","gatewayTypes","GENERIC_FORM","BULK_SMS_FORM","CLICKATELL_FORM","SMPP_FORM","CREATE_BULK_SMS_GATEWAY_MUTATION","username","password","CREATE_CLICKATELL_GATEWAY_MUTATION","authToken","urlTemplate","createGenericGateWayDataFromVariables","configurationTemplate","contentType","sendUrlParameters","useGet","p","_p$value","CREATE_GENERIC_GATEWAY_MUTATION","CREATE_SMPP_GATEWAY_MUTATION","systemId","host","systemType","numberPlanIndicator","typeOfNumber","bindType","port","compressed","ViewSmsGatewayAdd","visibleForm","setVisibleForm","saveGenericGateway","saveGenericGatewayError","saveBulkSMSGateway","saveBulkSMSGatewayError","saveClickatellGateway","saveClickatellGatewayError","saveSMPPGateway","saveSMPPGatewayError","reject","SingleSelectField","passwordRequired","GATEWAY_QUERY","gateway","useUpdateGatewayMutation","updatedQuery","UPDATE_BULK_SMS_GATEWAY_MUTATION","UPDATE_CLICKATELL_GATEWAY_MUTATION","UPDATE_GENERIC_GATEWAY_MUTATION","UPDATE_SMPP_GATEWAY_MUTATION","ViewSmsGatewayEdit","_data$gateway","loadError","jsonData","useReadGatewayQuery","saveError","JSON","gatewayType","getFormComponent","getInitialValues","filteredParameters","param","uid","formValues","GatewaysTable","allGatewaysChecked","checkedGateways","gateways","onGatewayToggle","onToggleAll","onMakeDefaultClick","isDefault","List","setCheckedGateways","processing","curId","newCheckedGateways","allGatewayIds","DELETE_GATEWAY_MUTATION","useDeleteGatewaysMutation","GATEWAYS_QUERY","SET_DEFAULT_GATEWAY_MUTATION","GATEWAY_CONFIG_LIST_LABEL","ViewSmsGatewayList","_data$gateways","_data$gateways$gatewa","showDeleteDialog","setShowDeleteDialog","loadingReadGateways","errorReadGateways","refetchReadGateways","_parsedData$gateways","parsedData","useReadGatewaysQuery","deleteCheckedGateways","makeGatewayDefault","loadingSetDefault","errorSetDefault","hasGateways","onAddGatewayClick","info","translations","ALL","FAILED","INCOMING","PROCESSED","PROCESSING","SENT","UNHANDLED","STATUS_FILTER_OPTIONS","Filter","setStatus","setPhoneNumber","onReset","InputField","large","ReceivedSmsTable","_message$user","_message$user$userCre","text","originator","smsstatus","user","userCredentials","receiveddate","DELETE_INBOUND_SMS_MUTATION","RECEIVED_SMS_LIST_LABEL","inboundSms","order","filters","ViewReceivedSmsList","_data$inboundSms","queryParams","called","callback","debouncedRefetch","useDebouncedCallback","leading","deleteSms","useDeleteMutation","inboundsmss","handleFilterReset","DELIVERED","ERROR","OUTBOUND","PENDING","SCHEDULED","SentSmsTable","recipients","recipient","StatusFilter","DELETE_OUTBOUND_SMS_MUTATION","SENT_SMS_LIST_LABEL","sms","ViewSentSmsList","_data$sms","outboundsmss","HomeCard","titleText","bodyText","linkText","to","Card","s","Link","ViewOverview","nsSeparator","App","Switch","exact","Redirect"],"sourceRoot":""}