{"version":3,"sources":["D2App/shared/components/Date/Date.module.css","D2App/shared/components/FormRow/FormRow.module.css","D2App/shared/components/ListActions/ListActions.module.css","D2App/shared/components/Navigation/NavigationItem.module.css","D2App/shared/components/PageHeadline/PageHeadline.module.css","D2App/shared/components/PageSubHeadline/PageSubHeadline.module.css","D2App/shared/components/Paragraph/Paragraph.module.css","D2App/shared/components/pagination/Pagination.module.css","D2App/shared/components/SmsTable/SmsTable.module.css","D2App/shared/components/Template/LayoutContainer.module.css","D2App/shared/components/Template/LayoutContent.module.css","D2App/shared/components/Template/LayoutSidebar.module.css","D2App/shared/components/Time/Time.module.css","D2App/sms-command/ViewSmsCommandAdd/ViewSmsCommandAdd.module.css","D2App/sms-command/FieldSpecialCharacter/FieldSpecialCharacter.module.css","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/CurrentFormula.module.css","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.module.css","D2App/sms-command/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.module.css","D2App/sms-command/ViewSmsCommandEdit/ViewSmsCommandEdit.module.css","D2App/sms-command/ViewSmsCommandList/ViewSmsCommandList.module.css","D2App/sms-gateway/ActionAddKeyValuePair/ActionAddKeyValuePair.module.css","D2App/sms-gateway/FieldKeyValuePair/FieldKeyValuePair.module.css","D2App/sms-gateway/ViewSmsGatewayAdd/ViewSmsGatewayAdd.module.css","D2App/sms-gateway/ViewSmsGatewayEdit/ViewSmsGatewayEdit.module.css","D2App/sms-gateway/ViewSmsGatewayList/GatewaysTable.module.css","D2App/sms-gateway/ViewSmsGatewayList/List.module.css","D2App/sms-gateway/ViewSmsGatewayList/ViewSmsGatewayList.module.css","D2App/sms-inbound/Filter/Filter.module.css","D2App/sms-inbound/ReceivedSmsTable/ReceivedSmsTable.module.css","D2App/sms-inbound/ViewReceivedSmsList/ViewReceivedSmsList.module.css","D2App/sms-outbound/SentSmsTable/SentSmsTable.module.css","D2App/sms-outbound/StatusFilter/StatusFilter.module.css","D2App/sms-outbound/ViewSentSmsList/ViewSentSmsList.module.css","D2App/sms-overview/HomeCard/HomeCard.module.css","D2App/sms-overview/ViewOverview/ViewOverview.module.css","D2App/locales/index.js","D2App/shared/components/AlertHandler/AlertContext.js","D2App/shared/utils/dataTest/dataTest.js","D2App/shared/components/AlertHandler/AlertHandler.js","D2App/shared/components/CancelDialog/CancelDialog.js","D2App/shared/components/ContentLoading/ContentLoading.js","D2App/shared/components/ContentLoadingError/ContentLoadingError.js","D2App/shared/components/Date/Date.js","D2App/shared/components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","D2App/shared/components/FieldUserGroup/FieldUserGroup.js","D2App/shared/components/FieldUserGroup/useReadUserGroupsQuery.js","D2App/shared/components/FieldUserGroup/FieldUserGroupWithAutoLoad.js","D2App/shared/components/FormRow/FormRow.js","D2App/shared/components/ListActions/ListActions.js","D2App/shared/components/Navigation/NavigationItem.js","D2App/shared/components/Navigation/Navigation.js","D2App/shared/components/PageHeadline/PageHeadline.js","D2App/shared/components/PageSubHeadline/PageSubHeadline.js","D2App/shared/components/Paragraph/Paragraph.js","D2App/shared/hooks/useQueryParam/useQueryParams.js","D2App/shared/hooks/useSubmit/useSubmit.js","D2App/shared/components/pagination/Pagination.js","D2App/shared/components/SmsTable/SmsTable.js","D2App/shared/components/Template/LayoutContainer.js","D2App/shared/components/Template/LayoutContent.js","D2App/shared/components/Template/LayoutSidebar.js","D2App/shared/components/Template/TemplateSidebarNavContent.js","D2App/shared/components/Time/Time.js","D2App/AppWrapper.js","D2App/sms-command/FieldCommandName/FieldCommandName.js","D2App/sms-command/FieldDataSet/FieldDataSet.js","D2App/sms-command/FieldDataSet/useReadDataSetsQuery.js","D2App/sms-command/FieldDataSet/FieldDataSetWithAutoLoad.js","D2App/sms-command/FieldParser/parserTypes.js","D2App/sms-command/FieldParser/FieldParser.js","D2App/sms-command/FieldProgram/FieldProgram.js","D2App/sms-command/FieldProgram/programTypes.js","D2App/sms-command/FieldProgram/useReadProgramsQuery.js","D2App/sms-command/FieldProgram/FieldProgramWithAutoLoad.js","D2App/sms-command/FieldProgramStage/FieldProgramStage.js","D2App/sms-command/FieldProgramStage/useReadProgramStagesQuery.js","D2App/sms-command/FieldProgramStage/FieldProgramStageWithLoadingStates.js","D2App/sms-command/ViewSmsCommandAdd/useCreateSmsCommandMutation.js","D2App/sms-command/ViewSmsCommandAdd/ViewSmsCommandAdd.js","D2App/sms-command/FieldConfirmMessage/FieldConfirmMessage.js","D2App/sms-command/FormActions/SaveCommandButton.js","D2App/sms-command/FormActions/FormActions.js","D2App/sms-command/SubmitErrors/SubmitErrors.js","D2App/sms-command/FormAlertParser/Form.js","D2App/sms-command/FormAlertParser/useAlertDataQuery.js","D2App/sms-command/FormAlertParser/useUpdateCommandMutation.js","D2App/sms-command/FormAlertParser/FormAlertParser.js","D2App/sms-command/FormAlertParser/createInitialValues.js","D2App/sms-command/FormAlertParser/createUserGroupOptions.js","D2App/sms-command/FieldDefaultMessage/FieldDefaultMessage.js","D2App/sms-command/FieldMoreThanOneOrgUnitMessage/FieldMoreThanOneOrgUnitMessage.js","D2App/sms-command/FieldNoUserMessage/FieldNoUserMessage.js","D2App/sms-command/FieldSeparator/FieldSeparator.js","D2App/sms-command/FieldSmsCode/FieldSmsCode.js","D2App/sms-command/FieldSmsCodeDataElement/FieldSmsCodeDataElement.js","D2App/sms-command/FieldSuccessMessage/FieldSuccessMessage.js","D2App/sms-command/FieldWrongFormatMessage/FieldWrongFormatMessage.js","D2App/sms-command/FormEventRegistrationParser/Form.js","D2App/sms-command/FormEventRegistrationParser/getInitialFormState.js","D2App/sms-command/FormEventRegistrationParser/useCommandQuery.js","D2App/sms-command/FormEventRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/FormEventRegistrationParser/FormEventRegistrationParser.js","D2App/sms-command/FieldSpecialCharacter/FieldSpecialCharacter.js","D2App/sms-command/AddSpecialCharacters/AddSpecialCharacters.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/CurrentFormula.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/AddFormulaButton.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/useReadDataElementsOfDataSetQuery.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FormulaModalForm.js","D2App/sms-command/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.js","D2App/sms-command/FieldCompletenessMethod/completenessMethods.js","D2App/sms-command/FieldCompletenessMethod/FieldCompletenessMethod.js","D2App/sms-command/DataElementTimesCategoryOptionCombos/CompletenessMessage.js","D2App/sms-command/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.js","D2App/sms-command/FieldUseCurrentPeriodForReporting/FieldUseCurrentPeriodForReporting.js","D2App/sms-command/FormJ2meParser/Form.js","D2App/sms-command/FormJ2meParser/getInitialFormState.js","D2App/sms-command/getSmsCodeDuplicates/getSmsCodeDuplicates.js","D2App/sms-command/FormJ2meParser/globalValidate.js","D2App/sms-command/FormJ2meParser/useCommandData.js","D2App/sms-command/FormJ2meParser/useUpdateCommandMutation.js","D2App/sms-command/FormJ2meParser/FormJ2meParser.js","D2App/sms-command/FormKeyValueParser/Form.js","D2App/sms-command/FormKeyValueParser/getInitialFormState.js","D2App/sms-command/FormKeyValueParser/globalValidate.js","D2App/sms-command/FormKeyValueParser/useCommandData.js","D2App/sms-command/FormKeyValueParser/useUpdateCommandMutation.js","D2App/sms-command/FormKeyValueParser/FormKeyValueParser.js","D2App/sms-command/FormProgramStageDataEntryParser/FormComponent.js","D2App/sms-command/FormProgramStageDataEntryParser/getInitialFormState.js","D2App/sms-command/FormProgramStageDataEntryParser/useCommandData.js","D2App/sms-command/FormProgramStageDataEntryParser/useUpdateCommandMutation.js","D2App/sms-command/FormProgramStageDataEntryParser/FormProgramStageDataEntryParser.js","D2App/sms-command/FormTrackedEntityRegistrationParser/Form.js","D2App/sms-command/FormTrackedEntityRegistrationParser/useCommandData.js","D2App/sms-command/FormTrackedEntityRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/FormTrackedEntityRegistrationParser/FormTrackedEntityRegistrationParser.js","D2App/sms-command/FormUnregisteredParser/Form.js","D2App/sms-command/FormUnregisteredParser/useCommandData.js","D2App/sms-command/FormUnregisteredParser/useUpdateCommandMutation.js","D2App/sms-command/FormUnregisteredParser/FormUnregisteredParser.js","D2App/sms-command/ViewSmsCommandEdit/useReadSmsCommandParserTypeQuery.js","D2App/sms-command/ViewSmsCommandEdit/ViewSmsCommandEdit.js","D2App/sms-command/ViewSmsCommandList/useDeleteSmsCommandMutation.js","D2App/sms-command/ViewSmsCommandList/useReadSmsCommandsQuery.js","D2App/sms-command/ViewSmsCommandList/ViewSmsCommandList.js","D2App/sms-gateway/FieldGatewayName/FieldGatewayName.js","D2App/sms-gateway/FieldPassword/FieldPassword.js","D2App/sms-gateway/FieldPasswordConfirmation/FieldPasswordConfirmation.js","D2App/sms-gateway/FieldUsername/FieldUsername.js","D2App/sms-gateway/FormBulkSMS/FormBulkSMS.js","D2App/sms-gateway/FieldAuthToken/FieldAuthToken.js","D2App/sms-gateway/FieldUrlTemplate/FieldUrlTemplate.js","D2App/sms-gateway/FormClickatell/FormClickatell.js","D2App/sms-gateway/ActionAddKeyValuePair/ActionAddKeyValuePair.js","D2App/sms-gateway/FieldConfigurationTemplate/FieldConfigurationTemplate.js","D2App/sms-gateway/FieldContentType/FieldContentType.js","D2App/sms-gateway/FieldKeyValuePair/ValueField.js","D2App/sms-gateway/FieldKeyValuePair/FieldKeyValuePair.js","D2App/sms-gateway/FieldSendUrlParameters/FieldSendUrlParameters.js","D2App/sms-gateway/FieldUseGet/FieldUseGet.js","D2App/sms-gateway/FormGeneric/FormGeneric.js","D2App/sms-gateway/FieldBindType/FieldBindType.js","D2App/sms-gateway/FieldCompressed/FieldCompressed.js","D2App/sms-gateway/FieldHost/FieldHost.js","D2App/sms-gateway/FieldNumberPlanIndicator/FieldNumberPlanIndicator.js","D2App/sms-gateway/FieldPort/FieldPort.js","D2App/sms-gateway/FieldSystemId/FieldSystemId.js","D2App/sms-gateway/FieldSystemType/FieldSystemType.js","D2App/sms-gateway/FieldTypeOfNumber/FieldTypeOfNumber.js","D2App/sms-gateway/FormSMPP/FromSMPP.js","D2App/sms-gateway/InputSingleSelectGatewayType/gatewayTypes.js","D2App/sms-gateway/InputSingleSelectGatewayType/InputSingleSelectGatewayType.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateBulkSMSGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateClickatellGatewayMutation.js","D2App/sms-gateway/createGenericGateWayDataFromVariables/createGenericGateWayDataFromVariables.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateGenericGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/useCreateSMPPGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayAdd/ViewSmsGatewayAdd.js","D2App/sms-gateway/ViewSmsGatewayEdit/useReadGatewayQuery.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateBulkSMSGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateClickatellGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateGenericGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/useUpdateSMPPGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayEdit/ViewSmsGatewayEdit.js","D2App/sms-gateway/ViewSmsGatewayList/getTypeLabelByType.js","D2App/sms-gateway/ViewSmsGatewayList/GatewaysTable.js","D2App/sms-gateway/ViewSmsGatewayList/List.js","D2App/sms-gateway/ViewSmsGatewayList/useDeleteGatewaysMutation.js","D2App/sms-gateway/ViewSmsGatewayList/useReadGatewaysQuery.js","D2App/sms-gateway/ViewSmsGatewayList/useSetDefaultGatewayMutation.js","D2App/sms-gateway/ViewSmsGatewayList/ViewSmsGatewayList.js","D2App/sms-inbound/translations/translations.js","D2App/sms-inbound/Filter/Filter.js","D2App/sms-inbound/ReceivedSmsTable/ReceivedSmsTable.js","D2App/sms-inbound/ViewReceivedSmsList/useDeleteMutation.js","D2App/sms-inbound/ViewReceivedSmsList/ViewReceivedSmsList.js","D2App/sms-outbound/translations/translations.js","D2App/sms-outbound/SentSmsTable/SentSmsTable.js","D2App/sms-outbound/StatusFilter/StatusFilter.js","D2App/sms-outbound/ViewSentSmsList/useDeleteMutation.js","D2App/sms-outbound/ViewSentSmsList/ViewSentSmsList.js","D2App/sms-overview/HomeCard/HomeCard.js","D2App/sms-overview/ViewOverview/ViewOverview.js","D2App/index.js","D2App/App.js"],"names":["module","exports","namespace","i18n","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","AlertContext","createContext","addAlert","Error","dataTest","name","prefix","concat","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","AlertHandler","children","alerts","setAlerts","useState","React","createElement","Provider","value","message","type","alert","timestamp","Date","now","AlertStack","map","AlertBar","CancelDialog","onConfirmCancel","onAbortCancel","Modal","ModalTitle","t","ModalActions","ButtonStrip","Button","onClick","primary","ContentLoading","CenteredContent","CircularLoader","ContentLoadingError","title","errorMessage","NoticeBox","error","date","formatted","moment","format","className","styles","DeleteConfirmationDialog","onCancelClick","onDeleteClick","ModalContent","secondary","Field","ReactFinalForm","FieldUserGroup","userGroups","loading","required","disabled","errorText","validationText","label","component","SingleSelectFieldFF","options","validate","hasValue","defaultProps","USER_GROUPS_QUERY","resource","params","paging","FieldUserGroupWithAutoLoad","data","useDataQuery","undefined","showLoadingStatus","id","displayName","FormRow","cx","formRow","ListActions","addLabel","deleteLabel","onAddClick","disableAdd","disableDelete","container","destructive","NavigationItem","path","exactMatch","history","useHistory","active","routeMatch","useRouteMatch","isExact","useIsItemActive","MenuItem","item","push","defualtProps","Navigation","Menu","PageHeadline","headline","PageSubHeadline","subHeadline","Paragraph","paragraph","useQueryParams","_useQueryParams","status","withDefault","StringParam","phoneNumber","page","NumberParam","pageSize","FORM_ERROR","FinalForm","useSubmit","onSubmit","useContext","args","catch","e","PAGE_LENGTHS","Pagination","pageCount","total","firstItem","Math","min","lastItem","availablePages","Array","from","_x","toString","setQueryParams","setPage","verticalAlign","SingleSelect","dense","selected","onChange","setPageSize","select","SingleSelectOption","summary","buttonPrevious","small","inputWidth","availablePage","buttonNext","SmsTable","messages","pager","selectedIds","setSelectedIds","columns","rowRenderFn","selectedIdSet","Set","allSelected","Table","TableHead","TableRowHead","TableCellHead","Checkbox","checked","column","TableBody","TableRow","TableCell","colSpan","String","noResults","has","toggle","delete","add","TableFoot","LayoutContainer","LayoutContent","content","LayoutSidebar","sidebar","TemplateSidebarNavContent","Time","time","AppWrapper","CssVariables","spacers","colors","HashRouter","QueryParamProvider","ReactRouterRoute","Route","FIELD_COMMAND_NAME","FieldCommandName","InputFieldFF","composeValidators","string","FIELD_DATA_SET_NAME","FieldDataSet","dataSets","parse","DATA_SETS_QUERY","fields","FieldDataSetWithAutoLoad","programs","parserTypes","KEY_VALUE_PARSER","J2ME_PARSER","ALERT_PARSER","UNREGISTERED_PARSER","TRACKED_ENTITY_REGISTRATION_PARSER","PROGRAM_STAGE_DATAENTRY_PARSER","EVENT_REGISTRATION_PARSER","values","sort","a","b","FIELD_PARSER_NAME","FieldParser","FIELD_PROGRAM_NAME","FieldProgram","programTypes","PROGRAMS_WITH_REGISTRATION","PROGRAMS_WITHOUT_REGISTRATION","ALL_PROGRAMS","PROGRAMS_QUERY","registration","filter","useForm","FieldProgramWithAutoLoad","form","refetch","variables","useReadProgramsQuery","lazy","useEffect","change","FIELD_PROGRAM_STAGE_NAME","FieldProgramStage","programStages","initialValue","iinitialValue","PROGRAM_STAGES_QUERY","programId","FieldProgramStageWithLoadingStates","parserType","_data$programStages2","_data$programStages3","useReadProgramStagesQuery","_data$programStages","_data$programStages$p","isEventRegistrationParser","programStageValueForEventRegistration","CREATE_SMS_COMMAND_MUTATION","dataset","userGroup","program","programStage","Form","ActualForm","handleSubmit","submitting","prevValues","setPrevValues","getState","subscribe","batch","prevProgram","prevParserType","useResetFormFields","showDataSetField","showUserGroupField","showProgramField","showProgramStageField","shouldProgramsBeWithRegistration","disableProgramStage","helpText","icon","goBack","ViewSmsCommandAdd","createSmsCommand","onComplete","onError","useDataMutation","useCreateSmsCommandMutation","destroyOnUnregister","FieldConfirmMessage","TextAreaFieldFF","useFormState","subscription","pristine","SaveCommandButton","enabled","FormActions","enableSubmit","onCancel","submitError","hasSubmitErrors","SubmitErrors","ALERT_DATA_QUERY","smsCommand","commandId","updateAlertParserMutation","partial","receivedMessage","FormAlertParser","onAfterChange","useAlertDataQuery","updateCommand","engine","useDataEngine","mutate","then","useUpdateCommandMutation","initialValues","createInitialValues","keepDirtyOnReinitialize","FormComponent","FIELD_DEFAULT_MESSAGE_NAME","FieldDefaultMessage","FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME","FieldMoreThanOneOrgUnitMessage","FIELD_NO_USER_MESSAGE_NAME","FieldNoUserMessage","FIELD_SEPARATOR_NAME","FieldSeparator","FIELD_SMS_CODES_NAME","FieldSmsCode","valueType","smsCode","code","nextCode","trackedEntityAttribute","FieldSmsCodeDataElement","dataElement","smsCodes","FIELD_SUCCESS_MESSAGE_NAME","FieldSuccessMessage","FIELD_WRONG_FORMAT_MESSAGE_NAME","FieldWrongFormatMessage","programStageDataElements","selectedProgramOption","selectedProgramStageOption","READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY","updateEventRegistrationParserMutation","command","separator","defaultMessage","wrongFormatMessage","noUserMessage","moreThanOneOrgUnitMessage","successMessage","FormEventRegistrationParser","msg","reduce","curSmsCodes","getInitialFormState","FIELD_SPECIAL_CHARS_NAME","FieldSpecialCharacter","index","onSpecialKeyRemoved","field","UiField","button","specialChars","newSpecialChars","slice","AddSpecialCharacters","CurrentFormula","formula","formulaDataElementName","operator","formulaInWords","formulaInWordsLabel","useField","DATA_ELEMENTS_QUERY","AddFormulaButton","baseName","setLoading","setFormulaDataElementName","input","dataElementId","query","response","finally","Fragment","dataSet","useReadDataElementsOfDataSetQuery","dataSetId","setError","setData","dataSetElements","left","right","leftDisplayName","rightDisplayName","queryDataElementsOfDataSet","FormulaModalForm","combo","targetFieldName","onClose","initialFormula","useMemo","dataElementCode","modalDataTest","onRemove","newFormula","event","stopPropagation","FieldDataElementWithCategoryOptionCombo","categoryOptionCombo","showFormula","setShowFormula","cocCode","DE_COC_toFormName","formulaName","invalid","touched","meta","rest","codeField","formulaFieldName","completenessMethods","ALL_DATAVALUE","AT_LEAST_ONE_DATAVALUE","DO_NOT_MARK_COMPLETE","FIELD_COMPLETENESS_METHOD_NAME","FieldCompletenessMethod","CompletenessMessage","completenessMethod","warning","DataElementTimesCategoryOptionCombos","DE_COC_combinations","allRequired","FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME","FieldUseCurrentPeriodForReporting","CheckboxFieldFF","FormSpy","DE_COC_combination_data","hasSpecialChars","selectedDataSetOption","specialKeyRemoved","setSpecialKeyRemoved","_","getSmsCodeDuplicates","curDuplicates","includes","potentialDuplicates","curCode","curIndex","newlyFoundDuplicates","curWithCodeDuplicates","curName","globalValidate","hasErrors","errors","smsCodesFormState","smsCodesWithValue","entries","duplicates","duplicateErrors","forEach","duplicate","READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY","replace","updateJ2meParserMutation","useCurrentPeriodForReporting","specialCharacters","compulsory","optionId","split","formattedSmsCode","FormJ2meParser","loadingCommandError","commandData","useCommandData","acc","curCombinations","_dataElement$category","categoryCombo","combos","COC","dirty","updateKeyValueParserMutation","FormKeyValueParser","createDataTestValue","READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY","REPLACE_SMS_COMMAND_MUTATION","FormProgramStageDataEntryParser","programStageId","dynamicFields","dynamicField","FormTrackedEntityRegistrationParser","smsCodesOriginal","programTrackedEntityAttributes","merged","UPDATE_COMMAND_MUTATION","FormUnregisteredParser","READ_SMS_COMMAND_PARSER_TYPE_QUERY","isParserType","parser","ViewSmsCommandEdit","useParams","useReadSmsCommandParserTypeQuery","showCancelDialog","setShowCancelDialog","isParser","bind","getSmsCommandEditFormComponent","DELETE_SMS_COMMAND_MUTATION","useDeleteSmsCommandMutation","idToMutationRequest","idToMutationRequestFactory","onDone","ids","Promise","all","SMS_COMMANDS_QUERY","smsCommands","join","SMS_COMMAND_LIST_LABEL","ViewSmsCommandList","_data$smsCommands2","_data$smsCommands2$sm","_data$smsCommands3","_data$smsCommands3$sm","_data$smsCommands4","_data$smsCommands4$sm","checkedSmsCommands","setCheckedSmsCommands","showDeleteConfirmationDialog","setShowDeleteConfirmationDialog","loadingReadSmsCommands","errorReadSmsCommands","deleteSmsCommands","loadingDelete","errorDelete","allChecked","hasCommands","async","_data$smsCommands","checkbox","find","checkedId","findIndex","toggleSmsCommand","getLabelByParserTypes","editButtonCell","FieldGatewayName","FIELD_PASSWORD_NAME","FIELD_PASSWORD_LABEL","FieldPassword","equalToPassword","createEqualTo","FIELD_PASSWORD_CONFIRMATION_NAME","FieldPasswordConfirmation","FieldUsername","FormBulkSMS","submitText","FieldAuthToken","FieldUrlTemplate","url","FormClickatell","ActionAddKeyValuePair","parameters","header","encode","confidential","FieldConfigurationTemplate","optionApplicationJson","optionApplicationXml","optionFormUrlEncoded","optionTextPlain","FieldContentType","isStringWithLengthAtLeastOne","createFieldGatewayKeyValuePairValueName","ValueField","FieldKeyValuePair","textInputs","keyInput","valueInput","checkboxGroup","removeKeyValueFromFormState","FieldSendUrlParameters","FieldUseGet","FormGeneric","FieldBindType","defaultValue","FieldCompressed","FieldHost","FieldNumberPlanIndicator","FieldPort","integer","FieldSystemId","FieldSystemType","FieldTypeOfNumber","FormSMPP","gatewayTypes","GENERIC_FORM","BULK_SMS_FORM","CLICKATELL_FORM","SMPP_FORM","CREATE_BULK_SMS_GATEWAY_MUTATION","username","password","CREATE_CLICKATELL_GATEWAY_MUTATION","authToken","urlTemplate","createGenericGateWayDataFromVariables","configurationTemplate","contentType","sendUrlParameters","useGet","CREATE_GENERIC_GATEWAY_MUTATION","CREATE_SMPP_GATEWAY_MUTATION","systemId","host","systemType","numberPlanIndicator","typeOfNumber","bindType","port","compressed","ViewSmsGatewayAdd","visibleForm","setVisibleForm","saveGenericGateway","saveGenericGatewayError","saveBulkSMSGateway","saveBulkSMSGatewayError","saveClickatellGateway","saveClickatellGatewayError","saveSMPPGateway","saveSMPPGatewayError","reject","SingleSelectField","passwordRequired","GATEWAY_QUERY","gateway","useUpdateGatewayMutation","updatedQuery","UPDATE_BULK_SMS_GATEWAY_MUTATION","UPDATE_CLICKATELL_GATEWAY_MUTATION","UPDATE_GENERIC_GATEWAY_MUTATION","UPDATE_SMPP_GATEWAY_MUTATION","ViewSmsGatewayEdit","_data$gateway","loadError","jsonData","useReadGatewayQuery","saveError","JSON","gatewayType","getFormComponent","uid","formValues","GatewaysTable","allGatewaysChecked","checkedGateways","gateways","onGatewayToggle","onToggleAll","onMakeDefaultClick","checkboxCell","typeCell","defaultCell","isDefault","isDefaultText","makeDefaultButton","editCell","rowActions","List","setCheckedGateways","processing","processingMessage","loadingContainer","curId","newCheckedGateways","allGatewayIds","DELETE_GATEWAY_MUTATION","useDeleteGatewaysMutation","GATEWAYS_QUERY","SET_DEFAULT_GATEWAY_MUTATION","GATEWAY_CONFIG_LIST_LABEL","ViewSmsGatewayList","_data$gateways","_data$gateways$gatewa","showDeleteDialog","setShowDeleteDialog","loadingReadGateways","errorReadGateways","refetchReadGateways","_parsedData$gateways","parsedData","useReadGatewaysQuery","deleteCheckedGateways","makeGatewayDefault","loadingSetDefault","errorSetDefault","hasGateways","info","translations","ALL","FAILED","INCOMING","PROCESSED","PROCESSING","SENT","UNHANDLED","STATUS_FILTER_OPTIONS","Filter","setStatus","setPhoneNumber","onReset","inputStrip","InputField","large","ReceivedSmsTable","_message$user","_message$user$userCre","text","originator","smsstatus","user","userCredentials","receiveddate","DELETE_INBOUND_SMS_MUTATION","RECEIVED_SMS_LIST_LABEL","inboundSms","order","filters","ViewReceivedSmsList","_data$inboundSms","queryParams","called","callback","debouncedRefetch","useDebouncedCallback","leading","deleteSms","useDeleteMutation","inboundsmss","DELIVERED","ERROR","OUTBOUND","PENDING","SCHEDULED","SentSmsTable","recipients","recipient","StatusFilter","DELETE_OUTBOUND_SMS_MUTATION","SENT_SMS_LIST_LABEL","sms","ViewSentSmsList","_data$sms","outboundsmss","HomeCard","titleText","bodyText","linkText","to","Card","s","body","linkContainer","Link","link","ViewOverview","nsSeparator","explanation","grid","gridItem","App","Switch","exact","Redirect"],"mappings":"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","file":"static/js/app.6e67f273.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"Date_date__32PVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"FormRow_formRow__1cNWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListActions_container__19UqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavigationItem_item__1JJRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"PageHeadline_headline__2WNWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subHeadline\":\"PageSubHeadline_subHeadline__A0PKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"Paragraph_paragraph__G0OSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__fuBgU\",\"verticalAlign\":\"Pagination_verticalAlign__20Arz\",\"select\":\"Pagination_select__15i-1\",\"buttonPrevious\":\"Pagination_buttonPrevious__20viW\",\"buttonNext\":\"Pagination_buttonNext__1gggb\",\"summary\":\"Pagination_summary__1jaey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noResults\":\"SmsTable_noResults__148QG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LayoutContainer_container__1Ix-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"LayoutContent_content__1c2dI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"LayoutSidebar_sidebar__1wPe0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Time_time__3_6vE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsCommandAdd_container__25VwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldSpecialCharacter_container__3m7Vh\",\"field\":\"FieldSpecialCharacter_field__20YF7\",\"button\":\"FieldSpecialCharacter_button__1QDDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formulaInWords\":\"CurrentFormula_formulaInWords__1FGIC\",\"formulaInWordsLabel\":\"CurrentFormula_formulaInWordsLabel__3UhrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldDataElementWithCategoryOptionCombo_container__VbaUQ\",\"field\":\"FieldDataElementWithCategoryOptionCombo_field__3_Ux1\",\"codeField\":\"FieldDataElementWithCategoryOptionCombo_codeField__Uwq1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"DataElementTimesCategoryOptionCombos_formRow__1ROJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsCommandEdit_container__3bTPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsCommandList_container__1rq9R\",\"editButtonCell\":\"ViewSmsCommandList_editButtonCell__3yHe0\",\"checkbox\":\"ViewSmsCommandList_checkbox__3dZPS\",\"noResults\":\"ViewSmsCommandList_noResults__1JuAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ActionAddKeyValuePair_button__2VAQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldKeyValuePair_container__2NkGf\",\"textInputs\":\"FieldKeyValuePair_textInputs__38rHh\",\"keyInput\":\"FieldKeyValuePair_keyInput__115P4\",\"valueInput\":\"FieldKeyValuePair_valueInput__fUk_z\",\"checkboxGroup\":\"FieldKeyValuePair_checkboxGroup__2CBb0\",\"checkbox\":\"FieldKeyValuePair_checkbox__2kgWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsGatewayAdd_container__1oKaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsGatewayEdit_container__2xMMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowActions\":\"GatewaysTable_rowActions__3BC1f\",\"checkboxCell\":\"GatewaysTable_checkboxCell__SI_z0\",\"typeCell\":\"GatewaysTable_typeCell__2WBpF\",\"editCell\":\"GatewaysTable_editCell__2Bufa\",\"defaultCell\":\"GatewaysTable_defaultCell__3m7ng\",\"makeDefaultButton\":\"GatewaysTable_makeDefaultButton__2YJXZ\",\"isDefaultText\":\"GatewaysTable_isDefaultText__1YJ_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__19UcB\",\"processingMessage\":\"List_processingMessage__36no2\",\"loadingContainer\":\"List_loadingContainer__3182Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSmsGatewayList_container__M3vdP\",\"actions\":\"ViewSmsGatewayList_actions__1lfCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__F0zPH\",\"inputStrip\":\"Filter_inputStrip__2V-ff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"originator\":\"ReceivedSmsTable_originator__2_Of0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewReceivedSmsList_container__31901\",\"header\":\"ViewReceivedSmsList_header__217oO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipient\":\"SentSmsTable_recipient__3N_Bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatusFilter_container__2u2cP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewSentSmsList_container__2Vg_h\",\"header\":\"ViewSentSmsList_header__2d9xU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeCard_container__1sTOF\",\"title\":\"HomeCard_title__4MzMw\",\"body\":\"HomeCard_body__2SG9l\",\"linkContainer\":\"HomeCard_linkContainer__3dX6c\",\"link\":\"HomeCard_link__wnKkR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewOverview_container__2EGnb\",\"explanation\":\"ViewOverview_explanation__2H7QS\",\"grid\":\"ViewOverview_grid__ns7f_\",\"gridItem\":\"ViewOverview_gridItem__36C2M\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { createContext } from 'react';\nexport const AlertContext = /*#__PURE__*/createContext({\n  addAlert: () => {\n    throw new Error('AlertContext has not been initialized yet!');\n  }\n});","const defaultPrefix = 'dhis2-smsconfiguration';\nexport const dataTest = (name, prefix = defaultPrefix) => \"\".concat(prefix, \"-\").concat(name);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { dataTest } from '../../utils';\nimport { AlertContext } from './AlertContext';\nexport const AlertHandler = ({\n  children\n}) => {\n  const [alerts, setAlerts] = useState([]);\n\n  const addAlert = ({\n    message,\n    type\n  }) => {\n    const alert = {\n      message,\n      type,\n      // Ensure that identical messages can be distinguished\n      timestamp: Date.now()\n    };\n    setAlerts([...alerts, alert]);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      addAlert\n    }\n  }, children, /*#__PURE__*/React.createElement(AlertStack, {\n    dataTest: dataTest('shared-alerthandler-alertstack')\n  }, alerts.map(({\n    message,\n    type,\n    timestamp\n  }) => /*#__PURE__*/React.createElement(AlertBar, _extends({\n    dataTest: dataTest('shared-alerthandler-alertbar'),\n    key: \"\".concat(message).concat(timestamp)\n  }, {\n    [type]: true\n  }), message))));\n};\nAlertHandler.propTypes = {\n  children: PropTypes.any\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalTitle, ModalActions } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nexport const CancelDialog = ({\n  onConfirmCancel,\n  onAbortCancel\n}) => /*#__PURE__*/React.createElement(Modal, null, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Are you sure you want to cancel? Unsaved changes will be lost')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n  onClick: onAbortCancel\n}, i18n.t('No, stay on page')), /*#__PURE__*/React.createElement(Button, {\n  primary: true,\n  onClick: onConfirmCancel\n}, i18n.t('Yes, cancel')))));\nCancelDialog.propTypes = {\n  onAbortCancel: PropTypes.func.isRequired,\n  onConfirmCancel: PropTypes.func.isRequired\n};","import { CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoading = () => /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));","import { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoadingError = ({\n  title,\n  errorMessage\n}) => /*#__PURE__*/React.createElement(NoticeBox, {\n  error: true,\n  title: title\n}, errorMessage);\nContentLoadingError.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Date.module.css';\nexport const Date = ({\n  date\n}) => {\n  const momentDate = moment(date);\n  const formatted = momentDate.format('DD MMM YYYY');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.date\n  }, formatted);\n};\nDate.propTypes = {\n  date: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../utils';\nexport const DeleteConfirmationDialog = ({\n  children,\n  onCancelClick,\n  onDeleteClick\n}) => {\n  return /*#__PURE__*/React.createElement(Modal, {\n    dataTest: dataTest('shared-deleteconfirmationdialog')\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Confirm deletion')), /*#__PURE__*/React.createElement(ModalContent, null, children), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onCancelClick,\n    dataTest: dataTest('shared-deleteconfirmationdialog-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onDeleteClick,\n    dataTest: dataTest('shared-deleteconfirmationdialog-confirm')\n  }, i18n.t('Delete')))));\n};\nDeleteConfirmationDialog.propTypes = {\n  children: PropTypes.any.isRequired,\n  onCancelClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USER_GROUP_NAME = 'userGroup';\nexport const FieldUserGroup = ({\n  userGroups,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('shared-fieldusergroup'),\n  name: FIELD_USER_GROUP_NAME,\n  label: i18n.t('User group'),\n  component: SingleSelectFieldFF,\n  options: userGroups,\n  validate: required && hasValue\n});\nFieldUserGroup.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldUserGroup.propTypes = {\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const USER_GROUPS_QUERY = {\n  userGroups: {\n    resource: 'userGroups',\n    params: {\n      paging: 'false'\n    }\n  }\n};\nexport const useReadUserGroupsQuery = () => useDataQuery(USER_GROUPS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldUserGroup } from './FieldUserGroup';\nimport { useReadUserGroupsQuery } from './useReadUserGroupsQuery';\nexport const FieldUserGroupWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadUserGroupsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      userGroups: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      disabled: true,\n      userGroups: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    userGroups\n  } = data.userGroups;\n  const options = userGroups.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldUserGroup, {\n    required: required,\n    userGroups: options,\n    validate: validate\n  });\n};\nFieldUserGroupWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldUserGroupWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport cx from 'classnames';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './FormRow.module.css';\nexport const FormRow = ({\n  children,\n  className\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.formRow, className),\n  \"data-test\": dataTest('shared-formrow')\n}, children);\nFormRow.propTypes = {\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ButtonStrip, Button } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './ListActions.module.css';\nexport const ListActions = ({\n  addLabel,\n  deleteLabel,\n  onAddClick,\n  onDeleteClick,\n  disableAdd,\n  disableDelete\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('shared-listactions')\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    \"data-test\": dataTest('shared-listactions-actions')\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onAddClick,\n    disabled: disableAdd,\n    dataTest: dataTest(\"shared-listactions-add\")\n  }, addLabel), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: onDeleteClick,\n    disabled: disableDelete,\n    dataTest: dataTest(\"shared-listactions-delete\")\n  }, deleteLabel)));\n};\nListActions.propTypes = {\n  addLabel: PropTypes.string.isRequired,\n  deleteLabel: PropTypes.string.isRequired,\n  onAddClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  disableAdd: PropTypes.bool,\n  disableDelete: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { dataTest } from '../../utils';\nimport styles from './NavigationItem.module.css';\n\nconst useIsItemActive = (path, exactMatch) => {\n  const routeMatch = useRouteMatch(path);\n  if (!routeMatch) return false;\n  if (exactMatch) return routeMatch.isExact;\n  return true;\n};\n\nexport const NavigationItem = ({\n  label,\n  path,\n  exactMatch\n}) => {\n  const history = useHistory();\n  const active = useIsItemActive(path, exactMatch);\n\n  const navigateToPath = () => history.push(path);\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    className: styles.item,\n    onClick: navigateToPath,\n    active: active,\n    label: label,\n    dataTest: dataTest('shared-navigationitem')\n  });\n};\nNavigationItem.defualtProps = {\n  exactMatch: false\n};\nNavigationItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  exactMatch: PropTypes.bool\n};","import { Menu } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../utils';\nimport { NavigationItem } from './NavigationItem';\nexport const Navigation = () => /*#__PURE__*/React.createElement(Menu, {\n  dataTest: dataTest('shared-navigation')\n}, /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/home\",\n  label: i18n.t('Home'),\n  exactMatch: true\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-gateway\",\n  label: i18n.t('Gateway configuration')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-command\",\n  label: i18n.t('Commands')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sent\",\n  label: i18n.t('Sent')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/received\",\n  label: i18n.t('Received')\n}));","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './PageHeadline.module.css';\nexport const PageHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h1\", {\n  className: styles.headline,\n  \"data-test\": dataTest('shared-pageheadline')\n}, children);\nPageHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './PageSubHeadline.module.css';\nexport const PageSubHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h2\", {\n  className: styles.subHeadline,\n  \"data-test\": dataTest('shared-pagesubheadline')\n}, children);\nPageSubHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './Paragraph.module.css';\nexport const Paragraph = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.paragraph,\n  \"data-test\": dataTest('shared-paragraph')\n}, children);\nParagraph.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { useQueryParams as _useQueryParams, StringParam, NumberParam, withDefault } from 'use-query-params';\nexport const useQueryParams = () => _useQueryParams({\n  status: withDefault(StringParam, 'ALL'),\n  phoneNumber: withDefault(StringParam, ''),\n  page: withDefault(NumberParam, 1),\n  pageSize: withDefault(NumberParam, 50)\n});","import { FinalForm } from '@dhis2/ui';\nimport { useContext } from 'react';\nimport i18n from '../../../locales';\nimport { AlertContext } from '../../components';\nconst {\n  FORM_ERROR\n} = FinalForm;\nexport const useSubmit = onSubmit => {\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  return (...args) => onSubmit(...args).catch(e => {\n    const message = e.message || i18n.t('No error message was provided'); // Notify on unexpected errors\n\n    addAlert({\n      type: 'critical',\n      message: e.message\n    });\n    return {\n      [FORM_ERROR]: message\n    };\n  });\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelect, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport { useQueryParams } from '../../hooks';\nimport styles from './Pagination.module.css';\nconst PAGE_LENGTHS = ['1', '2', '10', '20', '30', '40', '50', '100'];\nexport const Pagination = ({\n  page,\n  pageCount,\n  pageSize,\n  total\n}) => {\n  const firstItem = Math.min((page - 1) * pageSize + 1, total);\n  const lastItem = Math.min(firstItem + pageSize - 1, total);\n  const availablePages = Array.from({\n    length: pageCount\n  }, (_x, i) => (i + 1).toString());\n  const [, setQueryParams] = useQueryParams();\n\n  const setPage = page => {\n    setQueryParams({\n      page\n    });\n  };\n\n  const setPageSize = pageSize => {\n    setQueryParams({\n      pageSize,\n      page: 1\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, i18n.t('Show'), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    selected: pageSize.toString(),\n    onChange: ({\n      selected\n    }) => setPageSize(selected),\n    className: styles.select\n  }, PAGE_LENGTHS.map(length => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: length,\n    value: length,\n    label: length\n  }))), i18n.t('per page')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.summary\n  }, i18n.t('Viewing {{firstItem}}-{{lastItem}} of {{total}}', {\n    firstItem,\n    lastItem,\n    total\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonPrevious,\n    small: true,\n    disabled: page === 1,\n    onClick: () => setPage(page - 1)\n  }, i18n.t('Previous')), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Page')), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    inputWidth: \"600px\",\n    selected: page.toString(),\n    onChange: ({\n      selected\n    }) => setPage(selected),\n    className: styles.select\n  }, availablePages.map(availablePage => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: availablePage,\n    value: availablePage,\n    label: availablePage\n  }))), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('of {{pageCount}}', {\n    pageCount\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonNext,\n    small: true,\n    disabled: page === pageCount,\n    onClick: () => setPage(page + 1)\n  }, i18n.t('Next'))));\n};\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Checkbox, Table, TableBody, TableCell, TableCellHead, TableFoot, TableHead, TableRow, TableRowHead } from '@dhis2/ui';\nimport React from 'react';\nimport { Pagination } from '../pagination/Pagination';\nimport styles from './SmsTable.module.css';\nexport const SmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds,\n  columns,\n  rowRenderFn\n}) => {\n  const selectedIdSet = new Set(selectedIds);\n  const allSelected = messages.length > 0 && selectedIds.length === messages.length;\n\n  const toggle = id => {\n    if (selectedIdSet.has(id)) {\n      selectedIdSet.delete(id);\n    } else {\n      selectedIdSet.add(id);\n    }\n\n    setSelectedIds(Array.from(selectedIdSet));\n  };\n\n  const toggleAll = () => {\n    if (allSelected) {\n      setSelectedIds([]);\n    } else {\n      setSelectedIds(messages.map(({\n        id\n      }) => id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    disabled: messages.length === 0,\n    onChange: toggleAll,\n    checked: allSelected\n  })), columns.map(column => /*#__PURE__*/React.createElement(TableCellHead, {\n    key: column\n  }, column)))), /*#__PURE__*/React.createElement(TableBody, null, messages.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length),\n    className: styles.noResults\n  }, i18n.t('No SMSes to display'))) : messages.map(message => /*#__PURE__*/React.createElement(TableRow, {\n    key: message.id\n  }, /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedIdSet.has(message.id),\n    onChange: () => toggle(message.id)\n  })), rowRenderFn(message)))), /*#__PURE__*/React.createElement(TableFoot, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length)\n  }, /*#__PURE__*/React.createElement(Pagination, pager)))));\n};\nSmsTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  rowRenderFn: PropTypes.func.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './LayoutContainer.module.css';\nexport const LayoutContainer = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container,\n  \"data-test\": dataTest('shared-layoutcontainer')\n}, children);\nLayoutContainer.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutContent.module.css';\nexport const LayoutContent = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"main\", {\n  className: styles.content\n}, children);\nLayoutContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutSidebar.module.css';\nexport const LayoutSidebar = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.sidebar\n}, children);\nLayoutSidebar.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Navigation } from '../Navigation';\nimport { LayoutContainer } from './LayoutContainer';\nimport { LayoutContent } from './LayoutContent';\nimport { LayoutSidebar } from './LayoutSidebar';\nexport const TemplateSidebarNavContent = ({\n  children\n}) => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, children));\nTemplateSidebarNavContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Time.module.css';\nexport const Time = ({\n  time\n}) => {\n  const momentDate = moment(time);\n  const formatted = momentDate.format('HH:mm:ss');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.time\n  }, formatted);\n};\nTime.propTypes = {\n  time: PropTypes.string.isRequired\n};","import './locales';\nimport { CssVariables } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { AlertHandler } from './shared/components';\nexport const AppWrapper = ({\n  children\n}) => /*#__PURE__*/React.createElement(AlertHandler, null, /*#__PURE__*/React.createElement(CssVariables, {\n  spacers: true,\n  colors: true\n}), /*#__PURE__*/React.createElement(HashRouter, null, /*#__PURE__*/React.createElement(QueryParamProvider, {\n  ReactRouterRoute: Route\n}, children)));\nAppWrapper.propTypes = {\n  children: PropTypes.any.isRequired\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_COMMAND_NAME = 'name';\nexport const FieldCommandName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('smscommand-fieldcommandname'),\n  name: FIELD_COMMAND_NAME,\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm; // The \"s\" from \"set\" is not capitalized\n// as the property on the java-model\n// does not have a capitalized \"s\" either\n//\n// @TODO: Create issue to make it consistent\n\nexport const FIELD_DATA_SET_NAME = 'dataset';\nexport const FieldDataSet = ({\n  dataSets,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('smscommand-fielddataset'),\n  name: FIELD_DATA_SET_NAME,\n  label: i18n.t('Data set'),\n  component: SingleSelectFieldFF,\n  options: dataSets,\n  validate: hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldDataSet.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldDataSet.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const DATA_SETS_QUERY = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadDataSetsQuery = () => useDataQuery(DATA_SETS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldDataSet } from './FieldDataSet';\nimport { useReadDataSetsQuery } from './useReadDataSetsQuery';\nexport const FieldDataSetWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataSetsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      loading: true,\n      showLoadingStatus: true,\n      required: required,\n      dataSets: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    dataSets\n  } = data.dataSets;\n  const options = dataSets.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldDataSet, {\n    required: required,\n    dataSets: options,\n    validate: validate\n  });\n};\nFieldDataSetWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldDataSetWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import i18n from '../../locales';\nconst KEY_VALUE_PARSER = {\n  value: 'KEY_VALUE_PARSER',\n  label: i18n.t('Key value parser')\n}; // @TODO: This parser is not listed in the docs,\n//        but it's listed in the original source code\n//   -> docs: https://docs.dhis2.org/master/en/dhis2_developer_manual/web-api.html#sms-command-values\n//   -> code: https://github.com/dhis2/dhis2-core/blob/79bd77ecf52051b00e3ba96eb1aca4d0a6063ed1/dhis-2/dhis-web/dhis-web-maintenance/dhis-web-maintenance-mobile/src/main/webapp/dhis-web-maintenance-mobile/smscommand/edit-sms-command.vm#L188\n\nconst J2ME_PARSER = {\n  value: 'J2ME_PARSER',\n  label: i18n.t('J2ME parser')\n};\nconst ALERT_PARSER = {\n  value: 'ALERT_PARSER',\n  label: i18n.t('Alert parser')\n};\nconst UNREGISTERED_PARSER = {\n  value: 'UNREGISTERED_PARSER',\n  label: i18n.t('Unregistered parser')\n};\nconst TRACKED_ENTITY_REGISTRATION_PARSER = {\n  value: 'TRACKED_ENTITY_REGISTRATION_PARSER',\n  label: i18n.t('Tracked entity registration parser')\n};\nconst PROGRAM_STAGE_DATAENTRY_PARSER = {\n  value: 'PROGRAM_STAGE_DATAENTRY_PARSER',\n  label: i18n.t('Program stage data entry parser')\n};\nconst EVENT_REGISTRATION_PARSER = {\n  value: 'EVENT_REGISTRATION_PARSER',\n  label: i18n.t('Event registration parser')\n};\nexport const parserTypes = {\n  KEY_VALUE_PARSER,\n  J2ME_PARSER,\n  ALERT_PARSER,\n  UNREGISTERED_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  EVENT_REGISTRATION_PARSER\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport { parserTypes } from './parserTypes';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(parserTypes).sort((a, b) => {\n  if (a.label < b.label) {\n    return -1;\n  }\n\n  if (a.label > b.label) {\n    return 1;\n  }\n\n  return 0;\n});\nexport const FIELD_PARSER_NAME = 'parserType';\nexport const FieldParser = ({\n  disabled\n}) => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  disabled: disabled,\n  dataTest: dataTest('smscommand-fieldparser'),\n  name: FIELD_PARSER_NAME,\n  label: i18n.t('Parser'),\n  component: SingleSelectFieldFF,\n  options: options,\n  validate: hasValue\n});\nFieldParser.defaultProps = {\n  disabled: false\n};\nFieldParser.propTypes = {\n  disabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_NAME = 'program';\nexport const FieldProgram = ({\n  programs,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  error: !!errorText,\n  validationText: errorText,\n  disabled: disabled,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('smscommand-fieldprogram'),\n  name: FIELD_PROGRAM_NAME,\n  label: i18n.t('Program'),\n  component: SingleSelectFieldFF,\n  options: programs,\n  validate: required && hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldProgram.defaultProps = {\n  disabled: false,\n  errorText: '',\n  loading: false,\n  required: false\n};\nFieldProgram.propTypes = {\n  programs: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","const PROGRAMS_WITH_REGISTRATION = 'PROGRAMS_WITH_REGISTRATION';\nconst PROGRAMS_WITHOUT_REGISTRATION = 'PROGRAMS_WITHOUT_REGISTRATION';\nconst ALL_PROGRAMS = 'ALL_PROGRAMS';\nexport const programTypes = {\n  PROGRAMS_WITH_REGISTRATION,\n  PROGRAMS_WITHOUT_REGISTRATION,\n  ALL_PROGRAMS\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { programTypes } from './programTypes';\nconst PROGRAMS_QUERY = {\n  programs: {\n    resource: 'programs',\n    params: ({\n      registration\n    }) => {\n      const params = {\n        paging: 'false'\n      };\n\n      if (registration === programTypes.PROGRAMS_WITH_REGISTRATION) {\n        params.filter = 'programType:eq:WITH_REGISTRATION';\n      } else if (registration === programTypes.PROGRAMS_WITHOUT_REGISTRATION) {\n        params.filter = 'programType:eq:WITHOUT_REGISTRATION';\n      }\n\n      return params;\n    }\n  }\n};\nexport const useReadProgramsQuery = registration => useDataQuery(PROGRAMS_QUERY, {\n  variables: {\n    registration\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { FIELD_PROGRAM_NAME, FieldProgram } from './FieldProgram';\nimport { programTypes } from './programTypes';\nimport { useReadProgramsQuery } from './useReadProgramsQuery';\nconst {\n  ALL_PROGRAMS\n} = programTypes;\nconst {\n  useForm\n} = ReactFinalForm;\nexport const FieldProgramWithAutoLoad = ({\n  required,\n  registration\n}) => {\n  const form = useForm();\n  const validate = required ? hasValue : undefined;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramsQuery({\n    lazy: true\n  });\n  useEffect(() => {\n    const variables = {\n      registration\n    };\n    form.change(FIELD_PROGRAM_NAME, null);\n    refetch(variables);\n  }, [registration]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      programs: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    programs\n  } = data.programs;\n  const options = programs.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgram, {\n    required: required,\n    programs: options,\n    validate: validate\n  });\n};\nFieldProgramWithAutoLoad.defaultProps = {\n  required: false,\n  registration: ALL_PROGRAMS\n};\nFieldProgramWithAutoLoad.propTypes = {\n  registration: PropTypes.string,\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_STAGE_NAME = 'programStage';\nexport const FieldProgramStage = ({\n  programStages,\n  disabled,\n  loading,\n  initialValue,\n  required,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  component: SingleSelectFieldFF,\n  dataTest: dataTest('smscommand-fieldprogramstage'),\n  disabled: disabled,\n  error: !!errorText,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  iinitialValue: initialValue,\n  label: i18n.t('Program stage'),\n  loading: loading,\n  name: FIELD_PROGRAM_STAGE_NAME,\n  options: programStages,\n  parse: id => ({\n    id\n  }),\n  required: required,\n  validate: required && hasValue,\n  validationText: errorText\n});\nFieldProgramStage.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldProgramStage.propTypes = {\n  programStages: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  initialValue: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAM_STAGES_QUERY = {\n  programStages: {\n    resource: 'programStages',\n    params: ({\n      programId\n    }) => ({\n      paging: 'false',\n      filter: programId ? \"program.id:eq:\".concat(programId) : undefined\n    })\n  }\n};\nexport const useReadProgramStagesQuery = ({\n  programId,\n  lazy\n}) => useDataQuery(PROGRAM_STAGES_QUERY, {\n  variables: {\n    programId\n  },\n  lazy\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { parserTypes } from '../FieldParser';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStage } from './FieldProgramStage';\nimport { useReadProgramStagesQuery } from './useReadProgramStagesQuery';\nconst {\n  useForm\n} = ReactFinalForm;\nconst {\n  EVENT_REGISTRATION_PARSER\n} = parserTypes;\nexport const FieldProgramStageWithLoadingStates = ({\n  parserType,\n  programId,\n  disabled,\n  required\n}) => {\n  var _data$programStages2, _data$programStages3;\n\n  const form = useForm();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramStagesQuery({\n    lazy: true\n  });\n  const validate = required ? hasValue : undefined;\n  useEffect(() => {\n    if (programId) refetch({\n      programId\n    });\n  }, [programId]);\n  useEffect(() => {\n    var _data$programStages, _data$programStages$p;\n\n    const isEventRegistrationParser = parserType === EVENT_REGISTRATION_PARSER.value;\n    const programStageValueForEventRegistration = {\n      id: data === null || data === void 0 ? void 0 : (_data$programStages = data.programStages) === null || _data$programStages === void 0 ? void 0 : (_data$programStages$p = _data$programStages.programStages[0]) === null || _data$programStages$p === void 0 ? void 0 : _data$programStages$p.id\n    };\n    const initialValue = isEventRegistrationParser ? programStageValueForEventRegistration : undefined;\n    form.change(FIELD_PROGRAM_STAGE_NAME, initialValue);\n  }, [parserType, data === null || data === void 0 ? void 0 : (_data$programStages2 = data.programStages) === null || _data$programStages2 === void 0 ? void 0 : _data$programStages2.programStages]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      loading: true,\n      disabled: disabled,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      errorText: error.message,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (!programId || !data) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  const programStages = (data === null || data === void 0 ? void 0 : (_data$programStages3 = data.programStages) === null || _data$programStages3 === void 0 ? void 0 : _data$programStages3.programStages) || [];\n  const options = programStages.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: disabled,\n    required: required,\n    programStages: options\n  });\n};\nFieldProgramStageWithLoadingStates.defaultProps = {\n  disabled: false,\n  required: false\n};\nFieldProgramStageWithLoadingStates.propTypes = {\n  parserType: PropTypes.string.isRequired,\n  programId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataMutation } from '@dhis2/app-runtime';\nimport { parserTypes } from '../FieldParser';\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nexport const CREATE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'create',\n\n  /*\n   * @param {Object} args\n   * @param {string} args.parserType\n   * @param {string} args.name\n   * @param {string} args.dataset (id)\n   * @param {string} args.userGroup (id)\n   * @param {string} args.program (id)\n   * @param {string} args.programStage (id)\n   * @returns {Object}\n   */\n  data: ({\n    parserType,\n    name,\n    dataset,\n    userGroup,\n    program,\n    programStage\n  }) => {\n    if (parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value) {\n      return {\n        parserType,\n        name,\n        dataset\n      };\n    }\n\n    if (parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value) {\n      return {\n        parserType,\n        name,\n        userGroup: {\n          id: userGroup\n        }\n      };\n    }\n\n    if (parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program\n      };\n    }\n\n    if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program,\n        programStage\n      };\n    }\n\n    throw new Error(\"You provided an unrecognized parserType \\\"\".concat(parserType, \"\\\"\"));\n  }\n};\nexport const useCreateSmsCommandMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(CREATE_SMS_COMMAND_MUTATION, {\n  onComplete,\n  onError\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales';\nimport { FormRow, PageHeadline, FieldUserGroupWithAutoLoad, TemplateSidebarNavContent, dataTest } from '../../shared';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDataSetWithAutoLoad } from '../FieldDataSet';\nimport { FIELD_PARSER_NAME, FieldParser, parserTypes } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME, FieldProgramWithAutoLoad, programTypes } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStageWithLoadingStates } from '../FieldProgramStage';\nimport { useCreateSmsCommandMutation } from './useCreateSmsCommandMutation';\nimport styles from './ViewSmsCommandAdd.module.css';\nconst {\n  ALL_PROGRAMS,\n  PROGRAMS_WITH_REGISTRATION,\n  PROGRAMS_WITHOUT_REGISTRATION\n} = programTypes;\nconst {\n  Form,\n  useForm\n} = ReactFinalForm;\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\nexport const SMS_COMMAND_FORM_NEW_PATH = '/sms-config/new';\n\nconst useResetFormFields = () => {\n  const form = useForm();\n  const [prevValues, setPrevValues] = useState(form.getState().values);\n  useEffect(() => form.subscribe(({\n    values\n  }) => {\n    form.batch(() => {\n      const parserType = values[FIELD_PARSER_NAME];\n      const program = values[FIELD_PROGRAM_NAME];\n      const programStage = values[FIELD_PROGRAM_STAGE_NAME];\n      const prevProgram = prevValues[FIELD_PROGRAM_NAME];\n      const prevParserType = prevValues[FIELD_PARSER_NAME];\n      const programChanged = prevProgram && program !== prevProgram;\n      const parserTypeChanged = prevParserType && parserType !== prevParserType;\n\n      if ( // only unset program stage if one exists already\n      programStage && (programChanged || parserTypeChanged)) {\n        form.change(FIELD_PROGRAM_STAGE_NAME, null);\n      }\n    });\n    setPrevValues(values);\n  }, {\n    values: true\n  }), [prevValues]);\n}; // undefined = all, false = program.programType --> WITHOUT_REGISTRATION\n\n\nconst shouldProgramsBeWithRegistration = parserType => {\n  // EVENT_REGISTRATION uses event programs\n  if (parserType === EVENT_REGISTRATION_PARSER.value) {\n    return PROGRAMS_WITHOUT_REGISTRATION;\n  } // This is for programs of type tracker,\n  // which can have multiple program stages\n\n\n  if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value) {\n    return PROGRAMS_WITH_REGISTRATION;\n  } // Unrelated yet, but in case all program stages are need in the future\n\n\n  return ALL_PROGRAMS;\n};\n\nconst ActualForm = ({\n  handleSubmit,\n  submitting\n}) => {\n  // This is required to unset form fields that depend\n  // on the selected value of a previous field\n  useResetFormFields();\n  const history = useHistory();\n  const form = useForm();\n  const {\n    values\n  } = form.getState();\n  const parserType = values[FIELD_PARSER_NAME];\n  const program = values[FIELD_PROGRAM_NAME];\n  const showDataSetField = parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value;\n  const showUserGroupField = parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value;\n  const showProgramField = parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value;\n  const showProgramStageField = parserType === EVENT_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value;\n  const registration = shouldProgramsBeWithRegistration(parserType);\n  const disableProgramStage = parserType === EVENT_REGISTRATION_PARSER.value;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add command')), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, null)), showDataSetField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSetWithAutoLoad, {\n    required: true\n  })), showUserGroupField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroupWithAutoLoad, {\n    required: true\n  })), showProgramField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramWithAutoLoad, {\n    required: true,\n    registration: registration\n  })), showProgramStageField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageWithLoadingStates, {\n    disabled: disableProgramStage,\n    required: true,\n    programId: (program === null || program === void 0 ? void 0 : program.id) || '',\n    parserType: parserType,\n    helpText: disableProgramStage ? i18n.t('Automatically selected by selecting a program') : undefined\n  })), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting\n  }, i18n.t('Add command')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.goBack()\n  }, i18n.t('Cancel')))));\n};\n\nActualForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\nexport const ViewSmsCommandAdd = () => {\n  const history = useHistory();\n  const [createSmsCommand] = useCreateSmsCommandMutation({\n    onComplete: () => history.push('/sms-command')\n  });\n\n  const onSubmit = values => createSmsCommand(values);\n\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('smscommand-viewsmscommandadd')\n  }, /*#__PURE__*/React.createElement(Form, {\n    destroyOnUnregister: true,\n    onSubmit: onSubmit\n  }, ({\n    handleSubmit,\n    submitting\n  }) => /*#__PURE__*/React.createElement(ActualForm, {\n    handleSubmit: handleSubmit,\n    submitting: submitting\n  }))));\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_CONFIRM_MESSAGE_NAME = 'receivedMessage';\nexport const FieldConfirmMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldconfirmmessage'),\n  name: FIELD_CONFIRM_MESSAGE_NAME,\n  label: i18n.t('Confirm message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CircularLoader, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitting: true,\n  pristine: true\n};\nexport const SaveCommandButton = ({\n  enabled\n}) => {\n  const {\n    submitting,\n    pristine\n  } = useFormState({\n    subscription\n  });\n  const disabled = pristine || submitting;\n  return /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: !enabled && disabled,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, i18n.t('Save command'));\n};\nSaveCommandButton.defaultProps = {\n  enabled: false\n};\nSaveCommandButton.propTypes = {\n  /*\n   * This prop is used when fields, stored as array entries\n   * in the form state, are being removed while the form\n   * is still pristine.\n   *\n   * Form some reasons, RFF doesn't recognize this as a change\n   * and keeps the form state's pristine value `true`\n   */\n  enabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow } from '../../shared';\nimport { SaveCommandButton } from './SaveCommandButton';\nexport const FormActions = ({\n  enableSubmit,\n  onCancel\n}) => /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(SaveCommandButton, {\n  enabled: enableSubmit\n}), /*#__PURE__*/React.createElement(Button, {\n  onClick: onCancel\n}, i18n.t('Cancel'))));\nFormActions.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  enableSubmit: PropTypes.bool\n};","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow } from '../../shared';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitError: true,\n  hasSubmitErrors: true\n};\nexport const SubmitErrors = () => {\n  const {\n    submitError,\n    hasSubmitErrors\n  } = useFormState({\n    subscription\n  });\n  if (!hasSubmitErrors) return null;\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst submitting the form')\n  }, submitError));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { FormRow, FieldUserGroup, dataTest } from '../../shared';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nexport const Form = ({\n  userGroups,\n  handleSubmit,\n  pristine,\n  onCancel\n}) => /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  \"data-test\": dataTest('smscommand-formalertparser-form')\n}, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n  disabled: true\n})), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n  disabled: true,\n  userGroups: userGroups\n})), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n  onCancel: () => onCancel(pristine)\n}));\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst ALERT_DATA_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    type: 'update',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useAlertDataQuery = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(ALERT_DATA_QUERY, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared';\nconst updateAlertParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  partial: true,\n  data: ({\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  }) => ({\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  })\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateAlertParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { ContentLoading, ContentLoadingError } from '../../shared';\nimport { createInitialValues } from './createInitialValues';\nimport { createUserGroupOptions } from './createUserGroupOptions';\nimport { Form as FormComponent } from './Form';\nimport { useAlertDataQuery } from './useAlertDataQuery';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormAlertParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useAlertDataQuery(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const initialValues = createInitialValues(data.smsCommand);\n  const userGroups = createUserGroupOptions(data.smsCommand.userGroup);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    userGroups: userGroups,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    onCancel: onCancel\n  }));\n};\nFormAlertParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","export const createInitialValues = ({\n  name,\n  parserType,\n  receivedMessage,\n  userGroup\n}) => ({\n  name,\n  parserType,\n  receivedMessage,\n  userGroup: userGroup.id\n});","export const createUserGroupOptions = userGroup => [{\n  value: userGroup.id,\n  label: userGroup.name\n}];","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_DEFAULT_MESSAGE_NAME = 'defaultMessage';\nexport const FieldDefaultMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fielddefaultmessage'),\n  name: FIELD_DEFAULT_MESSAGE_NAME,\n  label: i18n.t('Reply message if no codes are sent (only the command)'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME = 'moreThanOneOrgUnitMessage';\nexport const FieldMoreThanOneOrgUnitMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldmorethanoneorgunitmessage'),\n  name: FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME,\n  label: i18n.t('More than one orgunit message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_NO_USER_MESSAGE_NAME = 'noUserMessage';\nexport const FieldNoUserMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldnousermessage'),\n  name: FIELD_NO_USER_MESSAGE_NAME,\n  label: i18n.t('No user message'),\n  component: TextAreaFieldFF\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SEPARATOR_NAME = 'separator';\nexport const FieldSeparator = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldseparator'),\n  name: FIELD_SEPARATOR_NAME,\n  label: i18n.t('Field separator'),\n  component: InputFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  values: true\n};\nexport const FIELD_SMS_CODES_NAME = 'smsCodes';\nexport const FieldSmsCode = ({\n  id,\n  displayName,\n  valueType\n}) => {\n  const {\n    values\n  } = useFormState({\n    subscription\n  });\n  const smsCode = values[FIELD_SMS_CODES_NAME][id];\n  /**\n   * This uses a dynamic, nested name for storing the field value in the\n   * form state. You can't submit the data as is though, since the backend\n   * expects a different shape. So I was thinking of dealing with that\n   * in the submit handler. Since you have the ids and the field value\n   * you should be able to transform it into any shape you need.\n   */\n\n  return /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommand-fieldsmscode'),\n    name: \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(id),\n    label: displayName,\n    component: InputFieldFF,\n    format: code => (code === null || code === void 0 ? void 0 : code.code) || '',\n    parse: nextCode => !smsCode ? {\n      code: nextCode,\n      trackedEntityAttribute: {\n        id,\n        displayName,\n        valueType\n      }\n    } : { ...smsCode,\n      code: nextCode\n    }\n  });\n};\nFieldSmsCode.propTypes = {\n  displayName: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  valueType: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSmsCodeDataElement = ({\n  dataElement,\n  smsCodes\n}) => {\n  return /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smscommand-fieldsmscodedataelement'),\n    key: dataElement.id,\n    name: \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElement.id),\n    label: dataElement.displayName,\n    component: InputFieldFF,\n    format: value => (value === null || value === void 0 ? void 0 : value.code) || null,\n    parse: code => {\n      const currentValue = smsCodes[dataElement.id];\n      const newValue = { ...currentValue,\n        code: code || '',\n        dataElement\n      };\n      return newValue;\n    }\n  });\n};\nFieldSmsCodeDataElement.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  smsCodes: PropTypes.objectOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    code: PropTypes.string,\n    compulsory: PropTypes.bool,\n    optionId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }))\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SUCCESS_MESSAGE_NAME = 'successMessage';\nexport const FieldSuccessMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldsuccessmessage'),\n  name: FIELD_SUCCESS_MESSAGE_NAME,\n  label: i18n.t('Success message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_WRONG_FORMAT_MESSAGE_NAME = 'wrongFormatMessage';\nexport const FieldWrongFormatMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldwrongformatmessage'),\n  name: FIELD_WRONG_FORMAT_MESSAGE_NAME,\n  label: i18n.t('Wrong format message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldProgramStage } from '../FieldProgramStage';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FieldSmsCodeDataElement } from '../FieldSmsCodeDataElement';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const Form = ({\n  handleSubmit,\n  onCancel,\n  programStageDataElements,\n  selectedProgramOption,\n  selectedProgramStageOption\n}) => {\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formeventregistrationparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, programStageDataElements.map(({\n    dataElement\n  }) => /*#__PURE__*/React.createElement(FieldSmsCodeDataElement, {\n    key: dataElement.id,\n    dataElement: dataElement,\n    smsCodes: values[FIELD_SMS_CODES_NAME]\n  }))), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst {\n  EVENT_REGISTRATION_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: EVENT_REGISTRATION_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[id,dataElement[id,displayName]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandQuery = id => useDataQuery(READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateEventRegistrationParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const program = command[FIELD_PROGRAM_NAME];\n    const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]);\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_PROGRAM_NAME]: program,\n      [FIELD_PROGRAM_STAGE_NAME]: programStage,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateEventRegistrationParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { Form as FormComponent } from './Form';\nimport { getInitialFormState } from './getInitialFormState';\nimport { useCommandQuery } from './useCommandQuery';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormEventRegistrationParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    error,\n    data = {}\n  } = useCommandQuery(commandId);\n  const {\n    smsCommand: command\n  } = data;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (error) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  const programStageDataElements = command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    initialValues: initialValues,\n    onSubmit: updateCommand\n  }, ({\n    handleSubmit\n  }) => {\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      handleSubmit: handleSubmit,\n      selectedProgramOption: selectedProgramOption,\n      selectedProgramStageOption: selectedProgramStageOption,\n      programStageDataElements: programStageDataElements,\n      onCancel: onCancel\n    });\n  });\n};\nFormEventRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, Field as UiField, InputFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport styles from './FieldSpecialCharacter.module.css';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nexport const FIELD_SPECIAL_CHARS_NAME = 'specialCharacters';\nexport const FieldSpecialCharacter = ({\n  index,\n  onSpecialKeyRemoved\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeSpecialKeyFieldsFromFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars.slice(0, index), ...specialChars.slice(index + 1)];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n    onSpecialKeyRemoved();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-name'),\n    label: i18n.t('Special character name'),\n    name: \"\".concat(FIELD_SPECIAL_CHARS_NAME, \"[\").concat(index, \"].name\"),\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-value'),\n    label: i18n.t('Special character value'),\n    name: \"\".concat(FIELD_SPECIAL_CHARS_NAME, \"[\").concat(index, \"].value\"),\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(UiField, {\n    label: \"\\xA0\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: removeSpecialKeyFieldsFromFormState,\n    dataTest: dataTest('smscommand-fieldspecialcharacter-remove')\n  }, i18n.t('Remove'))));\n};\nFieldSpecialCharacter.propTypes = {\n  index: PropTypes.number.isRequired,\n  onSpecialKeyRemoved: PropTypes.func.isRequired\n};","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, dataTest } from '../../shared';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const AddSpecialCharacters = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addSpecialKeyFieldsToFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars, {\n      name: '',\n      value: ''\n    }];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n  };\n\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: addSpecialKeyFieldsToFormState,\n    dataTest: dataTest('smscommand-addspecialcharacter')\n  }, i18n.t('Add special character')));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport styles from './CurrentFormula.module.css';\nexport const CurrentFormula = ({\n  code,\n  formula,\n  formulaDataElementName,\n  loading,\n  operator\n}) => {\n  if (!code || !formula || !formulaDataElementName || !operator) return null;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWords,\n    \"data-test\": dataTest('smscommand-fielddataelementwithcategoryoptioncombo-currentformula')\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWordsLabel\n  }, i18n.t('Formula'), \":\"), loading && i18n.t('Loading formula'), !loading && \"\".concat(code, \" \").concat(operator, \" \").concat(formulaDataElementName));\n};\nCurrentFormula.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  code: PropTypes.string,\n  formula: PropTypes.string,\n  formulaDataElementName: PropTypes.string,\n  operator: PropTypes.string\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport { CurrentFormula } from './CurrentFormula';\nconst {\n  useField\n} = ReactFinalForm;\nconst DATA_ELEMENTS_QUERY = {\n  dataElement: {\n    resource: 'dataElements',\n    id: ({\n      id\n    }) => id,\n    params: () => ({\n      fields: 'displayName'\n    })\n  }\n};\nexport const AddFormulaButton = ({\n  baseName,\n  onClick,\n  disabled\n}) => {\n  const engine = useDataEngine();\n  const [loading, setLoading] = useState(false);\n  const [formulaDataElementName, setFormulaDataElementName] = useState('');\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const {\n    formula,\n    code\n  } = smsCode;\n  const operator = formula && formula[0];\n  const dataElementId = formula && formula.slice(1);\n  useEffect(() => {\n    if (dataElementId) {\n      setLoading(true);\n      engine.query(DATA_ELEMENTS_QUERY, {\n        variables: {\n          id: dataElementId\n        }\n      }).then(response => {\n        const {\n          displayName\n        } = response.dataElement;\n        setFormulaDataElementName(displayName);\n      }).finally(() => setLoading(false));\n    }\n  }, [dataElementId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CurrentFormula, {\n    code: code,\n    formula: formula,\n    formulaDataElementName: formulaDataElementName,\n    loading: loading,\n    operator: operator\n  }), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: onClick,\n    disabled: disabled,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncombo-addformulabutton')\n  }, formula ? i18n.t('Edit formula') : i18n.t('Add formula')));\n};\nAddFormulaButton.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react';\nexport const DATA_ELEMENTS_QUERY = {\n  dataSet: {\n    resource: 'dataSets',\n    id: ({\n      id\n    }) => id,\n    params: ({\n      filter\n    }) => ({\n      filter,\n      fields: 'dataSetElements[dataElement[id,code,displayName]]'\n    })\n  }\n};\nexport const queryDataElementsOfDataSet = (engine, variables) => engine.query(DATA_ELEMENTS_QUERY, {\n  variables\n}).then(data => {\n  const {\n    dataSet\n  } = data;\n  const {\n    dataSetElements\n  } = dataSet;\n  const formatted = dataSetElements.map(({\n    dataElement\n  }) => dataElement);\n  formatted.sort((left, right) => {\n    const leftDisplayName = left.displayName;\n    const rightDisplayName = right.displayName;\n\n    if (leftDisplayName === rightDisplayName) {\n      return 0;\n    }\n\n    if (leftDisplayName < rightDisplayName) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return formatted;\n});\nexport const useReadDataElementsOfDataSetQuery = (dataSetId, filter) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return queryDataElementsOfDataSet(engine, variables).then(setData).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id: dataSetId,\n      filter\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, CircularLoader, Modal, ModalActions, ModalContent, ModalTitle, NoticeBox, ReactFinalForm, SingleSelectFieldFF, hasValue } from '@dhis2/ui';\nimport React, { useMemo } from 'react';\nimport i18n from '../../locales';\nimport { FormRow, dataTest } from '../../shared';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { useReadDataElementsOfDataSetQuery } from './useReadDataElementsOfDataSetQuery';\nconst {\n  Field,\n  Form,\n  useForm,\n  useField\n} = ReactFinalForm;\nexport const FormulaModalForm = ({\n  baseName,\n  combo,\n  targetFieldName,\n  onClose\n}) => {\n  const form = useForm();\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const dataSetId = useField(FIELD_DATA_SET_NAME, {\n    subscription: {\n      value: true\n    }\n  }).input.value.id;\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataElementsOfDataSetQuery(dataSetId); // Using memo so changing the form does not change the \"initialValues\"\n  // which would cause the form to update unnecessarily\n\n  const initialFormula = smsCode.formula;\n  const initialOperator = useMemo(() => initialFormula ? initialFormula[0] : '+', []);\n  const initialDataElementCode = useMemo(() => initialFormula ? initialFormula.slice(1) : '', []);\n  const initialValues = {\n    operator: initialOperator,\n    dataElementCode: initialDataElementCode\n  };\n  const modalDataTest = dataTest('smscommand-fielddataelementwithcategoryoptioncombo-formulamodalform');\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Modal, {\n      dataTest: modalDataTest\n    }, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const options = data.map(dataElement => {\n    const {\n      id,\n      displayName\n    } = dataElement;\n    return {\n      value: id,\n      label: displayName\n    };\n  });\n\n  const onSubmit = values => {\n    const newFormula = \"\".concat(values.operator).concat(values.dataElementCode);\n    form.change(targetFieldName, newFormula);\n    onClose();\n  };\n\n  const onRemove = () => {\n    form.change(targetFieldName, null);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(Modal, {\n    dataTest: modalDataTest\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.stopPropagation();\n      handleSubmit(event);\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Formula for {{combo}}', {\n    combo\n  })), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-dataelement'),\n    name: \"dataElementCode\",\n    label: i18n.t('Data element'),\n    component: SingleSelectFieldFF,\n    options: options,\n    validate: hasValue\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-operator'),\n    name: \"operator\",\n    label: i18n.t('formula operator'),\n    component: SingleSelectFieldFF,\n    initialValue: \"+\",\n    options: [{\n      value: '+',\n      label: '+'\n    }, {\n      value: '-',\n      label: '-'\n    }]\n  })), error && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving')\n  }, error.message))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRemove,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-remove')\n  }, i18n.t('Remove')), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    dataTest: dataTest('smscommand-fielddataelementwithcategoryoptioncomboformula-save')\n  }, i18n.t('Save')))))));\n};\nFormulaModalForm.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  combo: PropTypes.string.isRequired,\n  targetFieldName: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { AddFormulaButton } from './AddFormulaButton';\nimport styles from './FieldDataElementWithCategoryOptionCombo.module.css';\nimport { FormulaModalForm } from './FormulaModalForm';\n\nconst DE_COC_toFormName = (dataElement, categoryOptionCombo) => {\n  const dataElementId = dataElement.id;\n  const cocCode = categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.code;\n  const isDefault = cocCode === 'default';\n\n  if (!cocCode || isDefault) {\n    return \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElementId);\n  }\n\n  return \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElementId, \"-\").concat(cocCode);\n};\n\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldDataElementWithCategoryOptionCombo = ({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  const [showFormula, setShowFormula] = useState(false);\n  const label = categoryOptionCombo ? \"\".concat(dataElement.displayName, \" \").concat(categoryOptionCombo.displayName) : \"\".concat(dataElement.displayName, \" \").concat(i18n.t('default'));\n  const baseName = DE_COC_toFormName(dataElement, categoryOptionCombo);\n  const name = \"\".concat(baseName, \".code\");\n  const formulaName = \"\".concat(baseName, \".formula\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smscommand-fielddataelementwithcategoryoptioncombo')\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: styles.field,\n    label: label,\n    name: name,\n    subscription: {\n      value: true,\n      error: true,\n      invalid: true,\n      touched: true\n    }\n  }, ({\n    input,\n    meta,\n    ...rest\n  }) => {\n    const code = input.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputFieldFF, _extends({}, rest, {\n      className: styles.codeField,\n      input: input,\n      meta: meta,\n      error: !!meta.error\n    })), /*#__PURE__*/React.createElement(AddFormulaButton, {\n      disabled: !code,\n      baseName: baseName,\n      formulaFieldName: formulaName,\n      onClick: () => setShowFormula(true)\n    }), showFormula && /*#__PURE__*/React.createElement(FormulaModalForm, {\n      baseName: baseName,\n      combo: label,\n      targetFieldName: formulaName,\n      onClose: () => setShowFormula(false)\n    }));\n  }));\n};\nFieldDataElementWithCategoryOptionCombo.defaultProps = {\n  categoryOptionCombo: null,\n  formula: ''\n};\nFieldDataElementWithCategoryOptionCombo.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  categoryOptionCombo: PropTypes.shape({\n    code: PropTypes.string.isRequired,\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n};","import i18n from '../../locales';\nconst ALL_DATAVALUE = {\n  value: 'ALL_DATAVALUE',\n  label: i18n.t('Receive all data values')\n};\nconst AT_LEAST_ONE_DATAVALUE = {\n  value: 'AT_LEAST_ONE_DATAVALUE',\n  label: i18n.t('Receive at least one data value')\n};\nconst DO_NOT_MARK_COMPLETE = {\n  value: 'DO_NOT_MARK_COMPLETE',\n  label: i18n.t('Do not mark as complete')\n};\nexport const completenessMethods = {\n  ALL_DATAVALUE,\n  AT_LEAST_ONE_DATAVALUE,\n  DO_NOT_MARK_COMPLETE\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared/utils';\nimport { completenessMethods } from './completenessMethods';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(completenessMethods);\nexport const FIELD_COMPLETENESS_METHOD_NAME = 'completenessMethod';\nexport const FieldCompletenessMethod = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommand-fieldcompletenessmethod'),\n  name: FIELD_COMPLETENESS_METHOD_NAME,\n  label: i18n.t('Completeness method'),\n  component: SingleSelectFieldFF,\n  options: options\n});","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow } from '../../shared';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod';\nconst {\n  ALL_DATAVALUE,\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  useField\n} = ReactFinalForm;\nexport const CompletenessMessage = () => {\n  const {\n    input\n  } = useField(FIELD_COMPLETENESS_METHOD_NAME, {\n    subscription: {\n      value: true\n    }\n  });\n  const completenessMethod = input.value;\n  const title = i18n.t('Required values notice');\n\n  if (completenessMethod === ALL_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(\"Make sure all SMS short codes are provided when completeness method \\\"\".concat(ALL_DATAVALUE.label, \"\\\" is chosen, otherwise received messages will not be processed.\"))));\n  }\n\n  if (completenessMethod === AT_LEAST_ONE_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(\"Make sure at least one SMS short code is provided when completeness method \\\"\".concat(AT_LEAST_ONE_DATAVALUE.label, \"\\\" is chosen, otherwise received messages will not be processed.\"))));\n  }\n\n  return null;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared';\nimport { FieldDataElementWithCategoryOptionCombo } from '../FieldDataElementWithCategoryOptionCombo';\nimport { CompletenessMessage } from './CompletenessMessage';\nimport styles from './DataElementTimesCategoryOptionCombos.module.css';\nexport const DataElementTimesCategoryOptionCombos = ({\n  DE_COC_combinations\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommand-dataelementtimescategoryoptioncombos')\n}, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), /*#__PURE__*/React.createElement(CompletenessMessage, null), /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommand-dataelementtimescategoryoptioncombos-rows')\n}, DE_COC_combinations.map(({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  return /*#__PURE__*/React.createElement(FormRow, {\n    className: styles.formRow,\n    key: dataElement.id + (categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.id)\n  }, /*#__PURE__*/React.createElement(FieldDataElementWithCategoryOptionCombo, {\n    dataElement: dataElement,\n    categoryOptionCombo: categoryOptionCombo\n  }));\n})));\nDataElementTimesCategoryOptionCombos.defaultProps = {\n  allRequired: false\n};\nDataElementTimesCategoryOptionCombos.propTypes = {\n  DE_COC_combinations: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired\n};","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME = 'currentPeriodUsedForReporting';\nexport const FieldUseCurrentPeriodForReporting = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smscommand-fieldusecurrentperiodforreporting'),\n  name: FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME,\n  label: i18n.t('Use current period for reporting'),\n  component: CheckboxFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod';\nimport { FieldDataSet } from '../FieldDataSet';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const Form = ({\n  DE_COC_combination_data,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formj2meparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst {\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  J2ME_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = J2ME_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, {\n    code,\n    compulsory,\n    formula,\n    optionId,\n    dataElement\n  }) => {\n    const key = optionId < 10 ? dataElement.id : \"\".concat(dataElement.id, \"-\").concat(optionId);\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","export const getSmsCodeDuplicates = smsCodes => {\n  const duplicates = smsCodes.reduce((curDuplicates, smsCode, index) => {\n    const [name, code] = smsCode;\n    const errorAlreadyPresent = curDuplicates.includes(name);\n\n    if (errorAlreadyPresent) {\n      return curDuplicates;\n    }\n\n    const potentialDuplicates = smsCodes.filter( // eslint-disable-next-line no-unused-vars\n    ([_, curCode], curIndex) => {\n      return curCode.code === code.code && curIndex !== index;\n    });\n    const noDuplicates = !potentialDuplicates.length;\n\n    if (noDuplicates) {\n      return curDuplicates;\n    }\n\n    const newlyFoundDuplicates = potentialDuplicates.reduce((curWithCodeDuplicates, [curName]) => {\n      return [...curWithCodeDuplicates, curName];\n    }, [name]);\n    return [...curDuplicates, ...newlyFoundDuplicates];\n  }, []);\n  return duplicates;\n};","import i18n from '../../locales';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { getSmsCodeDuplicates } from '../getSmsCodeDuplicates';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const paging = 'false';\n      const fields = ['*', \"dataset [\\n                    id,\\n                    displayName,\\n                    dataSetElements [\\n                        dataElement [\\n                            id,\\n                            displayName,\\n                            categoryCombo [\\n                                categoryOptionCombos [\\n                                    id,\\n                                    displayName,\\n                                    code\\n                                ]\\n                            ]\\n                        ]\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, '')),\n        paging\n      };\n    }\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateJ2meParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.entries(command[FIELD_SMS_CODES_NAME]).map(([id, {\n      code,\n      formula,\n      compulsory,\n      optionId\n    }]) => {\n      const [dataElementId] = id.split('-');\n      const formattedSmsCode = {\n        code,\n        compulsory,\n        dataElement: {\n          id: dataElementId\n        }\n      };\n\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateJ2meParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { Form as FormComponent } from './Form';\nimport { getInitialFormState } from './getInitialFormState';\nimport { globalValidate } from './globalValidate';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormJ2meParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombo;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars === null || specialChars === void 0 ? void 0 : specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nFormJ2meParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../locales';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod';\nimport { FieldDataSet } from '../FieldDataSet';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const Form = ({\n  DE_COC_combination_data,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formkeyvalueparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME, completenessMethods } from '../FieldCompletenessMethod';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst {\n  AT_LEAST_ONE_DATAVALUE\n} = completenessMethods;\nconst {\n  KEY_VALUE_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = KEY_VALUE_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, {\n    code,\n    compulsory,\n    formula,\n    optionId,\n    dataElement\n  }) => {\n    const key = optionId < 10 ? dataElement.id : \"\".concat(dataElement.id, \"-\").concat(optionId);\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","import i18n from '../../locales';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { getSmsCodeDuplicates } from '../getSmsCodeDuplicates';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const paging = 'false';\n      const fields = ['*', \"dataset [\\n                    id,\\n                    displayName,\\n                    dataSetElements [\\n                        dataElement [\\n                            id,\\n                            displayName,\\n                            categoryCombo [\\n                                categoryOptionCombos [\\n                                    id,\\n                                    displayName,\\n                                    code\\n                                ]\\n                            ]\\n                        ]\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, '')),\n        paging\n      };\n    }\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateKeyValueParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.entries(command[FIELD_SMS_CODES_NAME]).map(([id, {\n      code,\n      formula,\n      compulsory,\n      optionId\n    }]) => {\n      const [dataElementId] = id.split('-');\n      const formattedSmsCode = {\n        code,\n        compulsory,\n        dataElement: {\n          id: dataElementId\n        }\n      };\n\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      id\n    };\n    return engine.mutate(updateKeyValueParserMutation, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest as createDataTestValue } from '../../shared';\nimport { FIELD_DATA_SET_NAME } from '../FieldDataSet';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { Form as FormComponent } from './Form';\nimport { getInitialFormState } from './getInitialFormState';\nimport { globalValidate } from './globalValidate';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormKeyValueParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const dataTest = createDataTestValue('smscommandkeyvalueparser-commandeditj2meparserform');\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombo;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars === null || specialChars === void 0 ? void 0 : specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dataTest: dataTest,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nFormKeyValueParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldProgramStage } from '../FieldProgramStage';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FieldSmsCodeDataElement } from '../FieldSmsCodeDataElement';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = ({\n  handleSubmit,\n  selectedProgramOption,\n  programStageDataElements,\n  selectedProgramStageOption,\n  onCancel\n}) => {\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditprogramstagedataentryparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, programStageDataElements.map(({\n    dataElement\n  }) => /*#__PURE__*/React.createElement(FieldSmsCodeDataElement, {\n    key: dataElement.id,\n    dataElement: dataElement,\n    smsCodes: values[FIELD_SMS_CODES_NAME]\n  }))), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst {\n  PROGRAM_STAGE_DATAENTRY_PARSER\n} = parserTypes;\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: PROGRAM_STAGE_DATAENTRY_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[dataElement[id,displayName]]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandData = programStageId => useDataQuery(READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY, {\n  variables: {\n    id: programStageId\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => ({ ...params,\n    [FIELD_SMS_CODES_NAME]: Object.values(params[FIELD_SMS_CODES_NAME])\n  })\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { ContentLoading, ContentLoadingError } from '../../shared';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormProgramStageDataEntryParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const command = data === null || data === void 0 ? void 0 : data.smsCommand;\n  const programStageDataElements = command === null || command === void 0 ? void 0 : command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    handleSubmit: handleSubmit,\n    selectedProgramOption: selectedProgramOption,\n    programStageDataElements: programStageDataElements,\n    selectedProgramStageOption: selectedProgramStageOption,\n    onCancel: onCancel\n  }));\n};\nFormProgramStageDataEntryParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FieldSmsCode } from '../FieldSmsCode';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const Form = ({\n  handleSubmit,\n  dynamicFields,\n  selectedProgramOption,\n  onCancel\n}) => {\n  const {\n    pristine\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommand-formtrackedentityregistrationparser-form')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), dynamicFields.map(dynamicField => {\n    // I assume this should switch field types based on `valueType`\n    // which can be 'TEXT', 'NUMBER', etc. Currently this renders\n    // a regular input for everything.\n    return /*#__PURE__*/React.createElement(FormRow, {\n      key: dynamicField.id\n    }, /*#__PURE__*/React.createElement(FieldSmsCode, {\n      id: dynamicField.id,\n      displayName: dynamicField.displayName,\n      valueType: dynamicField.valueType\n    }));\n  }), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nForm.propTypes = {\n  dynamicFields: PropTypes.arrayOf(PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    valueType: PropTypes.string.isRequired\n  })).isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const fields = ['name', 'parserType', 'separator', 'defaultMessage', 'wrongFormatMessage', 'noUserMessage', 'moreThanOneOrgUnitMessage', 'successMessage', // The queries below should be reduced to only the data we need\n      \"program [\\n                    id,\\n                    displayName,\\n                    programTrackedEntityAttributes [\\n                        trackedEntityAttribute [\\n                            :all,\\n                            id,\\n                            displayName\\n                        ]\\n                    ]\\n                ]\", \"smsCodes [\\n                    :all,\\n                    trackedEntityAttribute [\\n                        id,\\n                        displayName,\\n                        valueType\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, ''))\n      };\n    }\n  }\n};\nexport const useCommandData = id => useDataQuery(query, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => ({ ...params,\n    [FIELD_SMS_CODES_NAME]: Object.values(params[FIELD_SMS_CODES_NAME])\n  })\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { ContentLoading, ContentLoadingError } from '../../shared';\nimport { Form as FormComponent } from './Form';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormTrackedEntityRegistrationParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes: smsCodesOriginal\n  } = data.smsCommand;\n  const smsCodes = smsCodesOriginal.reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.trackedEntityAttribute.id]: smsCode\n  }), {});\n  const initialValues = {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes\n  };\n  const selectedProgramOption = {\n    value: program.id,\n    label: program.displayName\n  };\n  /**\n   * Create usable data for the dynamic fields\n   */\n  // The tracked entity attributes here have the right order for the fields\n\n  const trackedEntityAttributes = program.programTrackedEntityAttributes.map(({\n    trackedEntityAttribute\n  }) => trackedEntityAttribute); // Creating an array with only the data we need to render our dynamic form fields\n\n  const dynamicFields = trackedEntityAttributes.map(trackedEntityAttribute => {\n    const {\n      id,\n      displayName,\n      valueType\n    } = trackedEntityAttribute;\n    const merged = {\n      id,\n      displayName,\n      valueType\n    };\n    const smsCode = smsCodes[id];\n\n    if (smsCode) {\n      // This contains the actual value of the field\n      merged.initialValue = smsCode.code;\n    }\n\n    return merged;\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    dynamicFields: dynamicFields,\n    handleSubmit: handleSubmit,\n    selectedProgramOption: selectedProgramOption,\n    onCancel: onCancel\n  }));\n};\nFormTrackedEntityRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { FormRow, FieldUserGroup, dataTest } from '../../shared';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nexport const Form = ({\n  handleSubmit,\n  userGroups,\n  pristine,\n  onCancel\n}) => /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  \"data-test\": dataTest('commands-commandunregisteredparserform')\n}, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n  disabled: true\n})), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n  disabled: true,\n  userGroups: userGroups\n})), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n  onCancel: () => onCancel(pristine)\n}));\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useCommandData = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(query, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../shared';\nexport const UPDATE_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  partial: true,\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => params\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(UPDATE_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { ContentLoading, ContentLoadingError } from '../../shared';\nimport { Form as FormComponent } from './Form';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormUnregisteredParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  } = data.smsCommand;\n  const initialValues = {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup: userGroup.id\n  };\n  const userGroups = [{\n    value: userGroup.id,\n    label: userGroup.name\n  }];\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    handleSubmit: handleSubmit,\n    userGroups: userGroups,\n    pristine: pristine,\n    onCancel: onCancel\n  }));\n};\nFormUnregisteredParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_PARSER_TYPE_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: 'parserType',\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandParserTypeQuery = id => useDataQuery(READ_SMS_COMMAND_PARSER_TYPE_QUERY, {\n  variables: {\n    id\n  }\n});","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../locales';\nimport { CancelDialog, PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared';\nimport { FIELD_PARSER_NAME, parserTypes } from '../FieldParser';\nimport { FormAlertParser } from '../FormAlertParser';\nimport { FormEventRegistrationParser } from '../FormEventRegistrationParser';\nimport { FormJ2meParser } from '../FormJ2meParser';\nimport { FormKeyValueParser } from '../FormKeyValueParser';\nimport { FormProgramStageDataEntryParser } from '../FormProgramStageDataEntryParser';\nimport { FormTrackedEntityRegistrationParser } from '../FormTrackedEntityRegistrationParser';\nimport { FormUnregisteredParser } from '../FormUnregisteredParser';\nimport { useReadSmsCommandParserTypeQuery } from './useReadSmsCommandParserTypeQuery';\nimport styles from './ViewSmsCommandEdit.module.css';\nexport const SMS_COMMAND_FORM_EDIT_PATH_STATIC = '/sms-config/edit';\nexport const SMS_COMMAND_FORM_EDIT_PATH = \"\".concat(SMS_COMMAND_FORM_EDIT_PATH_STATIC, \"/:id\");\nconst {\n  ALERT_PARSER,\n  EVENT_REGISTRATION_PARSER,\n  J2ME_PARSER,\n  KEY_VALUE_PARSER,\n  PROGRAM_STAGE_DATAENTRY_PARSER,\n  TRACKED_ENTITY_REGISTRATION_PARSER,\n  UNREGISTERED_PARSER\n} = parserTypes;\n\nconst isParserType = (parserType, parser) => parserType === parser.value;\n\nconst getSmsCommandEditFormComponent = parserType => {\n  const isParser = isParserType.bind(null, parserType);\n\n  if (!parserType) {\n    return null;\n  }\n\n  if (isParser(KEY_VALUE_PARSER)) {\n    return FormKeyValueParser;\n  }\n\n  if (isParser(J2ME_PARSER)) {\n    return FormJ2meParser;\n  }\n\n  if (isParser(ALERT_PARSER)) {\n    return FormAlertParser;\n  }\n\n  if (isParser(PROGRAM_STAGE_DATAENTRY_PARSER)) {\n    return FormProgramStageDataEntryParser;\n  }\n\n  if (isParser(UNREGISTERED_PARSER)) {\n    return FormUnregisteredParser;\n  }\n\n  if (isParser(EVENT_REGISTRATION_PARSER)) {\n    return FormEventRegistrationParser;\n  }\n\n  if (isParser(TRACKED_ENTITY_REGISTRATION_PARSER)) {\n    return FormTrackedEntityRegistrationParser;\n  }\n\n  return null;\n};\n\nexport const ViewSmsCommandEdit = () => {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useReadSmsCommandParserTypeQuery(id);\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n\n  const onAfterChange = () => history.push('/sms-command');\n\n  const onCancel = pristine => pristine ? history.goBack() : setShowCancelDialog(true);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading commands');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  const parserType = data === null || data === void 0 ? void 0 : data.smsCommand[FIELD_PARSER_NAME];\n  const FormComponent = getSmsCommandEditFormComponent(parserType);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('smscommand-viewsmscommandedit')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit command')), FormComponent && /*#__PURE__*/React.createElement(FormComponent, {\n    commandId: id,\n    onCancel: onCancel,\n    onAfterChange: onAfterChange\n  }), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-command'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }), !parserType && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Unrecognised parser type')\n  }, i18n.t('Could not find the requested parser type'))));\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_SMS_COMMAND_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteSmsCommandMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const SMS_COMMANDS_QUERY = {\n  smsCommands: {\n    resource: 'smsCommands',\n    pager: false,\n    params: ({\n      ids\n    } = {}) => ({\n      // @TODO: Why is `paging: false` not working?\n      paging: 'false',\n      fields: '*',\n      filter: ids ? \"ids:in:[\".concat(ids.join(','), \"]\") : undefined\n    })\n  }\n};\nexport const useReadSmsCommandsQuery = () => useDataQuery(SMS_COMMANDS_QUERY);","import { Button, Checkbox, Table, TableHead, TableBody, TableRow, TableRowHead, TableCell, TableCellHead, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales';\nimport { ListActions, DeleteConfirmationDialog, PageHeadline, Paragraph, TemplateSidebarNavContent, dataTest } from '../../shared';\nimport { parserTypes } from '../FieldParser';\nimport { useDeleteSmsCommandMutation } from './useDeleteSmsCommandMutation';\nimport { useReadSmsCommandsQuery } from './useReadSmsCommandsQuery';\nimport styles from './ViewSmsCommandList.module.css';\nexport const SMS_COMMAND_LIST_LABEL = i18n.t('Commands');\nexport const SMS_COMMAND_LIST_PATH = '/sms-config';\n\nconst getLabelByParserTypes = parserType => {\n  const type = Object.values(parserTypes).find(({\n    value\n  }) => value === parserType);\n  return (type === null || type === void 0 ? void 0 : type.label) || parserType;\n};\n\nexport const ViewSmsCommandList = () => {\n  var _data$smsCommands2, _data$smsCommands2$sm, _data$smsCommands3, _data$smsCommands3$sm, _data$smsCommands4, _data$smsCommands4$sm;\n\n  const history = useHistory();\n\n  const onAddCommandClick = () => history.push('sms-command/new');\n\n  const [checkedSmsCommands, setCheckedSmsCommands] = useState([]);\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const {\n    loading: loadingReadSmsCommands,\n    error: errorReadSmsCommands,\n    data,\n    refetch\n  } = useReadSmsCommandsQuery();\n  const [deleteSmsCommands, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteSmsCommandMutation();\n\n  if (loadingReadSmsCommands) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('smscommand-viewsmscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))));\n  }\n\n  const error = errorReadSmsCommands || errorDelete;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message)));\n  }\n\n  const onToggleCallChange = () => {\n    var _data$smsCommands;\n\n    const smsCommands = data === null || data === void 0 ? void 0 : (_data$smsCommands = data.smsCommands) === null || _data$smsCommands === void 0 ? void 0 : _data$smsCommands.smsCommands;\n\n    if (!smsCommands) {\n      return;\n    }\n\n    if (checkedSmsCommands.length === smsCommands.length) {\n      setCheckedSmsCommands([]);\n    } else {\n      setCheckedSmsCommands(smsCommands.map(({\n        id,\n        displayName\n      }) => ({\n        id,\n        displayName\n      })));\n    }\n  };\n\n  const toggleSmsCommand = smsCommand => {\n    const {\n      id\n    } = smsCommand;\n\n    if (checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId)) {\n      const index = checkedSmsCommands.findIndex(({\n        id: checkedId\n      }) => id === checkedId);\n      return setCheckedSmsCommands([...checkedSmsCommands.slice(0, index), ...checkedSmsCommands.slice(index + 1)]);\n    }\n\n    return setCheckedSmsCommands([...checkedSmsCommands, smsCommand]);\n  };\n\n  const onDeleteClick = async () => {\n    const ids = checkedSmsCommands.map(({\n      id\n    }) => id);\n    await deleteSmsCommands({\n      ids\n    });\n    setCheckedSmsCommands([]);\n    setShowDeleteConfirmationDialog(false);\n    refetch();\n  };\n\n  const allChecked = checkedSmsCommands.length === (data === null || data === void 0 ? void 0 : (_data$smsCommands2 = data.smsCommands) === null || _data$smsCommands2 === void 0 ? void 0 : (_data$smsCommands2$sm = _data$smsCommands2.smsCommands) === null || _data$smsCommands2$sm === void 0 ? void 0 : _data$smsCommands2$sm.length);\n  const hasCommands = (data === null || data === void 0 ? void 0 : (_data$smsCommands3 = data.smsCommands) === null || _data$smsCommands3 === void 0 ? void 0 : (_data$smsCommands3$sm = _data$smsCommands3.smsCommands) === null || _data$smsCommands3$sm === void 0 ? void 0 : _data$smsCommands3$sm.length) > 0;\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandlist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('SMS commands process SMS messages received by a DHIS2 instance, taking certain actions depending on the command and message content. Multiple SMS commands can be set up to process and handle data in multiple ways. Add and configure SMS commands below. Read about SMS commands in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add command'),\n    deleteLabel: i18n.t('Delete selected'),\n    onAddClick: onAddCommandClick,\n    onDeleteClick: () => setShowDeleteConfirmationDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedSmsCommands.length || loadingDelete\n  }), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteConfirmationDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected commands?')), /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('views-smscommandlist-commandtable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: allChecked,\n    onChange: onToggleCallChange\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Sms command')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Parser')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, hasCommands ? data === null || data === void 0 ? void 0 : (_data$smsCommands4 = data.smsCommands) === null || _data$smsCommands4 === void 0 ? void 0 : (_data$smsCommands4$sm = _data$smsCommands4.smsCommands) === null || _data$smsCommands4$sm === void 0 ? void 0 : _data$smsCommands4$sm.map(({\n    id,\n    displayName,\n    parserType\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    key: id\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: !!checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId),\n    onChange: () => toggleSmsCommand({\n      id,\n      displayName\n    })\n  })), /*#__PURE__*/React.createElement(TableCell, null, displayName), /*#__PURE__*/React.createElement(TableCell, null, getLabelByParserTypes(parserType)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.editButtonCell\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push(\"sms-command/\".concat(id))\n  }, i18n.t('Edit'))))) : /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: \"4\",\n    className: styles.noResults\n  }, i18n.t('No commands to display')))))));\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayname'),\n  name: \"name\",\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PASSWORD_NAME = 'password';\nexport const FIELD_PASSWORD_LABEL = i18n.t('Password');\nexport const FieldPassword = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('gateways-fieldgatewaypassword'),\n  name: FIELD_PASSWORD_NAME,\n  label: FIELD_PASSWORD_LABEL,\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, createEqualTo, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport { FIELD_PASSWORD_LABEL, FIELD_PASSWORD_NAME } from '../FieldPassword';\nconst {\n  Field\n} = ReactFinalForm;\nconst equalToPassword = createEqualTo(FIELD_PASSWORD_NAME, FIELD_PASSWORD_LABEL);\nexport const FIELD_PASSWORD_CONFIRMATION_NAME = 'password-confirmation';\nexport const FieldPasswordConfirmation = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('gateways-fieldgatewaypasswordconfirmation'),\n  name: FIELD_PASSWORD_CONFIRMATION_NAME,\n  label: i18n.t('Confirm password'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue, equalToPassword)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUsername = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayusername'),\n  name: \"username\",\n  label: i18n.t('User name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, dataTest } from '../../shared';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldPassword } from '../FieldPassword';\nimport { FieldPasswordConfirmation } from '../FieldPasswordConfirmation';\nimport { FieldUsername } from '../FieldUsername';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormBulkSMS = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaybulksmsform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPasswordConfirmation, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaybulksmsform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormBulkSMS.defaultProps = {\n  initialValues: {}\n};\nFormBulkSMS.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldAuthToken = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayauthtoken'),\n  name: \"authToken\",\n  label: i18n.t('Auth token'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, url } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUrlTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayurltemplate'),\n  name: \"urlTemplate\",\n  label: i18n.t('Url template'),\n  component: InputFieldFF,\n  validate: composeValidators(url, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, dataTest } from '../../shared';\nimport { FieldAuthToken } from '../FieldAuthToken';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate';\nimport { FieldUsername } from '../FieldUsername';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormClickatell = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewayclickatellform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldAuthToken, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewayclickatellform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormClickatell.defaultProps = {\n  initialValues: {}\n};\nFormClickatell.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport styles from './ActionAddKeyValuePair.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const ActionAddKeyValuePair = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addKeyValueToFormState = () => {\n    const {\n      parameters\n    } = getState().values;\n    change('parameters', [...parameters, {\n      header: false,\n      encode: false,\n      key: '',\n      value: '',\n      confidential: false\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: addKeyValueToFormState,\n    dataTest: dataTest('gateways-gatewayaddkeyvaluepair')\n  }, i18n.t('Add key value pair'));\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldConfigurationTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayconfigurationtemplate'),\n  name: \"configurationTemplate\",\n  label: i18n.t('Configuration template'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue),\n  helpText: i18n.t('Please refer to the documentation for possible values')\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nconst optionApplicationJson = {\n  label: i18n.t('Application/json'),\n  value: 'APPLICATION_JSON'\n};\nconst optionApplicationXml = {\n  label: i18n.t('Application/xml'),\n  value: 'APPLICATION_XML'\n};\nconst optionFormUrlEncoded = {\n  label: i18n.t('Form url encoded'),\n  value: 'FORM_URL_ENCODED'\n};\nconst optionTextPlain = {\n  label: i18n.t('Plain text'),\n  value: 'TEXT_PLAIN'\n};\nconst options = [optionApplicationJson, optionApplicationXml, optionFormUrlEncoded, optionTextPlain];\nexport const FieldContentType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaycontenttype'),\n  name: \"contentType\",\n  label: i18n.t('Content type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  initialValue: optionApplicationJson.value\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm, composeValidators, string, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const createFieldGatewayKeyValuePairValueName = index => \"parameters[\".concat(index, \"].value\");\nexport const ValueField = ({\n  index\n}) => {\n  const {\n    confidential\n  } = useFormState().values.parameters[index];\n  return /*#__PURE__*/React.createElement(Field, {\n    type: confidential ? 'password' : 'text',\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-value'),\n    name: createFieldGatewayKeyValuePairValueName(index),\n    label: i18n.t('Value'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  });\n};\nValueField.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CheckboxFieldFF, InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport styles from './FieldKeyValuePair.module.css';\nimport { ValueField } from './ValueField';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const FieldKeyValuePair = ({\n  index\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeKeyValueFromFormState = index => {\n    const {\n      parameters\n    } = getState().values;\n\n    if (index === 0) {\n      change('parameters', parameters.slice(1));\n    } else {\n      change('parameters', [...parameters.slice(0, index), ...parameters.slice(index + 1)]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('gateways-gatewaykeyvaluepair')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textInputs\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-key'),\n    className: styles.keyInput,\n    name: \"parameters[\".concat(index, \"].key\"),\n    label: i18n.t('Key'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.valueInput\n  }, /*#__PURE__*/React.createElement(ValueField, {\n    index: index\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.checkboxGroup\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isheader'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].header\"),\n    label: i18n.t('Send as header'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isencoded'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].encode\"),\n    label: i18n.t('Encode'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isconfidential'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].confidential\"),\n    label: i18n.t('Confidential'),\n    component: CheckboxFieldFF\n  })), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-remove'),\n    onClick: () => removeKeyValueFromFormState(index)\n  }, i18n.t('Remove key value pair')));\n};\nFieldKeyValuePair.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSendUrlParameters = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('gateways-fieldgatewaysendurlparameters'),\n  name: \"sendUrlParameters\",\n  label: i18n.t('Send url parameters'),\n  component: CheckboxFieldFF\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUseGet = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('gateways-fieldgatewayuseget'),\n  name: \"useGet\",\n  label: i18n.t('Use GET'),\n  component: CheckboxFieldFF,\n  helpText: i18n.t('Use GET instead of POST to send data to gateway')\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, PageSubHeadline, dataTest } from '../../shared';\nimport { ActionAddKeyValuePair } from '../ActionAddKeyValuePair';\nimport { FieldConfigurationTemplate } from '../FieldConfigurationTemplate';\nimport { FieldContentType } from '../FieldContentType';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldKeyValuePair } from '../FieldKeyValuePair';\nimport { FieldSendUrlParameters } from '../FieldSendUrlParameters';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate';\nimport { FieldUseGet } from '../FieldUseGet';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormGeneric = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    values,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaygenericform')\n  }, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Gateway setup')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfigurationTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldContentType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseGet, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSendUrlParameters, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Key value pairs')), values.parameters.map((_, index) => /*#__PURE__*/React.createElement(FieldKeyValuePair, {\n    index: index,\n    key: index\n  })), /*#__PURE__*/React.createElement(ActionAddKeyValuePair, null), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    dataTest: dataTest('forms-gatewaygenericform-submit'),\n    disabled: submitting,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormGeneric.defaultProps = {\n  initialValues: {\n    parameters: []\n  }\n};\nFormGeneric.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'BIND_TX',\n  value: 'BIND_TX'\n}, {\n  label: 'BIND_RX',\n  value: 'BIND_RX'\n}, {\n  label: 'BIND_TRX',\n  value: 'BIND_TRX'\n}];\nexport const FieldBindType = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaybindtype'),\n  name: \"bindType\",\n  label: i18n.t('Bind type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCompressed = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaycompressed'),\n  name: \"compressed\",\n  type: \"checkbox\",\n  label: i18n.t('Compressed'),\n  component: CheckboxFieldFF,\n  defaultValue: false\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldHost = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayhost'),\n  name: \"host\",\n  label: i18n.t('Host'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'ISDN',\n  value: 'ISDN'\n}, {\n  label: 'DATA',\n  value: 'DATA'\n}, {\n  label: 'TELEX',\n  value: 'TELEX'\n}, {\n  label: 'LAND_MOBILE',\n  value: 'LAND_MOBILE'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'PRIVATE',\n  value: 'PRIVATE'\n}, {\n  label: 'ERMES',\n  value: 'ERMES'\n}, {\n  label: 'INTERNET',\n  value: 'INTERNET'\n}, {\n  label: 'WAP',\n  value: 'WAP'\n}];\nexport const FieldNumberPlanIndicator = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaynumberplanindicator'),\n  name: \"numberPlanIndicator\",\n  label: i18n.t('Number plan indicator'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, integer } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldPort = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayport'),\n  name: \"port\",\n  label: i18n.t('Port'),\n  component: InputFieldFF,\n  validate: composeValidators(integer, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemId = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaysystemid'),\n  name: \"systemId\",\n  label: i18n.t('System id'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaysystemtype'),\n  name: \"systemType\",\n  label: i18n.t('System type'),\n  component: InputFieldFF,\n  defaultValue: \"\"\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'INTERNATIONAL',\n  value: 'INTERNATIONAL'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'NETWORK_SPECIFIC',\n  value: 'NETWORK_SPECIFIC'\n}, {\n  label: 'SUBSCRIBER_NUMBER',\n  value: 'SUBSCRIBER_NUMBER'\n}, {\n  label: 'ALPHANUMERIC',\n  value: 'ALPHANUMERIC'\n}, {\n  label: 'ABBREVIATED',\n  value: 'ABBREVIATED'\n}];\nexport const FieldTypeOfNumber = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaytypeofnumber'),\n  name: \"typeOfNumber\",\n  label: i18n.t('Type of number'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { FormRow, dataTest } from '../../shared';\nimport { FieldBindType } from '../FieldBindType';\nimport { FieldCompressed } from '../FieldCompressed';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldHost } from '../FieldHost';\nimport { FieldNumberPlanIndicator } from '../FieldNumberPlanIndicator';\nimport { FieldPassword } from '../FieldPassword';\nimport { FieldPort } from '../FieldPort';\nimport { FieldSystemId } from '../FieldSystemId';\nimport { FieldSystemType } from '../FieldSystemType';\nimport { FieldTypeOfNumber } from '../FieldTypeOfNumber';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormSMPP = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaysmppform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemId, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldHost, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNumberPlanIndicator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldTypeOfNumber, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldBindType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPort, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompressed, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaysmppform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormSMPP.defaultProps = {\n  initialValues: {}\n};\nFormSMPP.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","const GENERIC_FORM = 'http';\nconst BULK_SMS_FORM = 'bulksms';\nconst CLICKATELL_FORM = 'clickatell';\nconst SMPP_FORM = 'smpp';\nexport const gatewayTypes = {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n};","import { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport { PropTypes } from 'prop-types';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport { gatewayTypes } from './gatewayTypes';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const InputSingleSelectGatewayType = ({\n  onChange,\n  selected\n}) => /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Type'),\n  onChange: onChange,\n  selected: selected,\n  dataTest: dataTest('views-gatewayconfigformnew-gatewaytype')\n}, /*#__PURE__*/React.createElement(SingleSelectOption, {\n  value: GENERIC_FORM,\n  label: i18n.t('Generic')\n}), /*#__PURE__*/React.createElement(SingleSelectOption, {\n  value: BULK_SMS_FORM,\n  label: i18n.t('BulkSMS')\n}), /*#__PURE__*/React.createElement(SingleSelectOption, {\n  value: CLICKATELL_FORM,\n  label: i18n.t('Clickatell')\n}), /*#__PURE__*/React.createElement(SingleSelectOption, {\n  value: SMPP_FORM,\n  label: i18n.t('SMPP')\n}));\nInputSingleSelectGatewayType.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useCreateBulkSMSGatewayMutation = () => useDataMutation(CREATE_BULK_SMS_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useCreateClickatellGatewayMutation = () => useDataMutation(CREATE_CLICKATELL_GATEWAY_MUTATION);","/**\n * This the shape of the additional fields\n * that can be added to a generic config\n *\n * @typedef {Object} Parameter\n * @prop {string} key\n * @prop {string} value\n * @prop {bool} header\n * @prop {bool} encode\n * @prop {bool} confidential\n */\n\n/**\n * @param {Object} args\n * @param {string} args.configurationTemplate\n * @param {string} args.contentType\n * @param {string} args.name\n * @param {string} args.urlTemplate\n * @param {bool} args.sendUrlParameters\n * @param {bool} args.useGet\n * @param {Parameter[]} args.parameters\n *\n * @returns {Object}\n */\nexport const createGenericGateWayDataFromVariables = ({\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n}) => ({\n  type: 'http',\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n});","import { useDataMutation } from '@dhis2/app-runtime';\nimport { createGenericGateWayDataFromVariables } from '../createGenericGateWayDataFromVariables';\nexport const CREATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useCreateGenericGatewayMutation = () => useDataMutation(CREATE_GENERIC_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useCreateSMPPGatewayMutation = () => useDataMutation(CREATE_SMPP_GATEWAY_MUTATION);","import { SingleSelectField, SingleSelectOption, NoticeBox } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales';\nimport { FormRow, PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared';\nimport { FormBulkSMS } from '../FormBulkSMS';\nimport { FormClickatell } from '../FormClickatell';\nimport { FormGeneric } from '../FormGeneric';\nimport { FormSMPP } from '../FormSMPP';\nimport { gatewayTypes } from '../InputSingleSelectGatewayType';\nimport { useCreateBulkSMSGatewayMutation } from './useCreateBulkSMSGatewayMutation';\nimport { useCreateClickatellGatewayMutation } from './useCreateClickatellGatewayMutation';\nimport { useCreateGenericGatewayMutation } from './useCreateGenericGatewayMutation';\nimport { useCreateSMPPGatewayMutation } from './useCreateSMPPGatewayMutation';\nimport styles from './ViewSmsGatewayAdd.module.css';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const GATEWAY_CONFIG_FORM_NEW_PATH = '/sms-gateway/new';\nexport const ViewSmsGatewayAdd = () => {\n  const history = useHistory();\n  const [visibleForm, setVisibleForm] = useState(GENERIC_FORM);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useCreateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useCreateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useCreateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useCreateSMPPGatewayMutation();\n  const error = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst saving the gateway');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-gatewayconfigformnew')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message)));\n  }\n\n  const onSubmit = async values => {\n    try {\n      if (visibleForm === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (visibleForm === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (visibleForm === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (visibleForm === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const onCancelClick = () => history.push('/sms-gateway');\n\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformnew'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Type'),\n    onChange: ({\n      selected\n    }) => setVisibleForm(selected),\n    selected: visibleForm,\n    dataTest: dataTest('views-gatewayconfigformnew-gatewaytype')\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: GENERIC_FORM,\n    label: i18n.t('Generic')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: BULK_SMS_FORM,\n    label: i18n.t('BulkSMS')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: CLICKATELL_FORM,\n    label: i18n.t('Clickatell')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: SMPP_FORM,\n    label: i18n.t('SMPP')\n  }))), /*#__PURE__*/React.createElement(FormRow, null, visibleForm === GENERIC_FORM && /*#__PURE__*/React.createElement(FormGeneric, {\n    onSubmit: onSubmit,\n    onCancelClick: onCancelClick\n  }), visibleForm === BULK_SMS_FORM && /*#__PURE__*/React.createElement(FormBulkSMS, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === CLICKATELL_FORM && /*#__PURE__*/React.createElement(FormClickatell, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === SMPP_FORM && /*#__PURE__*/React.createElement(FormSMPP, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }))));\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n *   * Api does not return password of BulkSMS gateway configs\n *     -> https://jira.dhis2.org/browse/DHIS2-9248\n */\n\nexport const GATEWAY_QUERY = {\n  gateway: {\n    resource: 'gateways',\n    id: ({\n      id\n    }) => id\n  }\n};\nexport const useReadGatewayQuery = id => useDataQuery(GATEWAY_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\n/**\n * @TODO\n *   * Create jira issue: Make `useDataMutation` accept function for \"id\"\n */\n\n/**\n * @param {Object} query\n * @returns {Object}\n */\n\nexport const useUpdateGatewayMutation = query => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n\n  const doFetch = variables => {\n    const updatedQuery = { ...query,\n      id: variables.id\n    };\n    setLoading(true);\n    setError(null);\n    return engine.mutate(updatedQuery, {\n      variables\n    }).then(data => {\n      setLoading(false);\n      return data;\n    }).catch(error => {\n      setLoading(false);\n      setError(error);\n      throw error;\n    });\n  };\n\n  return [doFetch, {\n    loading,\n    error\n  }];\n};","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useUpdateBulkSMSGatewayMutation = () => useUpdateGatewayMutation(UPDATE_BULK_SMS_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useUpdateClickatellGatewayMutation = () => useUpdateGatewayMutation(UPDATE_CLICKATELL_GATEWAY_MUTATION);","import { createGenericGateWayDataFromVariables } from '../createGenericGateWayDataFromVariables';\nimport { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'replace',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useUpdateGenericGatewayMutation = () => useUpdateGatewayMutation(UPDATE_GENERIC_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useUpdateSMPPGatewayMutation = () => useUpdateGatewayMutation(UPDATE_SMPP_GATEWAY_MUTATION);","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../locales';\nimport { CancelDialog, PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared';\nimport { FIELD_PASSWORD_NAME } from '../FieldPassword';\nimport { FIELD_PASSWORD_CONFIRMATION_NAME } from '../FieldPasswordConfirmation';\nimport { FormBulkSMS } from '../FormBulkSMS';\nimport { FormClickatell } from '../FormClickatell';\nimport { FormGeneric } from '../FormGeneric';\nimport { FormSMPP } from '../FormSMPP';\nimport { gatewayTypes } from '../InputSingleSelectGatewayType';\nimport { useReadGatewayQuery } from './useReadGatewayQuery';\nimport { useUpdateBulkSMSGatewayMutation } from './useUpdateBulkSMSGatewayMutation';\nimport { useUpdateClickatellGatewayMutation } from './useUpdateClickatellGatewayMutation';\nimport { useUpdateGenericGatewayMutation } from './useUpdateGenericGatewayMutation';\nimport { useUpdateSMPPGatewayMutation } from './useUpdateSMPPGatewayMutation';\nimport styles from './ViewSmsGatewayEdit.module.css';\nconst {\n  GENERIC_FORM,\n  BULK_SMS_FORM,\n  CLICKATELL_FORM,\n  SMPP_FORM\n} = gatewayTypes;\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC = '/sms-gateway/edit';\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH = \"\".concat(GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC, \"/:id\");\n\nconst getFormComponent = gatewayType => {\n  if (gatewayType === GENERIC_FORM) {\n    return FormGeneric;\n  }\n\n  if (gatewayType === BULK_SMS_FORM) {\n    return FormBulkSMS;\n  }\n\n  if (gatewayType === CLICKATELL_FORM) {\n    return FormClickatell;\n  }\n\n  if (gatewayType === SMPP_FORM) {\n    return FormSMPP;\n  }\n\n  throw new Error(\"The gateway type does not exist, got \\\"\".concat(gatewayType, \"\\\"\"));\n};\n\nconst getInitialValues = gateway => {\n  if (gateway.type === BULK_SMS_FORM) {\n    return { ...gateway,\n      [FIELD_PASSWORD_CONFIRMATION_NAME]: gateway[FIELD_PASSWORD_NAME]\n    };\n  }\n\n  return gateway;\n};\n\nexport const ViewSmsGatewayEdit = () => {\n  var _data$gateway;\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const {\n    loading,\n    error: loadError,\n    data: jsonData\n  } = useReadGatewayQuery(id);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useUpdateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useUpdateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useUpdateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useUpdateSMPPGatewayMutation();\n  const saveError = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (loadError) {\n    const msg = i18n.t('Something went wrong whilst loading gateways');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadError.message));\n  }\n\n  const data =\n  /**\n   * @TODO:\n   *   * The response does not contain the right content type header\n   *     -> https://jira.dhis2.org/browse/DHIS2-9252\n   */\n  jsonData && typeof jsonData.gateway === 'string' ? {\n    gateway: JSON.parse(jsonData.gateway)\n  } : jsonData;\n  const gatewayType = data === null || data === void 0 ? void 0 : (_data$gateway = data.gateway) === null || _data$gateway === void 0 ? void 0 : _data$gateway.type;\n\n  const onSubmit = async formValues => {\n    const values = { ...formValues,\n      id: data.gateway.uid\n    };\n\n    try {\n      if (values.type === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (values.type === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (values.type === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (values.type === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const FormComponent = getFormComponent(gatewayType);\n  const initialValues = gatewayType && getInitialValues(data.gateway);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformedit'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit gateway')), gatewayType ? /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformedit-formcontainer'),\n    \"data-gateway-id\": data.gateway.uid\n  }, saveError && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving gateways')\n  }, saveError.message), /*#__PURE__*/React.createElement(FormComponent, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    onCancelClick: pristine => pristine ? history.push('/sms-gateway') : setShowCancelDialog(true)\n  })) : /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Gateway not found')\n  }, i18n.t('The requested gateway could not be loaded')), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-gateway'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  })));\n};","import i18n from '../../locales';\n/**\n * @param {string} type\n * @returns {string}\n */\n\nexport const getTypeLabelByType = type => {\n  if (type === 'bulksms') {\n    return i18n.t('BulkSMS');\n  }\n\n  if (type === 'clickatell') {\n    return i18n.t('Clickatell');\n  }\n\n  if (type === 'http' || !type) {\n    return i18n.t('Generic');\n  }\n\n  return type;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Checkbox, Table, TableHead, TableBody, TableRowHead, TableCellHead, TableRow, TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales';\nimport { dataTest } from '../../shared';\nimport styles from './GatewaysTable.module.css';\nimport { getTypeLabelByType } from './getTypeLabelByType';\nexport const GatewaysTable = ({\n  allGatewaysChecked,\n  checkedGateways,\n  gateways,\n  onGatewayToggle,\n  onToggleAll,\n  onMakeDefaultClick\n}) => {\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('gateways-gatewaystable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, {\n    dataTest: dataTest('gateways-gatewaystable-checkall')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: onToggleAll,\n    checked: allGatewaysChecked\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, gateways.map(gateway => /*#__PURE__*/React.createElement(TableRow, {\n    key: gateway.uid,\n    dataTest: dataTest('gateways-gatewaystable-row')\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkboxCell,\n    dataTest: dataTest('gateways-gatewaystable-checkbox')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    value: gateway.uid,\n    onChange: () => onGatewayToggle(gateway.uid),\n    checked: checkedGateways.includes(gateway.uid),\n    dataTest: dataTest('gateways-gatewaystable-id')\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('gateways-gatewaystable-name')\n  }, gateway.name), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.typeCell,\n    dataTest: dataTest('gateways-gatewaystable-type')\n  }, getTypeLabelByType(gateway.type)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.defaultCell\n  }, !gateway.isDefault ? /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('gateways-gatewaystable-makedefault'),\n    onClick: () => onMakeDefaultClick(gateway.uid),\n    className: styles.makeDefaultButton\n  }, i18n.t('Make default')) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.isDefaultText,\n    \"data-test\": dataTest('gateways-gatewaystable-isdefault')\n  }, i18n.t('Default gateway'))), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('gateways-gatewaystable-actions'),\n    className: styles.editCell\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    className: styles.rowActions\n  }, /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('gateways-gatewaystable-edit'),\n    onClick: () => {\n      history.push(\"sms-gateway/\".concat(gateway.uid));\n    }\n  }, i18n.t('Edit'))))))));\n};\nGatewaysTable.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    isDefault: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired\n  })).isRequired,\n  onGatewayToggle: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  onToggleAll: PropTypes.func.isRequired,\n  allGatewaysChecked: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared';\nimport { GatewaysTable } from './GatewaysTable';\nimport styles from './List.module.css';\nexport const List = ({\n  checkedGateways,\n  gateways,\n  setCheckedGateways,\n  onMakeDefaultClick,\n  processing\n}) => {\n  const allGatewaysChecked = checkedGateways.length === gateways.length;\n\n  const toggleGateway = id => {\n    if (checkedGateways.includes(id)) {\n      const index = checkedGateways.findIndex(curId => curId === id);\n      const newCheckedGateways = index === 0 ? checkedGateways.slice(1) : [...checkedGateways.slice(0, index), ...checkedGateways.slice(index + 1)];\n      setCheckedGateways(newCheckedGateways);\n    } else {\n      setCheckedGateways([...checkedGateways, id]);\n    }\n  };\n\n  const toggleAll = () => {\n    if (!allGatewaysChecked) {\n      const allGatewayIds = gateways.map(({\n        uid\n      }) => uid);\n      setCheckedGateways(allGatewayIds);\n    } else {\n      setCheckedGateways([]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('gateways-gatewaylist')\n  }, processing && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.processingMessage\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loadingContainer\n  }, /*#__PURE__*/React.createElement(CircularLoader, null))), /*#__PURE__*/React.createElement(GatewaysTable, {\n    allGatewaysChecked: allGatewaysChecked,\n    gateways: gateways,\n    checkedGateways: checkedGateways,\n    onGatewayToggle: toggleGateway,\n    onMakeDefaultClick: onMakeDefaultClick,\n    onToggleAll: toggleAll\n  }));\n};\nList.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    isDefault: PropTypes.bool\n  })).isRequired,\n  setCheckedGateways: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  processing: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_GATEWAY_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteGatewaysMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The endpoint requires a `.json`, ignores \"Accept\" header\n *     -> https://jira.dhis2.org/browse/DHIS2-9250\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n */\n\nexport const GATEWAYS_QUERY = {\n  gateways: {\n    resource: 'gateways.json',\n    params: ({\n      fields,\n      filter\n    }) => {\n      const params = {};\n\n      if (fields) {\n        params.fields = fields;\n      }\n\n      if (filter) {\n        params.filter = filter;\n      }\n\n      return params;\n    }\n  }\n};\n/**\n * @param {string[]} [ids]\n * @return {Object}\n */\n\nexport const useReadGatewaysQuery = ids => {\n  var _parsedData$gateways;\n\n  /*\n   * @TODO(filtering): Currently the `id:in:[...]` doesn't work\n   *   -> https://jira.dhis2.org/browse/DHIS2-9259\n   *\n   * This is because filtering doesn't work right now\n   * So there's no need for sending any variables\n   */\n  const filter = \"id:in:[\".concat(ids === null || ids === void 0 ? void 0 : ids.join(','), \"]\");\n  const variables = false && ids ? {\n    filter\n  } : {}; // eslint-disable-line no-constant-condition\n\n  const {\n    data: jsonData,\n    ...rest\n  } = useDataQuery(GATEWAYS_QUERY, {\n    variables\n  });\n  const parsedData =\n  /**\n   * @TODO:\n   *   Create Jira issue for:\n   *   The response does not contain the right content type header\n   */\n  jsonData && typeof jsonData.gateways === 'string' ? {\n    gateways: JSON.parse(jsonData.gateways)\n  } : jsonData;\n  const data = ids && (parsedData === null || parsedData === void 0 ? void 0 : (_parsedData$gateways = parsedData.gateways) === null || _parsedData$gateways === void 0 ? void 0 : _parsedData$gateways.gateways) ? {\n    gateways: {\n      gateways: parsedData.gateways.gateways.filter(({\n        uid\n      }) => ids.includes(uid))\n    }\n  } : parsedData;\n  return {\n    data,\n    ...rest\n  };\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const SET_DEFAULT_GATEWAY_MUTATION = {\n  resource: 'gateways/default',\n  type: 'replace',\n  id: ({\n    id\n  }) => id\n};\nexport const useSetDefaultGatewayMutation = () => useDataMutation(SET_DEFAULT_GATEWAY_MUTATION);","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../locales';\nimport { ListActions, PageHeadline, DeleteConfirmationDialog, Paragraph, TemplateSidebarNavContent, dataTest } from '../../shared';\nimport { List } from './List';\nimport { useDeleteGatewaysMutation } from './useDeleteGatewaysMutation';\nimport { useReadGatewaysQuery } from './useReadGatewaysQuery';\nimport { useSetDefaultGatewayMutation } from './useSetDefaultGatewayMutation';\nimport styles from './ViewSmsGatewayList.module.css';\nexport const GATEWAY_CONFIG_LIST_PATH = '/sms-gateway';\nexport const GATEWAY_CONFIG_LIST_LABEL = 'Gateway configuration';\nexport const ViewSmsGatewayList = () => {\n  var _data$gateways, _data$gateways$gatewa;\n\n  const history = useHistory();\n\n  const onAddGatewayClick = () => history.push('/sms-gateway/new');\n\n  const [checkedGateways, setCheckedGateways] = useState([]);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const {\n    loading: loadingReadGateways,\n    error: errorReadGateways,\n    data,\n    refetch: refetchReadGateways\n  } = useReadGatewaysQuery();\n  const [deleteCheckedGateways, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteGatewaysMutation();\n  const [makeGatewayDefault, {\n    loading: loadingSetDefault,\n    error: errorSetDefault\n  }] = useSetDefaultGatewayMutation();\n\n  const onDeleteClick = () => {\n    const variables = {\n      ids: checkedGateways\n    };\n    deleteCheckedGateways(variables).then(refetchReadGateways);\n    setShowDeleteDialog(false);\n  };\n\n  const onMakeDefaultClick = id => {\n    const variables = {\n      id\n    };\n    makeGatewayDefault(variables).then(refetchReadGateways);\n  };\n\n  const loading = loadingReadGateways || loadingDelete || loadingSetDefault;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = errorReadGateways || errorDelete || errorSetDefault;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const hasGateways = !!(data === null || data === void 0 ? void 0 : (_data$gateways = data.gateways) === null || _data$gateways === void 0 ? void 0 : (_data$gateways$gatewa = _data$gateways.gateways) === null || _data$gateways$gatewa === void 0 ? void 0 : _data$gateways$gatewa.length);\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('views-gatewayconfiglist')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('An SMS gateway lets a DHIS2 instance send and receive SMS messages. Different gateway types can be added and configured below. At least one gateway is needed to send and receive SMS messages. Load balancing will use all gateways if there are multiple available. Read about gateway configuration in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add gateway'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"views-gatewayconfiglist\",\n    onAddClick: onAddGatewayClick,\n    onDeleteClick: () => setShowDeleteDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedGateways.length || loadingDelete\n  }), hasGateways ? /*#__PURE__*/React.createElement(List, {\n    processing: loading,\n    checkedGateways: checkedGateways,\n    setCheckedGateways: setCheckedGateways,\n    gateways: data.gateways.gateways,\n    onMakeDefaultClick: onMakeDefaultClick\n  }) : /*#__PURE__*/React.createElement(NoticeBox, {\n    info: true,\n    title: i18n.t('No gateways found')\n  }, i18n.t(\"It looks like there aren't any configured gateways, or they couldn't be loaded.\")), showDeleteDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected gateways?'))));\n};","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  FAILED: i18n.t('Failed'),\n  INCOMING: i18n.t('Incoming'),\n  PROCESSED: i18n.t('Processed'),\n  PROCESSING: i18n.t('Processing'),\n  SENT: i18n.t('Sent'),\n  UNHANDLED: i18n.t('Unhandled')\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../shared';\nimport { translations } from '../translations';\nimport styles from './Filter.module.css'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/incoming/SmsMessageStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'FAILED', 'INCOMING', 'PROCESSED', 'PROCESSING', 'SENT', 'UNHANDLED'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const Filter = ({\n  status,\n  setStatus,\n  phoneNumber,\n  setPhoneNumber,\n  onReset\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('views-receivedsms-filter'),\n  className: styles.container\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.inputStrip\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: \"status-filter\"\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))), /*#__PURE__*/React.createElement(InputField, {\n  label: i18n.t('Filter by phone number'),\n  inputWidth: \"250px\",\n  value: phoneNumber,\n  onChange: ({\n    value\n  }) => setPhoneNumber(value),\n  dataTest: \"phone-number-filter\"\n}), /*#__PURE__*/React.createElement(Button, {\n  large: true,\n  onClick: onReset,\n  dataTest: \"reset-filter-btn\"\n}, i18n.t('Reset filter'))));\nFilter.propTypes = {\n  phoneNumber: PropTypes.string.isRequired,\n  setPhoneNumber: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { Date, Time, SmsTable } from '../../shared';\nimport { translations } from '../translations';\nimport styles from './ReceivedSmsTable.module.css';\nexport const ReceivedSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Phone number'), i18n.t('Status'), i18n.t('Sender'), i18n.t('Received')],\n  rowRenderFn: message => {\n    var _message$user, _message$user$userCre;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.text), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.originator\n    }, message.originator)), /*#__PURE__*/React.createElement(TableCell, null, translations[message.smsstatus]), /*#__PURE__*/React.createElement(TableCell, null, ((_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$userCre = _message$user.userCredentials) === null || _message$user$userCre === void 0 ? void 0 : _message$user$userCre.username) || i18n.t('Unknown')), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n      date: message.receiveddate\n    }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n      time: message.receiveddate\n    })));\n  }\n});\nReceivedSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nconst DELETE_INBOUND_SMS_MUTATION = {\n  resource: 'sms/inbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nexport const useDeleteMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(DELETE_INBOUND_SMS_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataQuery } from '@dhis2/app-runtime';\nimport { Button, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport i18n from '../../locales';\nimport { AlertContext, DeleteConfirmationDialog, PageHeadline, useQueryParams, TemplateSidebarNavContent, dataTest } from '../../shared';\nimport { Filter } from '../Filter';\nimport { ReceivedSmsTable } from '../ReceivedSmsTable';\nimport { useDeleteMutation } from './useDeleteMutation';\nimport styles from './ViewReceivedSmsList.module.css';\nexport const RECEIVED_SMS_LIST_LABEL = i18n.t('Received');\nexport const RECEIVED_SMS_LIST_PATH = '/received';\n\nconst parseParams = ({\n  page,\n  pageSize,\n  phoneNumber,\n  status\n}) => {\n  const params = {\n    page,\n    pageSize,\n    fields: ['id', 'text', 'originator', 'smsstatus', 'user[userCredentials[username]]', // sender\n    'receiveddate'],\n    order: 'receiveddate:desc'\n  };\n  const filters = [];\n\n  if (phoneNumber) {\n    filters.push(\"originator:ilike:\".concat(phoneNumber));\n  }\n\n  if (status && status !== 'ALL') {\n    filters.push(\"smsstatus:eq:\".concat(status));\n  }\n\n  if (filters.length > 0) {\n    params.filter = filters;\n  }\n\n  return params;\n};\n\nconst query = {\n  inboundSms: {\n    resource: 'sms/inbound',\n    params: parseParams\n  }\n};\nexport const ViewReceivedSmsList = () => {\n  var _data$inboundSms;\n\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    phoneNumber,\n    status\n  } = queryParams;\n\n  const setPhoneNumber = phoneNumber => {\n    setQueryParams({\n      phoneNumber,\n      page: 1\n    }, 'replaceIn');\n  };\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const handleFilterReset = () => {\n    setQueryParams({\n      phoneNumber: undefined,\n      status: undefined,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n  const {\n    callback: debouncedRefetch\n  } = useDebouncedCallback(refetch, 500, {\n    leading: true\n  });\n  useEffect(() => {\n    debouncedRefetch({\n      page,\n      pageSize,\n      phoneNumber,\n      status\n    });\n  }, [page, pageSize, phoneNumber, status]);\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const [deleteSms] = useDeleteMutation({\n    onComplete: () => {\n      setShowDeleteConfirmationDialog(false);\n      refetch();\n      setSelectedIds([]);\n    },\n    onError: error => addAlert({\n      type: 'critical',\n      message: error.message\n    })\n  });\n\n  const onDeleteClick = () => deleteSms({\n    ids: selectedIds\n  });\n\n  const onCancelClick = () => setShowDeleteConfirmationDialog(false);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading received SMSes');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$inboundSms = data.inboundSms) === null || _data$inboundSms === void 0 ? void 0 : _data$inboundSms.inboundsmss) || [];\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-receivedsmslist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(Filter, {\n    status: status,\n    setStatus: setStatus,\n    phoneNumber: phoneNumber,\n    setPhoneNumber: setPhoneNumber,\n    onReset: handleFilterReset\n  }), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowDeleteConfirmationDialog(true),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected')), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: onCancelClick,\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected sms?'))), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(ReceivedSmsTable, {\n    messages: messages,\n    pager: data.inboundSms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  })));\n};","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  DELIVERED: i18n.t('Delivered'),\n  ERROR: i18n.t('Error'),\n  FAILED: i18n.t('Failed'),\n  OUTBOUND: i18n.t('Outbound'),\n  PENDING: i18n.t('Pending'),\n  SCHEDULED: i18n.t('Scheduled'),\n  SENT: i18n.t('Sent')\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { SmsTable, Date, Time } from '../../shared';\nimport { translations } from '../translations';\nimport styles from './SentSmsTable.module.css';\nexport const SentSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Recipients'), i18n.t('Status'), i18n.t('Sent')],\n  rowRenderFn: message => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.message), /*#__PURE__*/React.createElement(TableCell, null, (message.recipients || []).map((recipient, index, all) => /*#__PURE__*/React.createElement(\"span\", {\n    key: recipient + index,\n    className: styles.recipient\n  }, recipient, index !== all.length - 1 && ', '))), /*#__PURE__*/React.createElement(TableCell, null, translations[message.status]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n    date: message.date\n  }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n    time: message.date\n  })))\n});\nSentSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../locales';\nimport { translations } from '../translations';\nimport styles from './StatusFilter.module.css'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/outbound/OutboundSmsStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'DELIVERED', 'ERROR', 'FAILED', 'OUTBOUND', 'PENDING', 'SCHEDULED', 'SENT'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const StatusFilter = ({\n  status,\n  setStatus\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: \"status-filter\"\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))));\nStatusFilter.propTypes = {\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired\n};","import { useDataMutation } from '@dhis2/app-runtime';\nconst DELETE_OUTBOUND_SMS_MUTATION = {\n  resource: 'sms/outbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nexport const useDeleteMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(DELETE_OUTBOUND_SMS_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataQuery } from '@dhis2/app-runtime';\nimport { Button, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect, useContext } from 'react';\nimport i18n from '../../locales';\nimport { DeleteConfirmationDialog, PageHeadline, AlertContext, TemplateSidebarNavContent, useQueryParams } from '../../shared';\nimport { SentSmsTable } from '../SentSmsTable';\nimport { StatusFilter } from '../StatusFilter';\nimport { useDeleteMutation } from './useDeleteMutation';\nimport styles from './ViewSentSmsList.module.css';\nexport const SENT_SMS_LIST_LABEL = i18n.t('Sent');\nexport const SENT_SMS_LIST_PATH = '/sent';\n\nconst parseParams = ({\n  status,\n  page,\n  pageSize\n}) => {\n  const params = {\n    pageSize,\n    page,\n    fields: ['id', 'message', 'status', 'date', 'recipients'],\n    order: 'date:desc'\n  };\n\n  if (status && status !== 'ALL') {\n    params.filter = \"status:eq:\".concat(status);\n  }\n\n  return params;\n};\n\nconst query = {\n  sms: {\n    resource: 'sms/outbound',\n    params: parseParams\n  }\n};\nexport const ViewSentSmsList = () => {\n  var _data$sms;\n\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    status\n  } = queryParams;\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n  useEffect(() => {\n    refetch({\n      page,\n      pageSize,\n      status\n    });\n  }, [page, pageSize, status]);\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const [deleteSms] = useDeleteMutation({\n    onComplete: () => {\n      setShowDeleteConfirmationDialog(false);\n      refetch();\n      setSelectedIds([]);\n    },\n    onError: error => addAlert({\n      type: 'critical',\n      message: error.message\n    })\n  });\n\n  const onDeleteClick = () => deleteSms({\n    ids: selectedIds\n  });\n\n  const onCancelClick = () => setShowDeleteConfirmationDialog(false);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading sent SMSes');\n    return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$sms = data.sms) === null || _data$sms === void 0 ? void 0 : _data$sms.outboundsmss) || [];\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(StatusFilter, {\n    status: status,\n    setStatus: setStatus\n  }), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => setShowDeleteConfirmationDialog(true),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected')), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: onCancelClick,\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected sms?'))), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(SentSmsTable, {\n    messages: messages,\n    pager: data.sms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  })));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport s from './HomeCard.module.css';\nexport const HomeCard = ({\n  titleText,\n  bodyText,\n  linkText,\n  to\n}) => {\n  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.container\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: s.title\n  }, titleText), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.body\n  }, bodyText), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.linkContainer\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: to\n  }, linkText))));\n};\nHomeCard.propTypes = {\n  bodyText: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired,\n  titleText: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired\n};","import React from 'react';\nimport i18n from '../../locales';\nimport { PageHeadline, TemplateSidebarNavContent, dataTest } from '../../shared';\nimport { HomeCard } from '../HomeCard';\nimport s from './ViewOverview.module.css';\nexport const ViewOverview = () => {\n  return /*#__PURE__*/React.createElement(TemplateSidebarNavContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-home'),\n    className: s.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Overview: SMS Configuration', {\n    nsSeparator: '>'\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.explanation\n  }, i18n.t('Configure settings for SMS sending, receiving, data reporting, alerts, registration and more.')), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.grid\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Gateway Configuration'),\n    bodyText: i18n.t('Add and manage gateways for sending and receiving SMS messages in DHIS2.'),\n    linkText: i18n.t('Set up gateways'),\n    to: \"/sms-gateway\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('SMS Commands'),\n    bodyText: i18n.t('Add and manage commands triggered by incoming SMS messages to register, alert and more.'),\n    linkText: i18n.t('Set up SMS commands'),\n    to: \"/sms-command\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Sent SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages sent from DHIS2.'),\n    linkText: i18n.t('View all sent SMS'),\n    to: \"/sent\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Received SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages received by DHIS2.'),\n    linkText: i18n.t('View all received SMS'),\n    to: \"/received\"\n  })))));\n};","import { App } from './App';\nexport default App;","import './locales';\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { AppWrapper } from './AppWrapper';\nimport { ViewSmsCommandAdd, ViewSmsCommandList, ViewSmsCommandEdit } from './sms-command';\nimport { ViewSmsGatewayAdd, ViewSmsGatewayList, ViewSmsGatewayEdit } from './sms-gateway';\nimport { ViewReceivedSmsList } from './sms-inbound';\nimport { ViewSentSmsList } from './sms-outbound';\nimport { ViewOverview } from './sms-overview';\nexport const App = () => /*#__PURE__*/React.createElement(AppWrapper, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: ViewOverview\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-gateway\",\n  component: ViewSmsGatewayList\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/new\",\n  component: ViewSmsGatewayAdd\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/:id\",\n  component: ViewSmsGatewayEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-command\",\n  component: ViewSmsCommandList\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/new\",\n  component: ViewSmsCommandAdd\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/:id\",\n  component: ViewSmsCommandEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sent\",\n  component: ViewSentSmsList\n}),\n/* View received sms */\n'', /*#__PURE__*/React.createElement(Route, {\n  path: \"/received\",\n  component: ViewReceivedSmsList\n}),\n/* Handle 404 */\n'', /*#__PURE__*/React.createElement(Redirect, {\n  from: \"*\",\n  to: \"/\"\n})));"],"sourceRoot":""}