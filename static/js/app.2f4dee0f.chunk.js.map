{"version":3,"sources":["D2App/shared/components/layout/LayoutContainer.module.css","D2App/shared/components/layout/LayoutContent.module.css","D2App/shared/components/layout/LayoutSidebar.module.css","D2App/shared/components/navigation/NavigationItem.module.css","D2App/shared/components/headline/PageHeadline.module.css","D2App/shared/components/headline/PageSubHeadline.module.css","D2App/sms-overview/components/HomeCard/HomeCard.module.css","D2App/sms-overview/views/Overview/Overview.module.css","D2App/sms-received/components/Filter/Filter.module.css","D2App/shared/components/pagination/Pagination.module.css","D2App/shared/components/sms_table/SmsTable.module.css","D2App/shared/components/time/Date.module.css","D2App/shared/components/time/Time.module.css","D2App/sms-received/components/ReceivedSmsTable/ReceivedSmsTable.module.css","D2App/sms-received/views/ReceivedSmsList/ReceivedSmsList.module.css","D2App/sms-sent/components/SentSmsTable/SentSmsTable.module.css","D2App/sms-sent/components/StatusFilter/StatusFilter.module.css","D2App/sms-sent/views/SentSmsList/SentSmsList.module.css","D2App/shared/components/forms/FormRow.module.css","D2App/sms-command/views/SmsCommandAdd/SmsCommandAdd.module.css","D2App/sms-command/components/FieldSpecialCharacter/FieldSpecialCharacter.module.css","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/AddFormulaButton.module.css","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.module.css","D2App/sms-command/components/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.module.css","D2App/sms-command/views/SmsCommandEdit/SmsCommandEdit.module.css","D2App/shared/components/dataList/ListActions.module.css","D2App/shared/components/text/Paragraph.module.css","D2App/sms-command/views/SmsCommandList/SmsCommandList.module.css","D2App/sms-gateway/components/ActionAddKeyValuePair/ActionAddKeyValuePair.module.css","D2App/sms-gateway/components/FieldKeyValuePair/FieldKeyValuePair.module.css","D2App/sms-gateway/views/SmsGatewayAdd/SmsGatewayAdd.module.css","D2App/sms-gateway/views/SmsGatewayEdit/SmsGatewayEdit.module.css","D2App/sms-gateway/views/SmsGatewayList/GatewaysTable.module.css","D2App/sms-gateway/views/SmsGatewayList/List.module.css","D2App/sms-gateway/views/SmsGatewayList/SmsGatewayList.module.css","D2App/locales/index.js","D2App/shared/components/notifications/AlertContext.js","D2App/shared/utils/dataTest/dataTest.js","D2App/shared/utils/useSubmit/useSubmit.js","D2App/shared/components/notifications/AlertHandler.js","D2App/AppWrapper.js","D2App/shared/components/layout/LayoutContainer.js","D2App/shared/components/layout/LayoutContent.js","D2App/shared/components/layout/LayoutSidebar.js","D2App/shared/components/navigation/NavigationItem.js","D2App/shared/components/navigation/Navigation.js","D2App/shared/components/headline/PageHeadline.js","D2App/shared/components/headline/PageSubHeadline.js","D2App/sms-overview/components/HomeCard/HomeCard.js","D2App/sms-overview/views/Overview/Overview.js","D2App/routes/index.js","D2App/shared/components/delete_selected_button/DeleteSelectedButton.js","D2App/shared/components/hooks/useQueryParams.js","D2App/sms-received/utils/translations/translations.js","D2App/sms-received/components/Filter/Filter.js","D2App/shared/components/pagination/Pagination.js","D2App/shared/components/sms_table/SmsTable.js","D2App/shared/components/time/Date.js","D2App/shared/components/time/Time.js","D2App/sms-received/components/ReceivedSmsTable/ReceivedSmsTable.js","D2App/sms-received/views/ReceivedSmsList/ReceivedSmsList.js","D2App/routes/received.js","D2App/sms-sent/utils/translations/translations.js","D2App/sms-sent/components/SentSmsTable/SentSmsTable.js","D2App/sms-sent/components/StatusFilter/StatusFilter.js","D2App/sms-sent/views/SentSmsList/SentSmsList.js","D2App/routes/sent.js","D2App/shared/components/dataSet/FieldDataSet.js","D2App/shared/components/dataSet/useReadDataSetsQuery.js","D2App/shared/components/dataSet/FieldDataSetWithAutoLoad.js","D2App/shared/components/forms/FormRow.js","D2App/shared/components/userGroup/FieldUserGroup.js","D2App/shared/components/userGroup/useReadUserGroupsQuery.js","D2App/shared/components/userGroup/FieldUserGroupWithAutoLoad.js","D2App/sms-command/components/FieldCommandName/FieldCommandName.js","D2App/sms-command/components/FieldParser/parserTypes.js","D2App/sms-command/components/FieldParser/FieldParser.js","D2App/sms-command/components/FieldProgram/FieldProgram.js","D2App/sms-command/components/FieldProgram/useReadProgramsQuery.js","D2App/sms-command/components/FieldProgram/FieldProgramWithAutoLoad.js","D2App/sms-command/components/FieldProgramStage/FieldProgramStage.js","D2App/sms-command/components/FieldProgramStage/useReadProgramStagesQuery.js","D2App/sms-command/components/FieldProgramStage/FieldProgramStageWithLoadingStates.js","D2App/sms-command/hooks/useCreateSmsCommandMutation.js","D2App/sms-command/hooks/useDeleteSmsCommandMutation.js","D2App/sms-command/hooks/useReadSmsCommandParserTypeQuery.js","D2App/sms-command/hooks/useReadSmsCommandsQuery.js","D2App/sms-command/views/SmsCommandAdd/SmsCommandAdd.js","D2App/shared/components/cancelDialog/CancelDialog.js","D2App/shared/components/ContentLoading/ContentLoading.js","D2App/shared/components/ContentLoadingError/ContentLoadingError.js","D2App/sms-command/components/FieldConfirmMessage/FieldConfirmMessage.js","D2App/sms-command/components/FormActions/SaveCommandButton.js","D2App/sms-command/components/FormActions/FormActions.js","D2App/sms-command/components/SubmitErrors/SubmitErrors.js","D2App/sms-command/components/FormAlertParser/useAlertDataQuery.js","D2App/sms-command/components/FormAlertParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormAlertParser/FormAlertParser.js","D2App/sms-command/components/FormAlertParser/createInitialValues.js","D2App/sms-command/components/FormAlertParser/createUserGroupOptions.js","D2App/sms-command/components/FieldDefaultMessage/FieldDefaultMessage.js","D2App/sms-command/components/FieldMoreThanOneOrgUnitMessage/FieldMoreThanOneOrgUnitMessage.js","D2App/sms-command/components/FieldNoUserMessage/FieldNoUserMessage.js","D2App/sms-command/components/FieldSmsCode/FieldSmsCode.js","D2App/sms-command/components/FieldProgramStageDataElements/FieldProgramStageDataElements.js","D2App/sms-command/components/FieldSeparator/FieldSeparator.js","D2App/sms-command/components/FieldSuccessMessage/FieldSuccessMessage.js","D2App/sms-command/components/FieldWrongFormatMessage/FieldWrongFormatMessage.js","D2App/sms-command/components/FormEventRegistrationParser/FormComponent.js","D2App/sms-command/components/FormEventRegistrationParser/useCommandQuery.js","D2App/sms-command/components/FormEventRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormEventRegistrationParser/FormEventRegistrationParser.js","D2App/sms-command/components/FormEventRegistrationParser/getInitialFormState.js","D2App/sms-command/components/FieldSpecialCharacter/FieldSpecialCharacter.js","D2App/sms-command/components/AddSpecialCharacters/AddSpecialCharacters.js","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/AddFormulaButton.js","D2App/shared/components/dataElement/useReadDataElementsOfDataSetQuery.js","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/CurrentFormula.js","D2App/sms-command/components/FieldDataElementWithCategoryOptionCombo/FieldDataElementWithCategoryOptionCombo.js","D2App/sms-command/components/FieldCompletenessMethod/completenessMethods.js","D2App/sms-command/components/FieldCompletenessMethod/FieldCompletenessMethod.js","D2App/sms-command/components/DataElementTimesCategoryOptionCombos/CompletenessMessage.js","D2App/sms-command/components/DataElementTimesCategoryOptionCombos/DataElementTimesCategoryOptionCombos.js","D2App/sms-command/components/FieldUseCurrentPeriodForReporting/FieldUseCurrentPeriodForReporting.js","D2App/sms-command/components/FormJ2meParser/FormComponent.js","D2App/sms-command/utils/getSmsCodeDuplicates/getSmsCodeDuplicates.js","D2App/sms-command/components/FormJ2meParser/globalValidate.js","D2App/sms-command/components/FormJ2meParser/useCommandData.js","D2App/sms-command/components/FormJ2meParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormJ2meParser/FormJ2meParser.js","D2App/sms-command/components/FormJ2meParser/getInitialFormState.js","D2App/sms-command/components/FormKeyValueParser/FormComponent.js","D2App/sms-command/components/FormKeyValueParser/globalValidate.js","D2App/sms-command/components/FormKeyValueParser/useCommandData.js","D2App/sms-command/components/FormKeyValueParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormKeyValueParser/FormKeyValueParser.js","D2App/sms-command/components/FormKeyValueParser/getInitialFormState.js","D2App/sms-command/components/FormProgramStageDataEntryParser/FormComponent.js","D2App/sms-command/components/FormProgramStageDataEntryParser/useCommandData.js","D2App/sms-command/components/FormProgramStageDataEntryParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormProgramStageDataEntryParser/FormProgramStageDataEntryParser.js","D2App/sms-command/components/FormProgramStageDataEntryParser/formatSmsCodes.js","D2App/sms-command/components/FormProgramStageDataEntryParser/getInitialFormState.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/FormComponent.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/useCommandData.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/FormTrackedEntityRegistrationParser.js","D2App/sms-command/components/FormTrackedEntityRegistrationParser/formatSmsCodes.js","D2App/sms-command/components/FormUnregisteredParser/useCommandData.js","D2App/sms-command/components/FormUnregisteredParser/useUpdateCommandMutation.js","D2App/sms-command/components/FormUnregisteredParser/FormUnregisteredParser.js","D2App/sms-command/views/SmsCommandEdit/SmsCommandEdit.js","D2App/shared/components/dataList/ListActions.js","D2App/shared/components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","D2App/shared/components/text/Paragraph.js","D2App/sms-command/views/SmsCommandList/SmsCommandList.js","D2App/routes/sms-command.js","D2App/routes/sms-command/[id].js","D2App/routes/sms-command/new.js","D2App/sms-gateway/components/ActionAddKeyValuePair/ActionAddKeyValuePair.js","D2App/sms-gateway/components/FieldAuthToken/FieldAuthToken.js","D2App/sms-gateway/components/FieldBindType/FieldBindType.js","D2App/sms-gateway/components/FieldCompressed/FieldCompressed.js","D2App/sms-gateway/components/FieldConfigurationTemplate/FieldConfigurationTemplate.js","D2App/sms-gateway/components/FieldContentType/FieldContentType.js","D2App/sms-gateway/components/FieldGatewayName/FieldGatewayName.js","D2App/sms-gateway/components/FieldHost/FieldHost.js","D2App/sms-gateway/components/FieldKeyValuePair/ValueField.js","D2App/sms-gateway/components/FieldKeyValuePair/FieldKeyValuePair.js","D2App/sms-gateway/components/FieldNumberPlanIndicator/FieldNumberPlanIndicator.js","D2App/sms-gateway/components/FieldPassword/FieldPassword.js","D2App/sms-gateway/components/FieldPasswordConfirmation/FieldPasswordConfirmation.js","D2App/sms-gateway/components/FieldPort/FieldPort.js","D2App/sms-gateway/components/FieldSendUrlParameters/FieldSendUrlParameters.js","D2App/sms-gateway/components/FieldSystemId/FieldSystemId.js","D2App/sms-gateway/components/FieldSystemType/FieldSystemType.js","D2App/sms-gateway/components/FieldTypeOfNumber/FieldTypeOfNumber.js","D2App/sms-gateway/components/FieldUrlTemplate/FieldUrlTemplate.js","D2App/sms-gateway/components/FieldUseGet/FieldUseGet.js","D2App/sms-gateway/components/FieldUsername/FieldUsername.js","D2App/sms-gateway/components/FormBulkSMS/FormBulkSMS.js","D2App/sms-gateway/components/FormClickatell/FormClickatell.js","D2App/sms-gateway/components/FormGeneric/FormGeneric.js","D2App/sms-gateway/components/FormSMPP/FromSMPP.js","D2App/sms-gateway/utils/createGenericGateWayDataFromVariables/createGenericGateWayDataFromVariables.js","D2App/sms-gateway/utils/gatewayTypes/gatewayTypes.js","D2App/sms-gateway/views/SmsGatewayAdd/useCreateBulkSMSGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayAdd/useCreateClickatellGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayAdd/useCreateGenericGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayAdd/useCreateSMPPGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayAdd/SmsGatewayAdd.js","D2App/sms-gateway/views/SmsGatewayEdit/useReadGatewayQuery.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateBulkSMSGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateClickatellGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateGenericGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/useUpdateSMPPGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayEdit/SmsGatewayEdit.js","D2App/sms-gateway/views/SmsGatewayList/getTypeLabelByType.js","D2App/sms-gateway/views/SmsGatewayList/GatewaysTable.js","D2App/sms-gateway/views/SmsGatewayList/List.js","D2App/sms-gateway/views/SmsGatewayList/useDeleteGatewaysMutation.js","D2App/sms-gateway/views/SmsGatewayList/useReadGatewaysQuery.js","D2App/sms-gateway/views/SmsGatewayList/useSetDefaultGatewayMutation.js","D2App/sms-gateway/views/SmsGatewayList/SmsGatewayList.js","D2App/routes/sms-gateway.js","D2App/routes/sms-gateway/[id].js","D2App/routes/sms-gateway/new.js","D2App/App.js"],"names":["module","exports","namespace","i18n","addResources","arTranslations","ar_IQTranslations","bnTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","AlertContext","createContext","addAlert","Error","dataTest","name","prefix","concat","FORM_ERROR","FinalForm","useSubmit","onSubmit","useContext","args","catch","e","message","t","type","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","AlertHandler","children","alerts","setAlerts","useState","React","createElement","Provider","value","alert","timestamp","Date","now","AlertStack","map","AlertBar","AppWrapper","CssVariables","spacers","colors","HashRouter","QueryParamProvider","ReactRouterRoute","Route","LayoutContainer","className","styles","container","LayoutContent","content","LayoutSidebar","sidebar","NavigationItem","label","path","exactMatch","history","useHistory","active","routeMatch","useRouteMatch","isExact","useIsItemActive","MenuItem","item","onClick","push","defualtProps","Navigation","Menu","PageHeadline","headline","PageSubHeadline","subHeadline","HomeCard","titleText","bodyText","linkText","to","Card","s","title","body","linkContainer","Link","link","Overview","nsSeparator","explanation","grid","gridItem","RouteHome","inboundMutation","resource","params","ids","outboundMutation","DeleteSelectedButton","selectedIds","onComplete","mutation","mutate","useDataMutation","onError","error","Button","destructive","join","disabled","useQueryParams","_useQueryParams","status","withDefault","StringParam","phoneNumber","page","NumberParam","pageSize","translations","ALL","FAILED","INCOMING","PROCESSED","PROCESSING","SENT","UNHANDLED","STATUS_FILTER_OPTIONS","Filter","setStatus","setPhoneNumber","onReset","inputStrip","SingleSelectField","inputWidth","onChange","selected","SingleSelectOption","InputField","large","PAGE_LENGTHS","Pagination","pageCount","total","firstItem","Math","min","lastItem","availablePages","Array","from","_x","toString","setQueryParams","setPage","verticalAlign","SingleSelect","dense","setPageSize","select","summary","buttonPrevious","small","availablePage","buttonNext","SmsTable","messages","pager","setSelectedIds","columns","rowRenderFn","selectedIdSet","Set","allSelected","Table","TableHead","TableRowHead","TableCellHead","Checkbox","id","checked","column","TableBody","TableRow","TableCell","colSpan","String","noResults","has","toggle","delete","add","TableFoot","date","formatted","moment","format","Time","time","ReceivedSmsTable","_message$user","_message$user$userCre","Fragment","text","originator","smsstatus","user","userCredentials","username","receiveddate","RECEIVED_SMS_LIST_LABEL","query","inboundSms","fields","order","filters","filter","ReceivedSmsList","_data$inboundSms","queryParams","called","loading","data","refetch","useDataQuery","lazy","callback","debouncedRefetch","useDebouncedCallback","leading","useEffect","msg","NoticeBox","inboundsmss","header","undefined","CenteredContent","CircularLoader","RouteSmsCommand","DELIVERED","ERROR","OUTBOUND","PENDING","SCHEDULED","SentSmsTable","recipients","recipient","index","all","StatusFilter","SENT_SMS_LIST_LABEL","sms","SentSmsList","_data$sms","outboundsmss","Field","ReactFinalForm","FIELD_DATA_SET_NAME","FieldDataSet","dataSets","required","errorText","validationText","component","SingleSelectFieldFF","options","validate","hasValue","parse","defaultProps","DATA_SETS_QUERY","paging","FieldDataSetWithAutoLoad","showLoadingStatus","programs","displayName","FormRow","cx","formRow","FieldUserGroup","userGroups","USER_GROUPS_QUERY","FieldUserGroupWithAutoLoad","FIELD_COMMAND_NAME","FieldCommandName","InputFieldFF","composeValidators","string","KEY_VALUE_PARSER","J2ME_PARSER","ALERT_PARSER","UNREGISTERED_PARSER","TRACKED_ENTITY_REGISTRATION_PARSER","PROGRAM_STAGE_DATAENTRY_PARSER","EVENT_REGISTRATION_PARSER","values","commandTypes","sort","a","b","FIELD_PARSER_NAME","FieldParser","FIELD_PROGRAM_NAME","FieldProgram","PROGRAMS_WITH_REGISTRATION","PROGRAMS_WITHOUT_REGISTRATION","ALL_PROGRAMS","PROGRAMS_QUERY","registration","useForm","FieldProgramWithAutoLoad","form","variables","useReadProgramsQuery","change","FIELD_PROGRAM_STAGE_NAME","FieldProgramStage","programStages","initialValue","iinitialValue","PROGRAM_STAGES_QUERY","programId","FieldProgramStageWithLoadingStates","parserType","_data$programStages2","_data$programStages3","useReadProgramStagesQuery","_data$programStages","_data$programStages$p","isEventRegistrationParser","programStageValueForEventRegistration","CREATE_SMS_COMMAND_MUTATION","dataset","userGroup","program","programStage","DELETE_SMS_COMMAND_MUTATION","useDeleteSmsCommandMutation","setLoading","setError","idToMutationRequest","engine","idToMutationRequestFactory","useDataEngine","onDone","response","Promise","then","READ_SMS_COMMAND_PARSER_TYPE_QUERY","smsCommand","SMS_COMMANDS_QUERY","smsCommands","Form","ActualForm","handleSubmit","submitting","prevValues","setPrevValues","getState","subscribe","batch","prevProgram","prevParserType","useResetFormFields","showDataSetField","showUserGroupField","showProgramField","showProgramStageField","shouldProgramsBeWithRegistration","disableProgramStage","helpText","ButtonStrip","primary","icon","goBack","SmsCommandAdd","createSmsCommand","useCreateSmsCommandMutation","destroyOnUnregister","CancelDialog","onConfirmCancel","onAbortCancel","Modal","ModalTitle","ModalActions","ContentLoading","ContentLoadingError","errorMessage","FieldConfirmMessage","TextAreaFieldFF","useFormState","subscription","pristine","SaveCommandButton","enabled","FormActions","enableSubmit","onCancel","submitError","hasSubmitErrors","SubmitErrors","ALERT_DATA_QUERY","commandId","updateAlertParserMutation","partial","receivedMessage","FormAlertParser","onAfterChange","useAlertDataQuery","updateCommand","useUpdateCommandMutation","initialValues","createInitialValues","keepDirtyOnReinitialize","FIELD_DEFAULT_MESSAGE_NAME","FieldDefaultMessage","FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME","FieldMoreThanOneOrgUnitMessage","FIELD_NO_USER_MESSAGE_NAME","FieldNoUserMessage","FIELD_SMS_CODES_NAME","FieldSmsCode","valueType","smsCode","code","nextCode","trackedEntityAttribute","FieldProgramStageDataElements","programStageDataElements","smsCodes","dataElement","FIELD_SEPARATOR_NAME","FieldSeparator","FIELD_SUCCESS_MESSAGE_NAME","FieldSuccessMessage","FIELD_WRONG_FORMAT_MESSAGE_NAME","FieldWrongFormatMessage","FormComponent","selectedProgramOption","selectedProgramStageOption","READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY","updateEventRegistrationParserMutation","command","separator","defaultMessage","wrongFormatMessage","noUserMessage","moreThanOneOrgUnitMessage","successMessage","FormEventRegistrationParser","reduce","curSmsCodes","getInitialFormState","FIELD_SPECIAL_CHARS_NAME","FieldSpecialCharacter","onSpecialKeyRemoved","field","UiField","button","specialChars","newSpecialChars","slice","AddSpecialCharacters","useField","DATA_ELEMENTS_QUERY","AddFormulaButton","baseName","formulaDataElementName","setFormulaDataElementName","input","formula","operator","dataElementId","finally","formulaInWords","formulaInWordsLabel","dataSet","useReadDataElementsOfDataSetQuery","dataSetId","setData","dataSetElements","left","right","leftDisplayName","rightDisplayName","queryDataElementsOfDataSet","CurrentFormula","combo","targetFieldName","onClose","initialFormula","useMemo","dataElementCode","modalDataTest","onRemove","newFormula","event","stopPropagation","ModalContent","FieldDataElementWithCategoryOptionCombo","categoryOptionCombo","showFormula","setShowFormula","cocCode","DE_COC_toFormName","formulaName","invalid","touched","meta","rest","codeField","formulaFieldName","ALL_DATAVALUE","AT_LEAST_ONE_DATAVALUE","DO_NOT_MARK_COMPLETE","completenessMethods","FIELD_COMPLETENESS_METHOD_NAME","FieldCompletenessMethod","CompletenessMessage","completenessMethod","warning","DataElementTimesCategoryOptionCombos","DE_COC_combinations","allRequired","FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME","FieldUseCurrentPeriodForReporting","CheckboxFieldFF","FormSpy","DE_COC_combination_data","hasSpecialChars","selectedDataSetOption","specialKeyRemoved","setSpecialKeyRemoved","_","getSmsCodeDuplicates","curDuplicates","includes","potentialDuplicates","curCode","curIndex","newlyFoundDuplicates","curWithCodeDuplicates","curName","globalValidate","hasErrors","errors","smsCodesFormState","smsCodesWithValue","entries","duplicates","duplicateErrors","forEach","duplicate","READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY","replace","updateJ2meParserMutation","useCurrentPeriodForReporting","specialCharacters","compulsory","optionId","split","formattedSmsCode","FormJ2meParser","createDataTestValue","loadingCommandError","commandData","useCommandData","acc","curCombinations","_dataElement$category","categoryCombo","combos","COC","dirty","updateKeyValueParserMutation","FormKeyValueParser","READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY","REPLACE_SMS_COMMAND_MUTATION","FormProgramStageDataEntryParser","programStageId","allVariables","updates","dynamicFields","dynamicField","FormTrackedEntityRegistrationParser","vars","smsCodesOriginal","programTrackedEntityAttributes","merged","UPDATE_COMMAND_MUTATION","FormUnregisteredParser","isParserType","parser","SmsCommandEdit","useParams","useReadSmsCommandParserTypeQuery","showCancelDialog","setShowCancelDialog","isParser","bind","getSmsCommandEditFormComponent","ListActions","addLabel","deleteLabel","dataTestProp","onAddClick","onDeleteClick","disableAdd","disableDelete","DeleteConfirmationDialog","onCancelClick","secondary","Paragraph","paragraph","SMS_COMMAND_LIST_LABEL","SmsCommandList","_data$smsCommands2","_data$smsCommands2$sm","_data$smsCommands3","_data$smsCommands3$sm","_data$smsCommands4","_data$smsCommands4$sm","checkedSmsCommands","setCheckedSmsCommands","showDeleteConfirmationDialog","setShowDeleteConfirmationDialog","loadingReadSmsCommands","errorReadSmsCommands","deleteSmsCommands","loadingDelete","errorDelete","allChecked","hasCommands","async","_data$smsCommands","checkbox","find","checkedId","findIndex","toggleSmsCommand","parserTypes","getLabelByParserTypes","editButtonCell","RouteSmsCommandEdit","RouteSmsCommandNew","ActionAddKeyValuePair","parameters","encode","confidential","FieldAuthToken","FieldBindType","defaultValue","FieldCompressed","FieldConfigurationTemplate","optionApplicationJson","optionApplicationXml","optionFormUrlEncoded","optionTextPlain","FieldContentType","FieldGatewayName","FieldHost","isStringWithLengthAtLeastOne","createFieldGatewayKeyValuePairValueName","ValueField","FieldKeyValuePair","textInputs","keyInput","valueInput","checkboxGroup","removeKeyValueFromFormState","FieldNumberPlanIndicator","FIELD_PASSWORD_NAME","FIELD_PASSWORD_LABEL","FieldPassword","equalToPassword","createEqualTo","FIELD_PASSWORD_CONFIRMATION_NAME","FieldPasswordConfirmation","FieldPort","integer","FieldSendUrlParameters","FieldSystemId","FieldSystemType","FieldTypeOfNumber","FieldUrlTemplate","url","FieldUseGet","FieldUsername","FormBulkSMS","submitText","FormClickatell","FormGeneric","FormSMPP","createGenericGateWayDataFromVariables","configurationTemplate","contentType","sendUrlParameters","urlTemplate","useGet","GENERIC_FORM","BULK_SMS_FORM","CLICKATELL_FORM","SMPP_FORM","CREATE_BULK_SMS_GATEWAY_MUTATION","password","CREATE_CLICKATELL_GATEWAY_MUTATION","authToken","CREATE_GENERIC_GATEWAY_MUTATION","CREATE_SMPP_GATEWAY_MUTATION","systemId","host","systemType","numberPlanIndicator","typeOfNumber","bindType","port","compressed","SmsGatewayAdd","visibleForm","setVisibleForm","saveGenericGateway","saveGenericGatewayError","saveBulkSMSGateway","saveBulkSMSGatewayError","saveClickatellGateway","saveClickatellGatewayError","saveSMPPGateway","saveSMPPGatewayError","reject","passwordRequired","GATEWAY_QUERY","gateway","useUpdateGatewayMutation","updatedQuery","UPDATE_BULK_SMS_GATEWAY_MUTATION","UPDATE_CLICKATELL_GATEWAY_MUTATION","UPDATE_GENERIC_GATEWAY_MUTATION","UPDATE_SMPP_GATEWAY_MUTATION","SmsGatewayEdit","_data$gateway","loadError","jsonData","useReadGatewayQuery","saveError","JSON","gatewayType","getFormComponent","uid","formValues","GatewaysTable","allGatewaysChecked","checkedGateways","gateways","onGatewayToggle","onToggleAll","onMakeDefaultClick","checkboxCell","typeCell","defaultCell","isDefault","isDefaultText","makeDefaultButton","editCell","rowActions","List","setCheckedGateways","processing","processingMessage","loadingContainer","curId","newCheckedGateways","allGatewayIds","DELETE_GATEWAY_MUTATION","useDeleteGatewaysMutation","GATEWAYS_QUERY","SET_DEFAULT_GATEWAY_MUTATION","GATEWAY_CONFIG_LIST_LABEL","SmsGatewayList","_data$gateways","_data$gateways$gatewa","showDeleteDialog","setShowDeleteDialog","loadingReadGateways","errorReadGateways","refetchReadGateways","_parsedData$gateways","parsedData","useReadGatewaysQuery","deleteCheckedGateways","makeGatewayDefault","loadingSetDefault","errorSetDefault","hasGateways","info","App","Switch","exact","Home","SmsGateway","SmsGatewayNew","SmsCommand","SmsCommandNew","SentSms","ReceivedSms","Redirect"],"mappings":"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","file":"static/js/app.2f4dee0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LayoutContainer_container__qDz61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"LayoutContent_content__2WYD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"LayoutSidebar_sidebar__ssy3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavigationItem_item__2DrUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"PageHeadline_headline__1as2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subHeadline\":\"PageSubHeadline_subHeadline__eKzXn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeCard_container__2_4oT\",\"title\":\"HomeCard_title__1h3-S\",\"body\":\"HomeCard_body__YIp9B\",\"linkContainer\":\"HomeCard_linkContainer__3Rb2j\",\"link\":\"HomeCard_link__3hzDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Overview_container__hL9KW\",\"explanation\":\"Overview_explanation__1q-6u\",\"grid\":\"Overview_grid__2XUeN\",\"gridItem\":\"Overview_gridItem__se8wD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__6Uy3A\",\"inputStrip\":\"Filter_inputStrip__1w8ht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__fuBgU\",\"verticalAlign\":\"Pagination_verticalAlign__20Arz\",\"select\":\"Pagination_select__15i-1\",\"buttonPrevious\":\"Pagination_buttonPrevious__20viW\",\"buttonNext\":\"Pagination_buttonNext__1gggb\",\"summary\":\"Pagination_summary__1jaey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noResults\":\"SmsTable_noResults__1g3dM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"Date_date__4Mkpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Time_time__1Fzgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"originator\":\"ReceivedSmsTable_originator__2iHzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReceivedSmsList_container__27QE0\",\"header\":\"ReceivedSmsList_header__LEQ4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipient\":\"SentSmsTable_recipient__1G9gI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatusFilter_container__3t9PY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SentSmsList_container__20Oko\",\"header\":\"SentSmsList_header__1pw0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"FormRow_formRow__1hG2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandAdd_container__2_-Vp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldSpecialCharacter_container__3zcym\",\"field\":\"FieldSpecialCharacter_field__SzfMI\",\"button\":\"FieldSpecialCharacter_button__3YsNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formulaInWords\":\"AddFormulaButton_formulaInWords__2GUPT\",\"formulaInWordsLabel\":\"AddFormulaButton_formulaInWordsLabel__2CiMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldDataElementWithCategoryOptionCombo_container__329sF\",\"field\":\"FieldDataElementWithCategoryOptionCombo_field__3qsDp\",\"codeField\":\"FieldDataElementWithCategoryOptionCombo_codeField__3wm3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"DataElementTimesCategoryOptionCombos_formRow__-9rkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandEdit_container__CzgJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListActions_container__ACKLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"Paragraph_paragraph__8BkVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsCommandList_container__KFvaC\",\"editButtonCell\":\"SmsCommandList_editButtonCell__3x4lr\",\"checkbox\":\"SmsCommandList_checkbox__2b1qp\",\"noResults\":\"SmsCommandList_noResults__1WLMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ActionAddKeyValuePair_button__1uP5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FieldKeyValuePair_container__1s-qZ\",\"textInputs\":\"FieldKeyValuePair_textInputs__wZ6zt\",\"keyInput\":\"FieldKeyValuePair_keyInput__OXg8h\",\"valueInput\":\"FieldKeyValuePair_valueInput__Bvkak\",\"checkboxGroup\":\"FieldKeyValuePair_checkboxGroup__16tpk\",\"checkbox\":\"FieldKeyValuePair_checkbox__3Wvdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsGatewayAdd_container__S_qTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsGatewayEdit_container__pW5ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowActions\":\"GatewaysTable_rowActions__3EFWD\",\"checkboxCell\":\"GatewaysTable_checkboxCell__2WECk\",\"typeCell\":\"GatewaysTable_typeCell__2V26D\",\"editCell\":\"GatewaysTable_editCell__1kUz-\",\"defaultCell\":\"GatewaysTable_defaultCell__1FPU1\",\"makeDefaultButton\":\"GatewaysTable_makeDefaultButton__39VFH\",\"isDefaultText\":\"GatewaysTable_isDefaultText__3MHuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__1VUV6\",\"processingMessage\":\"List_processingMessage__3i4m_\",\"loadingContainer\":\"List_loadingContainer__3xaPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmsGatewayList_container__2tPkX\",\"actions\":\"SmsGatewayList_actions__2fKK0\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport bnTranslations from './bn/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('bn', namespace, bnTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { createContext } from 'react';\nexport const AlertContext = /*#__PURE__*/createContext({\n  addAlert: () => {\n    throw new Error('AlertContext has not been initialized yet!');\n  }\n});","const defaultPrefix = 'dhis2-smsconfiguration';\nexport const dataTest = (name, prefix = defaultPrefix) => \"\".concat(prefix, \"-\").concat(name);","import { FinalForm } from '@dhis2/ui';\nimport { useContext } from 'react';\nimport i18n from '../../../locales';\nimport { AlertContext } from '../../components/notifications';\nconst {\n  FORM_ERROR\n} = FinalForm;\nexport const useSubmit = onSubmit => {\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  return (...args) => onSubmit(...args).catch(e => {\n    const message = e.message || i18n.t('No error message was provided'); // Notify on unexpected errors\n\n    addAlert({\n      type: 'critical',\n      message: e.message\n    });\n    return {\n      [FORM_ERROR]: message\n    };\n  });\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { dataTest } from '../../utils';\nimport { AlertContext } from './AlertContext';\nexport const AlertHandler = ({\n  children\n}) => {\n  const [alerts, setAlerts] = useState([]);\n\n  const addAlert = ({\n    message,\n    type\n  }) => {\n    const alert = {\n      message,\n      type,\n      // Ensure that identical messages can be distinguished\n      timestamp: Date.now()\n    };\n    setAlerts([...alerts, alert]);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      addAlert\n    }\n  }, children, /*#__PURE__*/React.createElement(AlertStack, {\n    dataTest: dataTest('notifications-alerthandler')\n  }, alerts.map(({\n    message,\n    type,\n    timestamp\n  }) => /*#__PURE__*/React.createElement(AlertBar, _extends({\n    dataTest: dataTest('notifications-alert'),\n    key: \"\".concat(message).concat(timestamp)\n  }, {\n    [type]: true\n  }), message))));\n};\nAlertHandler.propTypes = {\n  children: PropTypes.any\n};","import './locales';\nimport { CssVariables } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { AlertHandler } from './shared/components/notifications';\nexport const AppWrapper = ({\n  children\n}) => /*#__PURE__*/React.createElement(AlertHandler, null, /*#__PURE__*/React.createElement(CssVariables, {\n  spacers: true,\n  colors: true\n}), /*#__PURE__*/React.createElement(HashRouter, null, /*#__PURE__*/React.createElement(QueryParamProvider, {\n  ReactRouterRoute: Route\n}, children)));\nAppWrapper.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './LayoutContainer.module.css';\nexport const LayoutContainer = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container,\n  \"data-test\": dataTest('app')\n}, children);\nLayoutContainer.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutContent.module.css';\nexport const LayoutContent = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"main\", {\n  className: styles.content\n}, children);\nLayoutContent.propTypes = {\n  children: PropTypes.any.isRequired\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './LayoutSidebar.module.css';\nexport const LayoutSidebar = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.sidebar\n}, children);\nLayoutSidebar.propTypes = {\n  children: PropTypes.any.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { MenuItem } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { dataTest } from '../../utils';\nimport styles from './NavigationItem.module.css';\n\nconst useIsItemActive = (path, exactMatch) => {\n  const routeMatch = useRouteMatch(path);\n  if (!routeMatch) return false;\n  if (exactMatch) return routeMatch.isExact;\n  return true;\n};\n\nexport const NavigationItem = ({\n  label,\n  path,\n  exactMatch\n}) => {\n  const history = useHistory();\n  const active = useIsItemActive(path, exactMatch);\n\n  const navigateToPath = () => history.push(path);\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    className: styles.item,\n    onClick: navigateToPath,\n    active: active,\n    label: label,\n    dataTest: dataTest('navigation-navigationitem')\n  });\n};\nNavigationItem.defualtProps = {\n  exactMatch: false\n};\nNavigationItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  exactMatch: PropTypes.bool\n};","import { Menu } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../utils';\nimport { NavigationItem } from './NavigationItem';\nexport const Navigation = () => /*#__PURE__*/React.createElement(Menu, {\n  dataTest: dataTest('navigation-navigation')\n}, /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/home\",\n  label: i18n.t('Home'),\n  exactMatch: true\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-gateway\",\n  label: i18n.t('Gateway configuration')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sms-command\",\n  label: i18n.t('Commands')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/sent\",\n  label: i18n.t('Sent')\n}), /*#__PURE__*/React.createElement(NavigationItem, {\n  path: \"/received\",\n  label: i18n.t('Received')\n}));","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './PageHeadline.module.css';\nexport const PageHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h1\", {\n  className: styles.headline,\n  \"data-test\": dataTest('headline-pageheadline')\n}, children);\nPageHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './PageSubHeadline.module.css';\nexport const PageSubHeadline = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"h2\", {\n  className: styles.subHeadline,\n  \"data-test\": dataTest('headline-pagesubheadline')\n}, children);\nPageSubHeadline.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport s from './HomeCard.module.css';\nexport const HomeCard = ({\n  titleText,\n  bodyText,\n  linkText,\n  to\n}) => {\n  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.container\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: s.title\n  }, titleText), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.body\n  }, bodyText), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.linkContainer\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: to\n  }, linkText))));\n};\nHomeCard.propTypes = {\n  bodyText: PropTypes.string.isRequired,\n  linkText: PropTypes.string.isRequired,\n  titleText: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired\n};","import React from 'react';\nimport i18n from '../../../locales';\nimport { PageHeadline } from '../../../shared/components/headline';\nimport { dataTest } from '../../../shared/utils';\nimport { HomeCard } from '../../components/HomeCard';\nimport s from './Overview.module.css';\nexport const OVERVIEW_PATH = '/';\nexport const OVERVIEW_LABEL = 'Overview';\nexport const Overview = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-home'),\n    className: s.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Overview: SMS Configuration', {\n    nsSeparator: '>'\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.explanation\n  }, i18n.t('Configure settings for SMS sending, receiving, data reporting, alerts, registration and more.')), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.grid\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Gateway Configuration'),\n    bodyText: i18n.t('Add and manage gateways for sending and receiving SMS messages in DHIS2.'),\n    linkText: i18n.t('Set up gateways'),\n    to: \"/sms-gateway\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('SMS Commands'),\n    bodyText: i18n.t('Add and manage commands triggered by incoming SMS messages to register, alert and more.'),\n    linkText: i18n.t('Set up SMS commands'),\n    to: \"/sms-command\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Sent SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages sent from DHIS2.'),\n    linkText: i18n.t('View all sent SMS'),\n    to: \"/sent\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.gridItem\n  }, /*#__PURE__*/React.createElement(HomeCard, {\n    titleText: i18n.t('Received SMS messages'),\n    bodyText: i18n.t('Open logs of all SMS messages received by DHIS2.'),\n    linkText: i18n.t('View all received SMS'),\n    to: \"/received\"\n  }))));\n};","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../shared/components/layout';\nimport { Navigation } from '../shared/components/navigation';\nimport { Overview } from '../sms-overview';\n\nconst RouteHome = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(Overview, null)));\n\nexport default RouteHome;","import { useDataMutation } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button } from '@dhis2/ui';\nimport React, { useContext } from 'react';\nimport { AlertContext } from '../notifications';\nconst inboundMutation = {\n  resource: 'sms/inbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nconst outboundMutation = {\n  resource: 'sms/outbound',\n  type: 'delete',\n  params: ({\n    ids\n  }) => ({\n    ids\n  })\n};\nexport const DeleteSelectedButton = ({\n  selectedIds,\n  type,\n  onComplete\n}) => {\n  const {\n    addAlert\n  } = useContext(AlertContext);\n  const mutation = type == 'inbound' ? inboundMutation : outboundMutation;\n  const [mutate] = useDataMutation(mutation, {\n    onComplete,\n    onError: error => {\n      addAlert({\n        type: 'critical',\n        message: error.message\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: () => mutate({\n      ids: selectedIds.join()\n    }),\n    disabled: selectedIds.length === 0\n  }, i18n.t('Delete selected'));\n};\nDeleteSelectedButton.propTypes = {\n  selectedIds: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  type: PropTypes.oneOf(['inbound', 'outbound']).isRequired,\n  onComplete: PropTypes.func.isRequired\n};","import { useQueryParams as _useQueryParams, StringParam, NumberParam, withDefault } from 'use-query-params';\nexport const useQueryParams = () => _useQueryParams({\n  status: withDefault(StringParam, 'ALL'),\n  phoneNumber: withDefault(StringParam, ''),\n  page: withDefault(NumberParam, 1),\n  pageSize: withDefault(NumberParam, 50)\n});","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  FAILED: i18n.t('Failed'),\n  INCOMING: i18n.t('Incoming'),\n  PROCESSED: i18n.t('Processed'),\n  PROCESSING: i18n.t('Processing'),\n  SENT: i18n.t('Sent'),\n  UNHANDLED: i18n.t('Unhandled')\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelectField, SingleSelectOption, InputField } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../../shared/utils';\nimport { translations } from '../../utils';\nimport styles from './Filter.module.css'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/incoming/SmsMessageStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'FAILED', 'INCOMING', 'PROCESSED', 'PROCESSING', 'SENT', 'UNHANDLED'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const Filter = ({\n  status,\n  setStatus,\n  phoneNumber,\n  setPhoneNumber,\n  onReset\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('views-receivedsms-filter'),\n  className: styles.container\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.inputStrip\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: \"status-filter\"\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))), /*#__PURE__*/React.createElement(InputField, {\n  label: i18n.t('Filter by phone number'),\n  inputWidth: \"250px\",\n  value: phoneNumber,\n  onChange: ({\n    value\n  }) => setPhoneNumber(value),\n  dataTest: \"phone-number-filter\"\n}), /*#__PURE__*/React.createElement(Button, {\n  large: true,\n  onClick: onReset,\n  dataTest: \"reset-filter-btn\"\n}, i18n.t('Reset filter'))));\nFilter.propTypes = {\n  phoneNumber: PropTypes.string.isRequired,\n  setPhoneNumber: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, SingleSelect, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport { useQueryParams } from '../hooks';\nimport styles from './Pagination.module.css';\nconst PAGE_LENGTHS = ['1', '2', '10', '20', '30', '40', '50', '100'];\nexport const Pagination = ({\n  page,\n  pageCount,\n  pageSize,\n  total\n}) => {\n  const firstItem = Math.min((page - 1) * pageSize + 1, total);\n  const lastItem = Math.min(firstItem + pageSize - 1, total);\n  const availablePages = Array.from({\n    length: pageCount\n  }, (_x, i) => (i + 1).toString());\n  const [, setQueryParams] = useQueryParams();\n\n  const setPage = page => {\n    setQueryParams({\n      page\n    });\n  };\n\n  const setPageSize = pageSize => {\n    setQueryParams({\n      pageSize,\n      page: 1\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, i18n.t('Show'), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    selected: pageSize.toString(),\n    onChange: ({\n      selected\n    }) => setPageSize(selected),\n    className: styles.select\n  }, PAGE_LENGTHS.map(length => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: length,\n    value: length,\n    label: length\n  }))), i18n.t('per page')), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.verticalAlign\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.summary\n  }, i18n.t('Viewing {{firstItem}}-{{lastItem}} of {{total}}', {\n    firstItem,\n    lastItem,\n    total\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonPrevious,\n    small: true,\n    disabled: page === 1,\n    onClick: () => setPage(page - 1)\n  }, i18n.t('Previous')), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Page')), /*#__PURE__*/React.createElement(SingleSelect, {\n    dense: true,\n    inputWidth: \"600px\",\n    selected: page.toString(),\n    onChange: ({\n      selected\n    }) => setPage(selected),\n    className: styles.select\n  }, availablePages.map(availablePage => /*#__PURE__*/React.createElement(SingleSelectOption, {\n    key: availablePage,\n    value: availablePage,\n    label: availablePage\n  }))), /*#__PURE__*/React.createElement(\"span\", null, i18n.t('of {{pageCount}}', {\n    pageCount\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: styles.buttonNext,\n    small: true,\n    disabled: page === pageCount,\n    onClick: () => setPage(page + 1)\n  }, i18n.t('Next'))));\n};\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Checkbox, Table, TableBody, TableCell, TableCellHead, TableFoot, TableHead, TableRow, TableRowHead } from '@dhis2/ui';\nimport React from 'react';\nimport { Pagination } from '../pagination/Pagination';\nimport styles from './SmsTable.module.css';\nexport const SmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds,\n  columns,\n  rowRenderFn\n}) => {\n  const selectedIdSet = new Set(selectedIds);\n  const allSelected = messages.length > 0 && selectedIds.length === messages.length;\n\n  const toggle = id => {\n    if (selectedIdSet.has(id)) {\n      selectedIdSet.delete(id);\n    } else {\n      selectedIdSet.add(id);\n    }\n\n    setSelectedIds(Array.from(selectedIdSet));\n  };\n\n  const toggleAll = () => {\n    if (allSelected) {\n      setSelectedIds([]);\n    } else {\n      setSelectedIds(messages.map(({\n        id\n      }) => id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    disabled: messages.length === 0,\n    onChange: toggleAll,\n    checked: allSelected\n  })), columns.map(column => /*#__PURE__*/React.createElement(TableCellHead, {\n    key: column\n  }, column)))), /*#__PURE__*/React.createElement(TableBody, null, messages.length === 0 ? /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length),\n    className: styles.noResults\n  }, i18n.t('No SMSes to display'))) : messages.map(message => /*#__PURE__*/React.createElement(TableRow, {\n    key: message.id\n  }, /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedIdSet.has(message.id),\n    onChange: () => toggle(message.id)\n  })), rowRenderFn(message)))), /*#__PURE__*/React.createElement(TableFoot, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: String(columns.length)\n  }, /*#__PURE__*/React.createElement(Pagination, pager)))));\n};\nSmsTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  rowRenderFn: PropTypes.func.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Date.module.css';\nexport const Date = ({\n  date\n}) => {\n  const momentDate = moment(date);\n  const formatted = momentDate.format('DD MMM YYYY');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.date\n  }, formatted);\n};\nDate.propTypes = {\n  date: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport styles from './Time.module.css';\nexport const Time = ({\n  time\n}) => {\n  const momentDate = moment(time);\n  const formatted = momentDate.format('HH:mm:ss');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.time\n  }, formatted);\n};\nTime.propTypes = {\n  time: PropTypes.string.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { SmsTable } from '../../../shared/components/sms_table/SmsTable';\nimport { Date, Time } from '../../../shared/components/time';\nimport { translations } from '../../utils';\nimport styles from './ReceivedSmsTable.module.css';\nexport const ReceivedSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Phone number'), i18n.t('Status'), i18n.t('Sender'), i18n.t('Received')],\n  rowRenderFn: message => {\n    var _message$user, _message$user$userCre;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.text), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.originator\n    }, message.originator)), /*#__PURE__*/React.createElement(TableCell, null, translations[message.smsstatus]), /*#__PURE__*/React.createElement(TableCell, null, ((_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$userCre = _message$user.userCredentials) === null || _message$user$userCre === void 0 ? void 0 : _message$user$userCre.username) || i18n.t('Unknown')), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n      date: message.receiveddate\n    }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n      time: message.receiveddate\n    })));\n  }\n});\nReceivedSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport i18n from '../../../locales';\nimport { DeleteSelectedButton } from '../../../shared/components/delete_selected_button/DeleteSelectedButton';\nimport { PageHeadline } from '../../../shared/components/headline';\nimport { useQueryParams } from '../../../shared/components/hooks';\nimport { dataTest } from '../../../shared/utils';\nimport { Filter, ReceivedSmsTable } from '../../components';\nimport styles from './ReceivedSmsList.module.css';\nexport const RECEIVED_SMS_LIST_LABEL = i18n.t('Received');\nexport const RECEIVED_SMS_LIST_PATH = '/received';\n\nconst parseParams = ({\n  page,\n  pageSize,\n  phoneNumber,\n  status\n}) => {\n  const params = {\n    page,\n    pageSize,\n    fields: ['id', 'text', 'originator', 'smsstatus', 'user[userCredentials[username]]', // sender\n    'receiveddate'],\n    order: 'receiveddate:desc'\n  };\n  const filters = [];\n\n  if (phoneNumber) {\n    filters.push(\"originator:ilike:\".concat(phoneNumber));\n  }\n\n  if (status && status !== 'ALL') {\n    filters.push(\"smsstatus:eq:\".concat(status));\n  }\n\n  if (filters.length > 0) {\n    params.filter = filters;\n  }\n\n  return params;\n};\n\nconst query = {\n  inboundSms: {\n    resource: 'sms/inbound',\n    params: parseParams\n  }\n};\nexport const ReceivedSmsList = () => {\n  var _data$inboundSms;\n\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    phoneNumber,\n    status\n  } = queryParams;\n\n  const setPhoneNumber = phoneNumber => {\n    setQueryParams({\n      phoneNumber,\n      page: 1\n    }, 'replaceIn');\n  };\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const handleFilterReset = () => {\n    setQueryParams({\n      phoneNumber: undefined,\n      status: undefined,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n\n  const refetchAndClear = () => {\n    refetch();\n    setSelectedIds([]);\n  };\n\n  const {\n    callback: debouncedRefetch\n  } = useDebouncedCallback(refetch, 500, {\n    leading: true\n  });\n  useEffect(() => {\n    debouncedRefetch({\n      page,\n      pageSize,\n      phoneNumber,\n      status\n    });\n  }, [page, pageSize, phoneNumber, status]);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading received SMSes');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$inboundSms = data.inboundSms) === null || _data$inboundSms === void 0 ? void 0 : _data$inboundSms.inboundsmss) || [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-receivedsmslist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, RECEIVED_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(Filter, {\n    status: status,\n    setStatus: setStatus,\n    phoneNumber: phoneNumber,\n    setPhoneNumber: setPhoneNumber,\n    onReset: handleFilterReset\n  }), /*#__PURE__*/React.createElement(DeleteSelectedButton, {\n    selectedIds: selectedIds,\n    type: \"inbound\",\n    onComplete: refetchAndClear\n  })), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(ReceivedSmsTable, {\n    messages: messages,\n    pager: data.inboundSms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  }));\n};","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../shared/components/layout';\nimport { Navigation } from '../shared/components/navigation';\nimport { ReceivedSmsList } from '../sms-received';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(ReceivedSmsList, null)));\n\nexport default RouteSmsCommand;","import i18n from '@dhis2/d2-i18n';\nexport const translations = {\n  ALL: i18n.t('All'),\n  DELIVERED: i18n.t('Delivered'),\n  ERROR: i18n.t('Error'),\n  FAILED: i18n.t('Failed'),\n  OUTBOUND: i18n.t('Outbound'),\n  PENDING: i18n.t('Pending'),\n  SCHEDULED: i18n.t('Scheduled'),\n  SENT: i18n.t('Sent')\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { SmsTable } from '../../../shared/components/sms_table/SmsTable';\nimport { Date, Time } from '../../../shared/components/time';\nimport { translations } from '../../utils';\nimport styles from './SentSmsTable.module.css';\nexport const SentSmsTable = ({\n  messages,\n  pager,\n  selectedIds,\n  setSelectedIds\n}) => /*#__PURE__*/React.createElement(SmsTable, {\n  messages: messages,\n  pager: pager,\n  selectedIds: selectedIds,\n  setSelectedIds: setSelectedIds,\n  columns: [i18n.t('Message'), i18n.t('Recipients'), i18n.t('Status'), i18n.t('Sent')],\n  rowRenderFn: message => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, null, message.message), /*#__PURE__*/React.createElement(TableCell, null, (message.recipients || []).map((recipient, index, all) => /*#__PURE__*/React.createElement(\"span\", {\n    key: recipient + index,\n    className: styles.recipient\n  }, recipient, index !== all.length - 1 && ', '))), /*#__PURE__*/React.createElement(TableCell, null, translations[message.status]), /*#__PURE__*/React.createElement(TableCell, null, /*#__PURE__*/React.createElement(Date, {\n    date: message.date\n  }), ', ', /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Time, {\n    time: message.date\n  })))\n});\nSentSmsTable.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pager: PropTypes.PropTypes.object.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedIds: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { translations } from '../../utils';\nimport styles from './StatusFilter.module.css'; // From https://github.com/dhis2/dhis2-core/blob/ea76fa86409613c9766d4508d65c88ac55c413c3/dhis-2/dhis-api/src/main/java/org/hisp/dhis/sms/outbound/OutboundSmsStatus.java\n\nconst STATUS_FILTER_OPTIONS = ['ALL', 'DELIVERED', 'ERROR', 'FAILED', 'OUTBOUND', 'PENDING', 'SCHEDULED', 'SENT'].map(status => ({\n  value: status,\n  label: translations[status]\n}));\nexport const StatusFilter = ({\n  status,\n  setStatus\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: styles.container\n}, /*#__PURE__*/React.createElement(SingleSelectField, {\n  label: i18n.t('Filter by status'),\n  inputWidth: \"200px\",\n  onChange: ({\n    selected\n  }) => setStatus(selected),\n  selected: status,\n  dataTest: \"status-filter\"\n}, STATUS_FILTER_OPTIONS.map(({\n  label,\n  value\n}) => /*#__PURE__*/React.createElement(SingleSelectOption, {\n  key: label,\n  label: label,\n  value: value\n}))));\nStatusFilter.propTypes = {\n  setStatus: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nimport { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState, useEffect } from 'react';\nimport i18n from '../../../locales';\nimport { DeleteSelectedButton } from '../../../shared/components/delete_selected_button/DeleteSelectedButton';\nimport { PageHeadline } from '../../../shared/components/headline';\nimport { useQueryParams } from '../../../shared/components/hooks';\nimport { StatusFilter, SentSmsTable } from '../../components';\nimport styles from './SentSmsList.module.css';\nexport const SENT_SMS_LIST_LABEL = i18n.t('Sent');\nexport const SENT_SMS_LIST_PATH = '/sent';\n\nconst parseParams = ({\n  status,\n  page,\n  pageSize\n}) => {\n  const params = {\n    pageSize,\n    page,\n    fields: ['id', 'message', 'status', 'date', 'recipients'],\n    order: 'date:desc'\n  };\n\n  if (status && status !== 'ALL') {\n    params.filter = \"status:eq:\".concat(status);\n  }\n\n  return params;\n};\n\nconst query = {\n  sms: {\n    resource: 'sms/outbound',\n    params: parseParams\n  }\n};\nexport const SentSmsList = () => {\n  var _data$sms;\n\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [queryParams, setQueryParams] = useQueryParams();\n  const {\n    page,\n    pageSize,\n    status\n  } = queryParams;\n\n  const setStatus = status => {\n    setQueryParams({\n      status,\n      page: 1\n    });\n  };\n\n  const {\n    called,\n    loading,\n    error,\n    data,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true\n  });\n\n  const refetchAndClear = () => {\n    refetch();\n    setSelectedIds([]);\n  };\n\n  useEffect(() => {\n    refetch({\n      page,\n      pageSize,\n      status\n    });\n  }, [page, pageSize, status]);\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading sent SMSes');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const messages = (data === null || data === void 0 ? void 0 : (_data$sms = data.sms) === null || _data$sms === void 0 ? void 0 : _data$sms.outboundsmss) || [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SENT_SMS_LIST_LABEL), /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(StatusFilter, {\n    status: status,\n    setStatus: setStatus\n  }), /*#__PURE__*/React.createElement(DeleteSelectedButton, {\n    selectedIds: selectedIds,\n    type: \"outbound\",\n    onComplete: refetchAndClear\n  })), loading || !called ? /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)) : /*#__PURE__*/React.createElement(SentSmsTable, {\n    messages: messages,\n    pager: data.sms.pager,\n    selectedIds: selectedIds,\n    setSelectedIds: setSelectedIds\n  }));\n};","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../shared/components/layout';\nimport { Navigation } from '../shared/components/navigation';\nimport { SentSmsList } from '../sms-sent';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(SentSmsList, null)));\n\nexport default RouteSmsCommand;","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm; // The \"s\" from \"set\" is not capitalized\n// as the property on the java-model\n// does not have a capitalized \"s\" either\n//\n// @TODO: Create issue to make it consistent\n\nexport const FIELD_DATA_SET_NAME = 'dataset';\nexport const FieldDataSet = ({\n  dataSets,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fielddataset'),\n  name: FIELD_DATA_SET_NAME,\n  label: i18n.t('Data set'),\n  component: SingleSelectFieldFF,\n  options: dataSets,\n  validate: hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldDataSet.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldDataSet.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const DATA_SETS_QUERY = {\n  dataSets: {\n    resource: 'dataSets',\n    params: {\n      fields: ['id', 'displayName'],\n      paging: 'false'\n    }\n  }\n};\nexport const useReadDataSetsQuery = () => useDataQuery(DATA_SETS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldDataSet } from './FieldDataSet';\nimport { useReadDataSetsQuery } from './useReadDataSetsQuery';\nexport const FieldDataSetWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataSetsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      loading: true,\n      showLoadingStatus: true,\n      required: required,\n      dataSets: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldDataSet, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    dataSets\n  } = data.dataSets;\n  const options = dataSets.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldDataSet, {\n    required: required,\n    dataSets: options,\n    validate: validate\n  });\n};\nFieldDataSetWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldDataSetWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport cx from 'classnames';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './FormRow.module.css';\nexport const FormRow = ({\n  children,\n  className\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(styles.formRow, className),\n  \"data-test\": dataTest('forms-formrow')\n}, children);\nFormRow.propTypes = {\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USER_GROUP_NAME = 'userGroup';\nexport const FieldUserGroup = ({\n  userGroups,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  disabled: disabled,\n  error: !!errorText,\n  validationText: errorText,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fieldusergroup'),\n  name: FIELD_USER_GROUP_NAME,\n  label: i18n.t('User group'),\n  component: SingleSelectFieldFF,\n  options: userGroups,\n  validate: required && hasValue\n});\nFieldUserGroup.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldUserGroup.propTypes = {\n  userGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const USER_GROUPS_QUERY = {\n  userGroups: {\n    resource: 'userGroups',\n    params: {\n      paging: 'false'\n    }\n  }\n};\nexport const useReadUserGroupsQuery = () => useDataQuery(USER_GROUPS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport { FieldUserGroup } from './FieldUserGroup';\nimport { useReadUserGroupsQuery } from './useReadUserGroupsQuery';\nexport const FieldUserGroupWithAutoLoad = ({\n  required\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useReadUserGroupsQuery();\n  const validate = required ? hasValue : undefined;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      userGroups: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldUserGroup, {\n      required: required,\n      disabled: true,\n      userGroups: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    userGroups\n  } = data.userGroups;\n  const options = userGroups.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldUserGroup, {\n    required: required,\n    userGroups: options,\n    validate: validate\n  });\n};\nFieldUserGroupWithAutoLoad.defaultProps = {\n  required: false\n};\nFieldUserGroupWithAutoLoad.propTypes = {\n  required: PropTypes.bool\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_COMMAND_NAME = 'name';\nexport const FieldCommandName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('commands-fieldcommandname'),\n  name: FIELD_COMMAND_NAME,\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import i18n from '../../../locales';\nexport const KEY_VALUE_PARSER = {\n  value: 'KEY_VALUE_PARSER',\n  label: i18n.t('Key value parser')\n}; // @TODO: This parser is not listed in the docs,\n//        but it's listed in the original source code\n//   -> docs: https://docs.dhis2.org/master/en/dhis2_developer_manual/web-api.html#sms-command-values\n//   -> code: https://github.com/dhis2/dhis2-core/blob/79bd77ecf52051b00e3ba96eb1aca4d0a6063ed1/dhis-2/dhis-web/dhis-web-maintenance/dhis-web-maintenance-mobile/src/main/webapp/dhis-web-maintenance-mobile/smscommand/edit-sms-command.vm#L188\n\nexport const J2ME_PARSER = {\n  value: 'J2ME_PARSER',\n  label: i18n.t('J2ME parser')\n};\nexport const ALERT_PARSER = {\n  value: 'ALERT_PARSER',\n  label: i18n.t('Alert parser')\n};\nexport const UNREGISTERED_PARSER = {\n  value: 'UNREGISTERED_PARSER',\n  label: i18n.t('Unregistered parser')\n};\nexport const TRACKED_ENTITY_REGISTRATION_PARSER = {\n  value: 'TRACKED_ENTITY_REGISTRATION_PARSER',\n  label: i18n.t('Tracked entity registration parser')\n};\nexport const PROGRAM_STAGE_DATAENTRY_PARSER = {\n  value: 'PROGRAM_STAGE_DATAENTRY_PARSER',\n  label: i18n.t('Program stage data entry parser')\n};\nexport const EVENT_REGISTRATION_PARSER = {\n  value: 'EVENT_REGISTRATION_PARSER',\n  label: i18n.t('Event registration parser')\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport * as commandTypes from './parserTypes';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(commandTypes).sort((a, b) => {\n  if (a.label < b.label) {\n    return -1;\n  }\n\n  if (a.label > b.label) {\n    return 1;\n  }\n\n  return 0;\n});\nexport const FIELD_PARSER_NAME = 'parserType';\nexport const FieldParser = ({\n  disabled\n}) => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  disabled: disabled,\n  dataTest: dataTest('forms-fieldcommandparser'),\n  name: FIELD_PARSER_NAME,\n  label: i18n.t('Parser'),\n  component: SingleSelectFieldFF,\n  options: options,\n  validate: hasValue\n});\nFieldParser.defaultProps = {\n  disabled: false\n};\nFieldParser.propTypes = {\n  disabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_NAME = 'program';\nexport const FieldProgram = ({\n  programs,\n  loading,\n  required,\n  disabled,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  error: !!errorText,\n  validationText: errorText,\n  disabled: disabled,\n  required: required,\n  loading: loading,\n  dataTest: dataTest('forms-fieldprogram'),\n  name: FIELD_PROGRAM_NAME,\n  label: i18n.t('Program'),\n  component: SingleSelectFieldFF,\n  options: programs,\n  validate: required && hasValue,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  parse: id => ({\n    id\n  })\n});\nFieldProgram.defaultProps = {\n  disabled: false,\n  errorText: '',\n  loading: false,\n  required: false\n};\nFieldProgram.propTypes = {\n  programs: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAMS_WITH_REGISTRATION = 'PROGRAMS_WITH_REGISTRATION';\nexport const PROGRAMS_WITHOUT_REGISTRATION = 'PROGRAMS_WITHOUT_REGISTRATION';\nexport const ALL_PROGRAMS = 'ALL_PROGRAMS';\nexport const PROGRAMS_QUERY = {\n  programs: {\n    resource: 'programs',\n    params: ({\n      registration\n    }) => {\n      const params = {\n        paging: 'false'\n      };\n\n      if (registration === PROGRAMS_WITH_REGISTRATION) {\n        params.filter = 'programType:eq:WITH_REGISTRATION';\n      } else if (registration === PROGRAMS_WITHOUT_REGISTRATION) {\n        params.filter = 'programType:eq:WITHOUT_REGISTRATION';\n      }\n\n      return params;\n    }\n  }\n};\nexport const useReadProgramsQuery = registration => useDataQuery(PROGRAMS_QUERY, {\n  variables: {\n    registration\n  }\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { FIELD_PROGRAM_NAME, FieldProgram } from './FieldProgram';\nimport { ALL_PROGRAMS, useReadProgramsQuery } from './useReadProgramsQuery';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const FieldProgramWithAutoLoad = ({\n  required,\n  registration\n}) => {\n  const form = useForm();\n  const validate = required ? hasValue : undefined;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramsQuery({\n    lazy: true\n  });\n  useEffect(() => {\n    const variables = {\n      registration\n    };\n    form.change(FIELD_PROGRAM_NAME, null);\n    refetch(variables);\n  }, [registration]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      loading: true,\n      showLoadingStatus: true,\n      programs: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgram, {\n      required: required,\n      disabled: true,\n      programs: [],\n      errorText: error.message,\n      validate: validate\n    });\n  }\n\n  const {\n    programs\n  } = data.programs;\n  const options = programs.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgram, {\n    required: required,\n    programs: options,\n    validate: validate\n  });\n};\nFieldProgramWithAutoLoad.defaultProps = {\n  required: false,\n  registration: ALL_PROGRAMS\n};\nFieldProgramWithAutoLoad.propTypes = {\n  registration: PropTypes.string,\n  required: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { SingleSelectFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PROGRAM_STAGE_NAME = 'programStage';\nexport const FieldProgramStage = ({\n  programStages,\n  disabled,\n  loading,\n  initialValue,\n  required,\n  errorText\n}) => /*#__PURE__*/React.createElement(Field, {\n  component: SingleSelectFieldFF,\n  dataTest: dataTest('forms-fieldprogramstage'),\n  disabled: disabled,\n  error: !!errorText,\n  format: value => (value === null || value === void 0 ? void 0 : value.id) || null,\n  iinitialValue: initialValue,\n  label: i18n.t('Program stage'),\n  loading: loading,\n  name: FIELD_PROGRAM_STAGE_NAME,\n  options: programStages,\n  parse: id => ({\n    id\n  }),\n  required: required,\n  validate: required && hasValue,\n  validationText: errorText\n});\nFieldProgramStage.defaultProps = {\n  disabled: false,\n  loading: false,\n  required: false,\n  errorText: ''\n};\nFieldProgramStage.propTypes = {\n  programStages: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  disabled: PropTypes.bool,\n  errorText: PropTypes.string,\n  initialValue: PropTypes.string,\n  loading: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const PROGRAM_STAGES_QUERY = {\n  programStages: {\n    resource: 'programStages',\n    params: ({\n      programId\n    }) => ({\n      paging: 'false',\n      filter: programId ? \"program.id:eq:\".concat(programId) : undefined\n    })\n  }\n};\nexport const useReadProgramStagesQuery = ({\n  programId,\n  lazy\n}) => useDataQuery(PROGRAM_STAGES_QUERY, {\n  variables: {\n    programId\n  },\n  lazy\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { hasValue, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect } from 'react';\nimport { EVENT_REGISTRATION_PARSER } from '../FieldParser/parserTypes';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStage } from './FieldProgramStage';\nimport { useReadProgramStagesQuery } from './useReadProgramStagesQuery';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const FieldProgramStageWithLoadingStates = ({\n  parserType,\n  programId,\n  disabled,\n  required\n}) => {\n  var _data$programStages2, _data$programStages3;\n\n  const form = useForm();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useReadProgramStagesQuery({\n    lazy: true\n  });\n  const validate = required ? hasValue : undefined;\n  useEffect(() => {\n    if (programId) refetch({\n      programId\n    });\n  }, [programId]);\n  useEffect(() => {\n    var _data$programStages, _data$programStages$p;\n\n    const isEventRegistrationParser = parserType === EVENT_REGISTRATION_PARSER.value;\n    const programStageValueForEventRegistration = {\n      id: data === null || data === void 0 ? void 0 : (_data$programStages = data.programStages) === null || _data$programStages === void 0 ? void 0 : (_data$programStages$p = _data$programStages.programStages[0]) === null || _data$programStages$p === void 0 ? void 0 : _data$programStages$p.id\n    };\n    const initialValue = isEventRegistrationParser ? programStageValueForEventRegistration : undefined;\n    form.change(FIELD_PROGRAM_STAGE_NAME, initialValue);\n  }, [parserType, data === null || data === void 0 ? void 0 : (_data$programStages2 = data.programStages) === null || _data$programStages2 === void 0 ? void 0 : _data$programStages2.programStages]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      loading: true,\n      disabled: disabled,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      errorText: error.message,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  if (!programId || !data) {\n    return /*#__PURE__*/React.createElement(FieldProgramStage, {\n      disabled: true,\n      required: required,\n      programStages: [],\n      validate: validate\n    });\n  }\n\n  const programStages = (data === null || data === void 0 ? void 0 : (_data$programStages3 = data.programStages) === null || _data$programStages3 === void 0 ? void 0 : _data$programStages3.programStages) || [];\n  const options = programStages.map(({\n    id,\n    displayName\n  }) => ({\n    label: displayName,\n    value: id\n  }));\n  return /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: disabled,\n    required: required,\n    programStages: options\n  });\n};\nFieldProgramStageWithLoadingStates.defaultProps = {\n  disabled: false,\n  required: false\n};\nFieldProgramStageWithLoadingStates.propTypes = {\n  parserType: PropTypes.string.isRequired,\n  programId: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool\n};","import { useDataMutation } from '@dhis2/app-runtime';\nimport { ALERT_PARSER, EVENT_REGISTRATION_PARSER, J2ME_PARSER, KEY_VALUE_PARSER, PROGRAM_STAGE_DATAENTRY_PARSER, TRACKED_ENTITY_REGISTRATION_PARSER, UNREGISTERED_PARSER } from '../components/FieldParser/parserTypes';\nexport const CREATE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'create',\n\n  /*\n   * @param {Object} args\n   * @param {string} args.parserType\n   * @param {string} args.name\n   * @param {string} args.dataset (id)\n   * @param {string} args.userGroup (id)\n   * @param {string} args.program (id)\n   * @param {string} args.programStage (id)\n   * @returns {Object}\n   */\n  data: ({\n    parserType,\n    name,\n    dataset,\n    userGroup,\n    program,\n    programStage\n  }) => {\n    if (parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value) {\n      return {\n        parserType,\n        name,\n        dataset\n      };\n    }\n\n    if (parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value) {\n      return {\n        parserType,\n        name,\n        userGroup: {\n          id: userGroup\n        }\n      };\n    }\n\n    if (parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program\n      };\n    }\n\n    if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value) {\n      return {\n        parserType,\n        name,\n        program,\n        programStage\n      };\n    }\n\n    throw new Error(\"You provided an unrecognized parserType \\\"\".concat(parserType, \"\\\"\"));\n  }\n};\nexport const useCreateSmsCommandMutation = ({\n  onComplete,\n  onError\n}) => useDataMutation(CREATE_SMS_COMMAND_MUTATION, {\n  onComplete,\n  onError\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_SMS_COMMAND_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteSmsCommandMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_PARSER_TYPE_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: 'parserType',\n      paging: 'false'\n    }\n  }\n};\nexport const useReadSmsCommandParserTypeQuery = id => useDataQuery(READ_SMS_COMMAND_PARSER_TYPE_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataQuery } from '@dhis2/app-runtime';\nexport const SMS_COMMANDS_QUERY = {\n  smsCommands: {\n    resource: 'smsCommands',\n    pager: false,\n    params: ({\n      ids\n    } = {}) => ({\n      // @TODO: Why is `paging: false` not working?\n      paging: 'false',\n      fields: '*',\n      filter: ids ? \"ids:in:[\".concat(ids.join(','), \"]\") : undefined\n    })\n  }\n};\nexport const useReadSmsCommandsQuery = () => useDataQuery(SMS_COMMANDS_QUERY);","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { FieldDataSetWithAutoLoad } from '../../../shared/components/dataSet'; // @TODO(parser types): export object instead of individual constants\n// @TODO(programs): export program options as object\n\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageHeadline } from '../../../shared/components/headline';\nimport { FieldUserGroupWithAutoLoad } from '../../../shared/components/userGroup';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../../components/FieldCommandName';\nimport { FIELD_PARSER_NAME, FieldParser } from '../../components/FieldParser';\nimport { ALERT_PARSER, EVENT_REGISTRATION_PARSER, J2ME_PARSER, KEY_VALUE_PARSER, PROGRAM_STAGE_DATAENTRY_PARSER, TRACKED_ENTITY_REGISTRATION_PARSER, UNREGISTERED_PARSER } from '../../components/FieldParser/parserTypes';\nimport { ALL_PROGRAMS, FIELD_PROGRAM_NAME, PROGRAMS_WITH_REGISTRATION, PROGRAMS_WITHOUT_REGISTRATION, FieldProgramWithAutoLoad } from '../../components/FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME, FieldProgramStageWithLoadingStates } from '../../components/FieldProgramStage';\nimport { useCreateSmsCommandMutation } from '../../hooks';\nimport styles from './SmsCommandAdd.module.css';\nconst {\n  Form,\n  useForm\n} = ReactFinalForm;\nexport const SMS_COMMAND_FORM_NEW_PATH = '/sms-config/new';\n\nconst useResetFormFields = () => {\n  const form = useForm();\n  const [prevValues, setPrevValues] = useState(form.getState().values);\n  useEffect(() => form.subscribe(({\n    values\n  }) => {\n    form.batch(() => {\n      const parserType = values[FIELD_PARSER_NAME];\n      const program = values[FIELD_PROGRAM_NAME];\n      const programStage = values[FIELD_PROGRAM_STAGE_NAME];\n      const prevProgram = prevValues[FIELD_PROGRAM_NAME];\n      const prevParserType = prevValues[FIELD_PARSER_NAME];\n      const programChanged = prevProgram && program !== prevProgram;\n      const parserTypeChanged = prevParserType && parserType !== prevParserType;\n\n      if ( // only unset program stage if one exists already\n      programStage && (programChanged || parserTypeChanged)) {\n        form.change(FIELD_PROGRAM_STAGE_NAME, null);\n      }\n    });\n    setPrevValues(values);\n  }, {\n    values: true\n  }), [prevValues]);\n}; // undefined = all, false = program.programType --> WITHOUT_REGISTRATION\n\n\nconst shouldProgramsBeWithRegistration = parserType => {\n  // EVENT_REGISTRATION uses event programs\n  if (parserType === EVENT_REGISTRATION_PARSER.value) {\n    return PROGRAMS_WITHOUT_REGISTRATION;\n  } // This is for programs of type tracker,\n  // which can have multiple program stages\n\n\n  if (parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value) {\n    return PROGRAMS_WITH_REGISTRATION;\n  } // Unrelated yet, but in case all program stages are need in the future\n\n\n  return ALL_PROGRAMS;\n};\n\nconst ActualForm = ({\n  handleSubmit,\n  submitting\n}) => {\n  // This is required to unset form fields that depend\n  // on the selected value of a previous field\n  useResetFormFields();\n  const history = useHistory();\n  const form = useForm();\n  const {\n    values\n  } = form.getState();\n  const parserType = values[FIELD_PARSER_NAME];\n  const program = values[FIELD_PROGRAM_NAME];\n  const showDataSetField = parserType === KEY_VALUE_PARSER.value || parserType === J2ME_PARSER.value;\n  const showUserGroupField = parserType === ALERT_PARSER.value || parserType === UNREGISTERED_PARSER.value;\n  const showProgramField = parserType === TRACKED_ENTITY_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value || parserType === EVENT_REGISTRATION_PARSER.value;\n  const showProgramStageField = parserType === EVENT_REGISTRATION_PARSER.value || parserType === PROGRAM_STAGE_DATAENTRY_PARSER.value;\n  const registration = shouldProgramsBeWithRegistration(parserType);\n  const disableProgramStage = parserType === EVENT_REGISTRATION_PARSER.value;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add command')), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, null)), showDataSetField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSetWithAutoLoad, {\n    required: true\n  })), showUserGroupField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroupWithAutoLoad, {\n    required: true\n  })), showProgramField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramWithAutoLoad, {\n    required: true,\n    registration: registration\n  })), showProgramStageField && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageWithLoadingStates, {\n    disabled: disableProgramStage,\n    required: true,\n    programId: (program === null || program === void 0 ? void 0 : program.id) || '',\n    parserType: parserType,\n    helpText: disableProgramStage ? i18n.t('Automatically selected by selecting a program') : undefined\n  })), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting\n  }, i18n.t('Add command')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.goBack()\n  }, i18n.t('Cancel')))));\n};\n\nActualForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\nexport const SmsCommandAdd = () => {\n  const history = useHistory();\n  const [createSmsCommand] = useCreateSmsCommandMutation({\n    onComplete: () => history.push('/sms-command')\n  });\n\n  const onSubmit = values => createSmsCommand(values);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandformnew')\n  }, /*#__PURE__*/React.createElement(Form, {\n    destroyOnUnregister: true,\n    onSubmit: onSubmit\n  }, ({\n    handleSubmit,\n    submitting\n  }) => /*#__PURE__*/React.createElement(ActualForm, {\n    handleSubmit: handleSubmit,\n    submitting: submitting\n  })));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalTitle, ModalActions } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nexport const CancelDialog = ({\n  onConfirmCancel,\n  onAbortCancel\n}) => /*#__PURE__*/React.createElement(Modal, null, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Are you sure you want to cancel? Unsaved changes will be lost')), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n  onClick: onAbortCancel\n}, i18n.t('No, stay on page')), /*#__PURE__*/React.createElement(Button, {\n  primary: true,\n  onClick: onConfirmCancel\n}, i18n.t('Yes, cancel')))));\nCancelDialog.propTypes = {\n  onAbortCancel: PropTypes.func.isRequired,\n  onConfirmCancel: PropTypes.func.isRequired\n};","import { CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoading = () => /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));","import { PropTypes } from '@dhis2/prop-types';\nimport { NoticeBox } from '@dhis2/ui';\nimport React from 'react';\nexport const ContentLoadingError = ({\n  title,\n  errorMessage\n}) => /*#__PURE__*/React.createElement(NoticeBox, {\n  error: true,\n  title: title\n}, errorMessage);\nContentLoadingError.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n};","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_CONFIRM_MESSAGE_NAME = 'receivedMessage';\nexport const FieldConfirmMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('commands-fieldcommandconfirmmessage'),\n  name: FIELD_CONFIRM_MESSAGE_NAME,\n  label: i18n.t('Confirm message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CircularLoader, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitting: true,\n  pristine: true\n};\nexport const SaveCommandButton = ({\n  enabled\n}) => {\n  const {\n    submitting,\n    pristine\n  } = useFormState({\n    subscription\n  });\n  const disabled = pristine || submitting;\n  return /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    disabled: !enabled && disabled,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, i18n.t('Save command'));\n};\nSaveCommandButton.defaultProps = {\n  enabled: false\n};\nSaveCommandButton.propTypes = {\n  /*\n   * This prop is used when fields, stored as array entries\n   * in the form state, are being removed while the form\n   * is still pristine.\n   *\n   * Form some reasons, RFF doesn't recognize this as a change\n   * and keeps the form state's pristine value `true`\n   */\n  enabled: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { SaveCommandButton } from './SaveCommandButton';\nexport const FormActions = ({\n  enableSubmit,\n  onCancel\n}) => /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(SaveCommandButton, {\n  enabled: enableSubmit\n}), /*#__PURE__*/React.createElement(Button, {\n  onClick: onCancel\n}, i18n.t('Cancel'))));\nFormActions.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  enableSubmit: PropTypes.bool\n};","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nconst {\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  submitError: true,\n  hasSubmitErrors: true\n};\nexport const SubmitErrors = () => {\n  const {\n    submitError,\n    hasSubmitErrors\n  } = useFormState({\n    subscription\n  });\n  if (!hasSubmitErrors) return null;\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst submitting the form')\n  }, submitError));\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst ALERT_DATA_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    type: 'update',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useAlertDataQuery = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(ALERT_DATA_QUERY, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nconst updateAlertParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  partial: true,\n  data: ({\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  }) => ({\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  })\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = variables => engine.mutate(updateAlertParserMutation, {\n    variables: { ...variables,\n      id\n    }\n  }).then(onAfterChange);\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { ContentLoading } from '../../../shared/components/ContentLoading';\nimport { ContentLoadingError } from '../../../shared/components/ContentLoadingError';\nimport { FormRow } from '../../../shared/components/forms';\nimport { FieldUserGroup } from '../../../shared/components/userGroup';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nimport { createInitialValues } from './createInitialValues';\nimport { createUserGroupOptions } from './createUserGroupOptions';\nimport { useAlertDataQuery } from './useAlertDataQuery';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormAlertParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useAlertDataQuery(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const initialValues = createInitialValues(data.smsCommand);\n  const userGroups = createUserGroupOptions(data.smsCommand.userGroup);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditalertparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n    disabled: true,\n    userGroups: userGroups\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  })));\n};\nFormAlertParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","export const createInitialValues = ({\n  name,\n  parserType,\n  receivedMessage,\n  userGroup\n}) => ({\n  name,\n  parserType,\n  receivedMessage,\n  userGroup: userGroup.id\n});","export const createUserGroupOptions = userGroup => [{\n  value: userGroup.id,\n  label: userGroup.name\n}];","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_DEFAULT_MESSAGE_NAME = 'defaultMessage';\nexport const FieldDefaultMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommanddefaultmessage'),\n  name: FIELD_DEFAULT_MESSAGE_NAME,\n  label: i18n.t('Reply message if no codes are sent (only the command)'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME = 'moreThanOneOrgUnitMessage';\nexport const FieldMoreThanOneOrgUnitMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandmorethanoneorgunitmessage'),\n  name: FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME,\n  label: i18n.t('More than one orgunit message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_NO_USER_MESSAGE_NAME = 'noUserMessage';\nexport const FieldNoUserMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandnousermessage'),\n  name: FIELD_NO_USER_MESSAGE_NAME,\n  label: i18n.t('No user message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst subscription = {\n  values: true\n};\nexport const FIELD_SMS_CODES_NAME = 'smsCodes';\nexport const FieldSmsCode = ({\n  id,\n  displayName,\n  valueType\n}) => {\n  const {\n    values\n  } = useFormState({\n    subscription\n  });\n  const smsCode = values[FIELD_SMS_CODES_NAME][id];\n  /**\n   * This uses a dynamic, nested name for storing the field value in the\n   * form state. You can't submit the data as is though, since the backend\n   * expects a different shape. So I was thinking of dealing with that\n   * in the submit handler. Since you have the ids and the field value\n   * you should be able to transform it into any shape you need.\n   */\n\n  return /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    name: \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(id),\n    label: displayName,\n    component: InputFieldFF,\n    format: code => (code === null || code === void 0 ? void 0 : code.code) || '',\n    parse: nextCode => !smsCode ? {\n      code: nextCode,\n      trackedEntityAttribute: {\n        id,\n        displayName,\n        valueType\n      }\n    } : { ...smsCode,\n      code: nextCode\n    }\n  });\n};\nFieldSmsCode.propTypes = {\n  displayName: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  valueType: PropTypes.string.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldProgramStageDataElements = ({\n  programStageDataElements,\n  smsCodes\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, programStageDataElements.map(({\n    dataElement\n  }) => /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('smscommandfields-programstagedataelements-row'),\n    key: dataElement.id,\n    name: \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElement.id),\n    label: dataElement.displayName,\n    component: InputFieldFF,\n    format: value => (value === null || value === void 0 ? void 0 : value.code) || null,\n    parse: code => {\n      const currentValue = smsCodes[dataElement.id];\n      const newValue = { ...currentValue,\n        code: code || '',\n        dataElement\n      };\n      return newValue;\n    }\n  })));\n};\nFieldProgramStageDataElements.propTypes = {\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  smsCodes: PropTypes.objectOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    code: PropTypes.string,\n    compulsory: PropTypes.bool,\n    optionId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }))\n};","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SEPARATOR_NAME = 'separator';\nexport const FieldSeparator = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandseparator'),\n  name: FIELD_SEPARATOR_NAME,\n  label: i18n.t('Field separator'),\n  component: InputFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_SUCCESS_MESSAGE_NAME = 'successMessage';\nexport const FieldSuccessMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandsuccessmessage'),\n  name: FIELD_SUCCESS_MESSAGE_NAME,\n  label: i18n.t('Success message'),\n  component: TextAreaFieldFF\n});","import { TextAreaFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_WRONG_FORMAT_MESSAGE_NAME = 'wrongFormatMessage';\nexport const FieldWrongFormatMessage = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('forms-fieldcommandwrongformatmessage'),\n  name: FIELD_WRONG_FORMAT_MESSAGE_NAME,\n  label: i18n.t('Wrong format message'),\n  component: TextAreaFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageSubHeadline } from '../../../shared/components/headline';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldProgramStage } from '../FieldProgramStage';\nimport { FieldProgramStageDataElements } from '../FieldProgramStageDataElements';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = ({\n  handleSubmit,\n  onCancel,\n  programStageDataElements,\n  selectedProgramOption,\n  selectedProgramStageOption\n}) => {\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('smscommandeventregistrationparser-commandediteventregistrationparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageDataElements, {\n    programStageDataElements: programStageDataElements,\n    smsCodes: values[FIELD_SMS_CODES_NAME]\n  })), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nexport const READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[id,dataElement[id,displayName]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandQuery = id => useDataQuery(READ_SMS_COMMAND_EVENT_REGISTRATION_PARSER_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateEventRegistrationParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const program = command[FIELD_PROGRAM_NAME];\n    const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const smsCodes = Object.values(command[FIELD_SMS_CODES_NAME]);\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_PROGRAM_NAME]: program,\n      [FIELD_PROGRAM_STAGE_NAME]: programStage,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = variables => engine.mutate(updateEventRegistrationParserMutation, {\n    variables: { ...variables,\n      id\n    }\n  }).then(onAfterChange);\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { useCommandQuery } from './useCommandQuery';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormEventRegistrationParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    error,\n    data = {}\n  } = useCommandQuery(commandId);\n  const {\n    smsCommand: command\n  } = data;\n  const updateCommand = useUpdateCommandMutation({\n    id: commandId,\n    onAfterChange\n  });\n\n  if (error) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  const programStageDataElements = command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    initialValues: initialValues,\n    onSubmit: updateCommand\n  }, ({\n    handleSubmit\n  }) => {\n    return /*#__PURE__*/React.createElement(FormComponent, {\n      handleSubmit: handleSubmit,\n      selectedProgramOption: selectedProgramOption,\n      selectedProgramStageOption: selectedProgramStageOption,\n      programStageDataElements: programStageDataElements,\n      onCancel: onCancel\n    });\n  });\n};\nFormEventRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { EVENT_REGISTRATION_PARSER, FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: EVENT_REGISTRATION_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, Field as UiField, InputFieldFF, ReactFinalForm, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './FieldSpecialCharacter.module.css';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nexport const FIELD_SPECIAL_CHARS_NAME = 'specialCharacters';\nexport const FieldSpecialCharacter = ({\n  index,\n  onSpecialKeyRemoved\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeSpecialKeyFieldsFromFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars.slice(0, index), ...specialChars.slice(index + 1)];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n    onSpecialKeyRemoved();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('@TODO'),\n    label: i18n.t('Special character name'),\n    name: \"\".concat(FIELD_SPECIAL_CHARS_NAME, \"[\").concat(index, \"].name\"),\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    className: styles.field,\n    dataTest: dataTest('@TODO'),\n    label: i18n.t('Special character value'),\n    name: \"\".concat(FIELD_SPECIAL_CHARS_NAME, \"[\").concat(index, \"].value\"),\n    component: InputFieldFF,\n    validate: hasValue\n  }), /*#__PURE__*/React.createElement(UiField, {\n    label: \"\\xA0\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: removeSpecialKeyFieldsFromFormState\n  }, i18n.t('Remove'))));\n};\nFieldSpecialCharacter.propTypes = {\n  index: PropTypes.number.isRequired,\n  onSpecialKeyRemoved: PropTypes.func.isRequired\n};","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const AddSpecialCharacters = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addSpecialKeyFieldsToFormState = () => {\n    const specialChars = getState().values[FIELD_SPECIAL_CHARS_NAME];\n    const newSpecialChars = [...specialChars, {\n      name: '',\n      value: ''\n    }];\n    change(FIELD_SPECIAL_CHARS_NAME, newSpecialChars);\n  };\n\n  return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: addSpecialKeyFieldsToFormState,\n    dataTest: dataTest('forms-commandsaddspecialcharacters')\n  }, i18n.t('Add special character')));\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { PropTypes } from '@dhis2/prop-types';\nimport { Button, ReactFinalForm } from '@dhis2/ui';\nimport React, { useEffect, useState } from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './AddFormulaButton.module.css';\nconst {\n  useField\n} = ReactFinalForm;\nconst DATA_ELEMENTS_QUERY = {\n  dataElement: {\n    resource: 'dataElements',\n    id: ({\n      id\n    }) => id,\n    params: () => ({\n      fields: 'displayName'\n    })\n  }\n};\nexport const AddFormulaButton = ({\n  baseName,\n  onClick,\n  disabled\n}) => {\n  const engine = useDataEngine();\n  const [loading, setLoading] = useState(false);\n  const [formulaDataElementName, setFormulaDataElementName] = useState('');\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const {\n    formula,\n    code\n  } = smsCode;\n  const operator = formula && formula[0];\n  const dataElementId = formula && formula.slice(1);\n  useEffect(() => {\n    if (dataElementId) {\n      setLoading(true);\n      engine.query(DATA_ELEMENTS_QUERY, {\n        variables: {\n          id: dataElementId\n        }\n      }).then(response => {\n        const {\n          displayName\n        } = response.dataElement;\n        setFormulaDataElementName(displayName);\n      }).finally(() => setLoading(false));\n    }\n  }, [dataElementId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, code && formula && formulaDataElementName && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWords,\n    \"data-test\": dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboaddformulabutton-formulainwords')\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.formulaInWordsLabel\n  }, i18n.t('Formula'), \":\"), loading && i18n.t('Loading formula'), !loading && \"\".concat(code, \" \").concat(operator, \" \").concat(formulaDataElementName)), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    onClick: onClick,\n    disabled: disabled,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboaddformulabutton-button')\n  }, formula ? i18n.t('Edit formula') : i18n.t('Add formula')));\n};\nAddFormulaButton.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react';\nexport const DATA_ELEMENTS_QUERY = {\n  dataSet: {\n    resource: 'dataSets',\n    id: ({\n      id\n    }) => id,\n    params: ({\n      filter\n    }) => ({\n      filter,\n      fields: 'dataSetElements[dataElement[id,code,displayName]]'\n    })\n  }\n};\nexport const queryDataElementsOfDataSet = (engine, variables) => engine.query(DATA_ELEMENTS_QUERY, {\n  variables\n}).then(data => {\n  const {\n    dataSet\n  } = data;\n  const {\n    dataSetElements\n  } = dataSet;\n  const formatted = dataSetElements.map(({\n    dataElement\n  }) => dataElement);\n  formatted.sort((left, right) => {\n    const leftDisplayName = left.displayName;\n    const rightDisplayName = right.displayName;\n\n    if (leftDisplayName === rightDisplayName) {\n      return 0;\n    }\n\n    if (leftDisplayName < rightDisplayName) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return formatted;\n});\nexport const useReadDataElementsOfDataSetQuery = (dataSetId, filter) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return queryDataElementsOfDataSet(engine, variables).then(setData).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id: dataSetId,\n      filter\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, CircularLoader, Modal, ModalActions, ModalContent, ModalTitle, NoticeBox, ReactFinalForm, SingleSelectFieldFF, hasValue } from '@dhis2/ui';\nimport React, { useMemo } from 'react';\nimport i18n from '../../../locales';\nimport { useReadDataElementsOfDataSetQuery } from '../../../shared/components/dataElement';\nimport { FIELD_DATA_SET_NAME } from '../../../shared/components/dataSet';\nimport { FormRow } from '../../../shared/components/forms';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field,\n  Form,\n  useForm,\n  useField\n} = ReactFinalForm;\nexport const CurrentFormula = ({\n  baseName,\n  combo,\n  targetFieldName,\n  onClose\n}) => {\n  const form = useForm();\n  const smsCode = useField(baseName, {\n    subscription: {\n      value: true\n    }\n  }).input.value;\n  const dataSetId = useField(FIELD_DATA_SET_NAME, {\n    subscription: {\n      value: true\n    }\n  }).input.value.id;\n  const {\n    loading,\n    error,\n    data\n  } = useReadDataElementsOfDataSetQuery(dataSetId); // Using memo so changing the form does not change the \"initialValues\"\n  // which would cause the form to update unnecessarily\n\n  const initialFormula = smsCode.formula;\n  const initialOperator = useMemo(() => initialFormula ? initialFormula[0] : '+', []);\n  const initialDataElementCode = useMemo(() => initialFormula ? initialFormula.slice(1) : '', []);\n  const initialValues = {\n    operator: initialOperator,\n    dataElementCode: initialDataElementCode\n  };\n  const modalDataTest = dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula');\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Modal, {\n      dataTest: modalDataTest\n    }, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const options = data.map(dataElement => {\n    const {\n      id,\n      displayName\n    } = dataElement;\n    return {\n      value: id,\n      label: displayName\n    };\n  });\n\n  const onSubmit = values => {\n    const newFormula = \"\".concat(values.operator).concat(values.dataElementCode);\n    form.change(targetFieldName, newFormula);\n    onClose();\n  };\n\n  const onRemove = () => {\n    form.change(targetFieldName, null);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(Modal, {\n    dataTest: modalDataTest\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.stopPropagation();\n      handleSubmit(event);\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Formula for {{combo}}', {\n    combo\n  })), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-dataelement'),\n    name: \"dataElementCode\",\n    label: i18n.t('Data element'),\n    component: SingleSelectFieldFF,\n    options: options,\n    validate: hasValue\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(Field, {\n    required: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-operator'),\n    name: \"operator\",\n    label: i18n.t('formula operator'),\n    component: SingleSelectFieldFF,\n    initialValue: \"+\",\n    options: [{\n      value: '+',\n      label: '+'\n    }, {\n      value: '-',\n      label: '-'\n    }]\n  })), error && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving')\n  }, error.message))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRemove,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-remove')\n  }, i18n.t('Remove')), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    primary: true,\n    dataTest: dataTest('smscommandfields-fielddataelementwithcategoryoptioncomboformula-save')\n  }, i18n.t('Save')))))));\n};\nCurrentFormula.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  combo: PropTypes.string.isRequired,\n  targetFieldName: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../../locales';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { AddFormulaButton } from './AddFormulaButton';\nimport { CurrentFormula } from './CurrentFormula';\nimport styles from './FieldDataElementWithCategoryOptionCombo.module.css';\n\nconst DE_COC_toFormName = (dataElement, categoryOptionCombo) => {\n  const dataElementId = dataElement.id;\n  const cocCode = categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.code;\n  const isDefault = cocCode === 'default';\n\n  if (!cocCode || isDefault) {\n    return \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElementId);\n  }\n\n  return \"\".concat(FIELD_SMS_CODES_NAME, \".\").concat(dataElementId, \"-\").concat(cocCode);\n};\n\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldDataElementWithCategoryOptionCombo = ({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  const [showFormula, setShowFormula] = useState(false);\n  const label = categoryOptionCombo ? \"\".concat(dataElement.displayName, \" \").concat(categoryOptionCombo.displayName) : \"\".concat(dataElement.displayName, \" \").concat(i18n.t('default'));\n  const baseName = DE_COC_toFormName(dataElement, categoryOptionCombo);\n  const name = \"\".concat(baseName, \".code\");\n  const formulaName = \"\".concat(baseName, \".formula\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: styles.field,\n    label: label,\n    name: name,\n    subscription: {\n      value: true,\n      error: true,\n      invalid: true,\n      touched: true\n    }\n  }, ({\n    input,\n    meta,\n    ...rest\n  }) => {\n    const code = input.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputFieldFF, _extends({}, rest, {\n      className: styles.codeField,\n      input: input,\n      meta: meta,\n      error: !!meta.error\n    })), /*#__PURE__*/React.createElement(AddFormulaButton, {\n      disabled: !code,\n      baseName: baseName,\n      formulaFieldName: formulaName,\n      onClick: () => setShowFormula(true)\n    }), showFormula && /*#__PURE__*/React.createElement(CurrentFormula, {\n      baseName: baseName,\n      combo: label,\n      targetFieldName: formulaName,\n      onClose: () => setShowFormula(false)\n    }));\n  }));\n};\nFieldDataElementWithCategoryOptionCombo.defaultProps = {\n  categoryOptionCombo: null,\n  formula: ''\n};\nFieldDataElementWithCategoryOptionCombo.propTypes = {\n  dataElement: PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  categoryOptionCombo: PropTypes.shape({\n    code: PropTypes.string.isRequired,\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n};","import i18n from '../../../locales';\nexport const ALL_DATAVALUE = {\n  value: 'ALL_DATAVALUE',\n  label: i18n.t('Receive all data values')\n};\nexport const AT_LEAST_ONE_DATAVALUE = {\n  value: 'AT_LEAST_ONE_DATAVALUE',\n  label: i18n.t('Receive at least one data value')\n};\nexport const DO_NOT_MARK_COMPLETE = {\n  value: 'DO_NOT_MARK_COMPLETE',\n  label: i18n.t('Do not mark as complete')\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport * as completenessMethods from './completenessMethods';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = Object.values(completenessMethods);\nexport const FIELD_COMPLETENESS_METHOD_NAME = 'completenessMethod';\nexport const FieldCompletenessMethod = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('smscommandfields-fieldcommandcompletenessmethod'),\n  name: FIELD_COMPLETENESS_METHOD_NAME,\n  label: i18n.t('Completeness method'),\n  component: SingleSelectFieldFF,\n  options: options\n});","import { NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { ALL_DATAVALUE, AT_LEAST_ONE_DATAVALUE, FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nconst {\n  useField\n} = ReactFinalForm;\nexport const CompletenessMessage = () => {\n  const {\n    input\n  } = useField(FIELD_COMPLETENESS_METHOD_NAME, {\n    subscription: {\n      value: true\n    }\n  });\n  const completenessMethod = input.value;\n  const title = i18n.t('Required values notice');\n\n  if (completenessMethod === ALL_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(\"Make sure all SMS short codes are provided when completeness method \\\"\".concat(ALL_DATAVALUE.label, \"\\\" is chosen, otherwise received messages will not be processed.\"))));\n  }\n\n  if (completenessMethod === AT_LEAST_ONE_DATAVALUE.value) {\n    return /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(NoticeBox, {\n      warning: true,\n      title: title\n    }, i18n.t(\"Make sure at least one SMS short code is provided when completeness method \\\"\".concat(AT_LEAST_ONE_DATAVALUE.label, \"\\\" is chosen, otherwise received messages will not be processed.\"))));\n  }\n\n  return null;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageSubHeadline } from '../../../shared/components/headline';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldDataElementWithCategoryOptionCombo } from '../FieldDataElementWithCategoryOptionCombo';\nimport { CompletenessMessage } from './CompletenessMessage';\nimport styles from './DataElementTimesCategoryOptionCombos.module.css';\nexport const DataElementTimesCategoryOptionCombos = ({\n  DE_COC_combinations\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommandfields-dataelementtimescategoryoptioncombos')\n}, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), /*#__PURE__*/React.createElement(CompletenessMessage, null), /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest('smscommandfields-dataelementtimescategoryoptioncombos-rows')\n}, DE_COC_combinations.map(({\n  dataElement,\n  categoryOptionCombo\n}) => {\n  return /*#__PURE__*/React.createElement(FormRow, {\n    className: styles.formRow,\n    key: dataElement.id + (categoryOptionCombo === null || categoryOptionCombo === void 0 ? void 0 : categoryOptionCombo.id)\n  }, /*#__PURE__*/React.createElement(FieldDataElementWithCategoryOptionCombo, {\n    dataElement: dataElement,\n    categoryOptionCombo: categoryOptionCombo\n  }));\n})));\nDataElementTimesCategoryOptionCombos.defaultProps = {\n  allRequired: false\n};\nDataElementTimesCategoryOptionCombos.propTypes = {\n  DE_COC_combinations: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired\n};","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME = 'currentPeriodUsedForReporting';\nexport const FieldUseCurrentPeriodForReporting = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('smscommandfields-fieldcommandusecurrentperiodforreporting'),\n  name: FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME,\n  label: i18n.t('Use current period for reporting'),\n  component: CheckboxFieldFF\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../../locales';\nimport { FieldDataSet } from '../../../shared/components/dataSet';\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageSubHeadline } from '../../../shared/components/headline';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const FormComponent = ({\n  DE_COC_combination_data,\n  dataTest,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","export const getSmsCodeDuplicates = smsCodes => {\n  const duplicates = smsCodes.reduce((curDuplicates, smsCode, index) => {\n    const [name, code] = smsCode;\n    const errorAlreadyPresent = curDuplicates.includes(name);\n\n    if (errorAlreadyPresent) {\n      return curDuplicates;\n    }\n\n    const potentialDuplicates = smsCodes.filter( // eslint-disable-next-line no-unused-vars\n    ([_, curCode], curIndex) => {\n      return curCode.code === code.code && curIndex !== index;\n    });\n    const noDuplicates = !potentialDuplicates.length;\n\n    if (noDuplicates) {\n      return curDuplicates;\n    }\n\n    const newlyFoundDuplicates = potentialDuplicates.reduce((curWithCodeDuplicates, [curName]) => {\n      return [...curWithCodeDuplicates, curName];\n    }, [name]);\n    return [...curDuplicates, ...newlyFoundDuplicates];\n  }, []);\n  return duplicates;\n};","import i18n from '../../../locales';\nimport { getSmsCodeDuplicates } from '../../utils';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const paging = 'false';\n      const fields = ['*', \"dataset [\\n                    id,\\n                    displayName,\\n                    dataSetElements [\\n                        dataElement [\\n                            id,\\n                            displayName,\\n                            categoryCombo [\\n                                categoryOptionCombos [\\n                                    id,\\n                                    displayName,\\n                                    code\\n                                ]\\n                            ]\\n                        ]\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, '')),\n        paging\n      };\n    }\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { FIELD_DATA_SET_NAME } from '../../../shared/components/dataSet';\nimport { useSubmit } from '../../../shared/utils';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateJ2meParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.entries(command[FIELD_SMS_CODES_NAME]).map(([id, {\n      code,\n      formula,\n      compulsory,\n      optionId\n    }]) => {\n      const [dataElementId] = id.split('-');\n      const formattedSmsCode = {\n        code,\n        compulsory,\n        dataElement: {\n          id: dataElementId\n        }\n      };\n\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = variables => engine.mutate(updateJ2meParserMutation, {\n    variables: { ...variables,\n      id\n    }\n  }).then(onAfterChange);\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FIELD_DATA_SET_NAME } from '../../../shared/components/dataSet';\nimport { dataTest as createDataTestValue } from '../../../shared/utils';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { globalValidate } from './globalValidate';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormJ2meParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const dataTest = createDataTestValue('smscommandkeyvalueparser-commandeditj2meparserform');\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombo;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars === null || specialChars === void 0 ? void 0 : specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dataTest: dataTest,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nFormJ2meParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_DATA_SET_NAME } from '../../../shared/components/dataSet';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { AT_LEAST_ONE_DATAVALUE, FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { J2ME_PARSER, FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = J2ME_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, {\n    code,\n    compulsory,\n    formula,\n    optionId,\n    dataElement\n  }) => {\n    const key = optionId < 10 ? dataElement.id : \"\".concat(dataElement.id, \"-\").concat(optionId);\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport i18n from '../../../locales';\nimport { FieldDataSet } from '../../../shared/components/dataSet';\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageSubHeadline } from '../../../shared/components/headline';\nimport { AddSpecialCharacters } from '../AddSpecialCharacters';\nimport { DataElementTimesCategoryOptionCombos } from '../DataElementTimesCategoryOptionCombos';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldCompletenessMethod } from '../FieldCompletenessMethod';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SPECIAL_CHARS_NAME, FieldSpecialCharacter } from '../FieldSpecialCharacter';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldUseCurrentPeriodForReporting } from '../FieldUseCurrentPeriodForReporting';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  FormSpy\n} = ReactFinalForm;\nexport const FormComponent = ({\n  DE_COC_combination_data,\n  dataTest,\n  handleSubmit,\n  hasSpecialChars,\n  onCancel,\n  pristine,\n  selectedDataSetOption\n}) => {\n  const [specialKeyRemoved, setSpecialKeyRemoved] = useState(false);\n\n  const onSpecialKeyRemoved = () => setSpecialKeyRemoved(true);\n\n  const enableSubmit = specialKeyRemoved && hasSpecialChars;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDataSet, {\n    disabled: true,\n    dataSets: [selectedDataSetOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompletenessMethod, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseCurrentPeriodForReporting, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), DE_COC_combination_data && /*#__PURE__*/React.createElement(DataElementTimesCategoryOptionCombos, {\n    DE_COC_combinations: DE_COC_combination_data\n  }), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Special characters')), /*#__PURE__*/React.createElement(FormSpy, {\n    subscription: {\n      values: true\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values[FIELD_SPECIAL_CHARS_NAME].map((_, index) => /*#__PURE__*/React.createElement(FormRow, {\n    key: index\n  }, /*#__PURE__*/React.createElement(FieldSpecialCharacter, {\n    index: index,\n    onSpecialKeyRemoved: onSpecialKeyRemoved\n  }))))), /*#__PURE__*/React.createElement(AddSpecialCharacters, null), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    enableSubmit: enableSubmit,\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  hasSpecialChars: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  DE_COC_combination_data: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    categoryOptionCombo: PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })),\n  selectedDataSetOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })\n};","import i18n from '../../../locales';\nimport { getSmsCodeDuplicates } from '../../utils';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const globalValidate = values => {\n  let hasErrors = false;\n  const errors = {};\n  const smsCodesFormState = values[FIELD_SMS_CODES_NAME];\n  const smsCodes = smsCodesFormState ? Object.entries(smsCodesFormState) : [];\n  const smsCodesWithValue = smsCodes.filter(([_, {\n    code\n  }]) => code); //eslint-disable-line no-unused-vars\n\n  if (smsCodesWithValue.length) {\n    const duplicates = getSmsCodeDuplicates(smsCodesWithValue);\n\n    if (duplicates.length) {\n      hasErrors = true;\n      const duplicateErrors = {};\n      duplicates.forEach(duplicate => {\n        duplicateErrors[duplicate] = {\n          code: i18n.t('Duplicate value!')\n        };\n      });\n      errors[FIELD_SMS_CODES_NAME] = errors[FIELD_SMS_CODES_NAME] || {};\n      Object.assign(errors[FIELD_SMS_CODES_NAME], duplicateErrors);\n    }\n  }\n\n  return hasErrors ? errors : undefined;\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect, useState } from 'react'; // @TODO(non-critical):\n//   The response for key value parser\n//   does contain the information for \"Data element category combination\".\n//   But it does not contain the id of the category option combo,\n//   only the data element and a code.\n\nexport const READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const paging = 'false';\n      const fields = ['*', \"dataset [\\n                    id,\\n                    displayName,\\n                    dataSetElements [\\n                        dataElement [\\n                            id,\\n                            displayName,\\n                            categoryCombo [\\n                                categoryOptionCombos [\\n                                    id,\\n                                    displayName,\\n                                    code\\n                                ]\\n                            ]\\n                        ]\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, '')),\n        paging\n      };\n    }\n  }\n};\nexport const useCommandData = id => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const engine = useDataEngine();\n\n  const refetch = variables => {\n    setLoading(true);\n    setError(null);\n    return engine.query(READ_SMS_COMMAND_KEY_VALUE_PARSER_QUERY, {\n      variables\n    }).then(response => {\n      response.smsCommand.dataset.dataSetElements.sort((left, right) => {\n        const leftDisplayName = left.dataElement.displayName;\n        const rightDisplayName = right.dataElement.displayName;\n\n        if (leftDisplayName === rightDisplayName) {\n          return 0;\n        }\n\n        if (leftDisplayName < rightDisplayName) {\n          return -1;\n        }\n\n        return 1;\n      });\n      setData(response);\n    }).catch(setError).finally(() => setLoading(false));\n  }; // initial request\n\n\n  useEffect(() => {\n    refetch({\n      id\n    });\n  }, []);\n  return {\n    loading,\n    error,\n    data,\n    refetch\n  };\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { FIELD_DATA_SET_NAME } from '../../../shared/components/dataSet';\nimport { useSubmit } from '../../../shared/utils';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nconst updateKeyValueParserMutation = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: command => {\n    const name = command[FIELD_COMMAND_NAME];\n    const parserType = command[FIELD_PARSER_NAME];\n    const dataSetId = {\n      id: command[FIELD_DATA_SET_NAME].id\n    };\n    const separator = command[FIELD_SEPARATOR_NAME];\n    const completenessMethod = command[FIELD_COMPLETENESS_METHOD_NAME];\n    const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n    const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n    const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n    const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n    const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n    const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n    const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n    const smsCodes = Object.entries(command[FIELD_SMS_CODES_NAME]).map(([id, {\n      code,\n      formula,\n      compulsory,\n      optionId\n    }]) => {\n      const [dataElementId] = id.split('-');\n      const formattedSmsCode = {\n        code,\n        compulsory,\n        dataElement: {\n          id: dataElementId\n        }\n      };\n\n      if (formula) {\n        formattedSmsCode.formula = formula;\n      }\n\n      if (optionId) {\n        formattedSmsCode.optionId = optionId;\n      }\n\n      return formattedSmsCode;\n    });\n    return {\n      [FIELD_COMMAND_NAME]: name,\n      [FIELD_PARSER_NAME]: parserType,\n      [FIELD_DATA_SET_NAME]: dataSetId,\n      [FIELD_SEPARATOR_NAME]: separator,\n      [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n      [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n      [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n      [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n      [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n      [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n      [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n      [FIELD_SPECIAL_CHARS_NAME]: specialCharacters,\n      [FIELD_SMS_CODES_NAME]: smsCodes\n    };\n  }\n};\nexport const useUpdateCommandMutation = ({\n  id,\n  onAfterChange\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = variables => engine.mutate(updateKeyValueParserMutation, {\n    variables: { ...variables,\n      id\n    }\n  }).then(onAfterChange);\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CenteredContent, CircularLoader, NoticeBox, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FIELD_DATA_SET_NAME } from '../../../shared/components/dataSet';\nimport { dataTest as createDataTestValue } from '../../../shared/utils';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { globalValidate } from './globalValidate';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormKeyValueParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const dataTest = createDataTestValue('smscommandkeyvalueparser-commandeditj2meparserform');\n  const {\n    error: loadingCommandError,\n    data: commandData\n  } = useCommandData(commandId);\n  const command = commandData === null || commandData === void 0 ? void 0 : commandData.smsCommand;\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n\n  if (loadingCommandError) {\n    const msg = i18n.t(\"Something went wrong whilst loading the command's details\");\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadingCommandError.message);\n  }\n\n  if (!command) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  const selectedDataSetOption = {\n    value: command[FIELD_DATA_SET_NAME].id,\n    label: command[FIELD_DATA_SET_NAME].displayName\n  };\n  const initialValues = getInitialFormState(command);\n  const DE_COC_combination_data = command.dataset.dataSetElements.reduce((curCombinations, {\n    dataElement\n  }) => {\n    var _dataElement$category;\n\n    const categoryOptionCombo = (_dataElement$category = dataElement.categoryCombo) === null || _dataElement$category === void 0 ? void 0 : _dataElement$category.categoryOptionCombo;\n\n    if (!categoryOptionCombo) {\n      return [...curCombinations, {\n        dataElement\n      }];\n    }\n\n    const combos = categoryOptionCombo.map(COC => ({\n      dataElement,\n      categoryOptionCombo: COC\n    }));\n    return [...curCombinations, ...combos];\n  }, []);\n  const specialChars = initialValues[FIELD_SPECIAL_CHARS_NAME];\n  const hasSpecialChars = !!(specialChars === null || specialChars === void 0 ? void 0 : specialChars.length);\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues,\n    validate: globalValidate,\n    subscription: {\n      pristine: true\n    }\n  }, ({\n    handleSubmit,\n    pristine,\n    dirty\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    DE_COC_combination_data: DE_COC_combination_data,\n    dataTest: dataTest,\n    dirty: dirty,\n    handleSubmit: handleSubmit,\n    pristine: pristine,\n    hasSpecialChars: hasSpecialChars,\n    selectedDataSetOption: selectedDataSetOption,\n    onCancel: onCancel\n  }));\n};\nFormKeyValueParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_DATA_SET_NAME } from '../../../shared/components/dataSet';\nimport { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { AT_LEAST_ONE_DATAVALUE, FIELD_COMPLETENESS_METHOD_NAME } from '../FieldCompletenessMethod';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { KEY_VALUE_PARSER, FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SPECIAL_CHARS_NAME } from '../FieldSpecialCharacter';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME } from '../FieldUseCurrentPeriodForReporting';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const parserType = KEY_VALUE_PARSER.value;\n  const dataSetId = {\n    id: command[FIELD_DATA_SET_NAME].id\n  };\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const completenessMethod = AT_LEAST_ONE_DATAVALUE.value;\n  const useCurrentPeriodForReporting = command[FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((acc, {\n    code,\n    compulsory,\n    formula,\n    optionId,\n    dataElement\n  }) => {\n    const key = optionId < 10 ? dataElement.id : \"\".concat(dataElement.id, \"-\").concat(optionId);\n    const smsCode = {\n      code,\n      compulsory,\n      optionId\n    };\n\n    if (formula) {\n      smsCode.formula = formula;\n    }\n\n    return { ...acc,\n      [key]: smsCode\n    };\n  }, {});\n  const specialCharacters = command[FIELD_SPECIAL_CHARS_NAME] || [];\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: parserType,\n    [FIELD_DATA_SET_NAME]: dataSetId,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_COMPLETENESS_METHOD_NAME]: completenessMethod,\n    [FIELD_USE_CURRENT_PERIOD_FOR_REPORTING_NAME]: useCurrentPeriodForReporting,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    smsCodes,\n    specialCharacters\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageSubHeadline } from '../../../shared/components/headline';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldProgramStage } from '../FieldProgramStage';\nimport { FieldProgramStageDataElements } from '../FieldProgramStageDataElements';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = ({\n  handleSubmit,\n  selectedProgramOption,\n  programStageDataElements,\n  selectedProgramStageOption,\n  onCancel\n}) => {\n  const {\n    pristine,\n    values\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandeditprogramstagedataentryparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStage, {\n    disabled: true,\n    programStages: [selectedProgramStageOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), programStageDataElements && /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgramStageDataElements, {\n    programStageDataElements: programStageDataElements,\n    smsCodes: values[FIELD_SMS_CODES_NAME]\n  })), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  programStageDataElements: PropTypes.arrayOf(PropTypes.shape({\n    dataElement: PropTypes.shape({\n      displayName: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired\n    })\n  })).isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  selectedProgramStageOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: {\n      fields: ['*', 'program[id,displayName]', 'programStage[id,displayName,programStageDataElements[dataElement[id,displayName]]]'],\n      paging: 'false'\n    }\n  }\n};\nexport const useCommandData = programStageId => useDataQuery(READ_SMS_COMMAND_PROGRAM_STAGE_DATA_ENTRY_PARSER_QUERY, {\n  variables: {\n    id: programStageId\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nimport { formatSmsCodes } from './formatSmsCodes';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => params\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = variables => {\n    const allVariables = {\n      variables: { ...formatSmsCodes(variables),\n        commandId\n      }\n    };\n    const mutation = REPLACE_SMS_COMMAND_MUTATION;\n    return engine.mutate(mutation, allVariables).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { ContentLoading } from '../../../shared/components/ContentLoading';\nimport { ContentLoadingError } from '../../../shared/components/ContentLoadingError';\nimport { FormComponent } from './FormComponent';\nimport { getInitialFormState } from './getInitialFormState';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormProgramStageDataEntryParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const command = data === null || data === void 0 ? void 0 : data.smsCommand;\n  const programStageDataElements = command === null || command === void 0 ? void 0 : command.programStage.programStageDataElements;\n  const initialValues = getInitialFormState(command);\n  const selectedProgramOption = {\n    value: command.program.id,\n    label: command.program.displayName\n  };\n  const selectedProgramStageOption = {\n    value: command.programStage.id,\n    label: command.programStage.displayName\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    handleSubmit: handleSubmit,\n    selectedProgramOption: selectedProgramOption,\n    programStageDataElements: programStageDataElements,\n    selectedProgramStageOption: selectedProgramStageOption,\n    onCancel: onCancel\n  }));\n};\nFormProgramStageDataEntryParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const formatSmsCodes = updates => ({ ...updates,\n  [FIELD_SMS_CODES_NAME]: Object.values(updates[FIELD_SMS_CODES_NAME])\n});","import { FIELD_COMMAND_NAME } from '../FieldCommandName';\nimport { FIELD_DEFAULT_MESSAGE_NAME } from '../FieldDefaultMessage';\nimport { FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FIELD_NO_USER_MESSAGE_NAME } from '../FieldNoUserMessage';\nimport { PROGRAM_STAGE_DATAENTRY_PARSER, FIELD_PARSER_NAME } from '../FieldParser';\nimport { FIELD_PROGRAM_NAME } from '../FieldProgram';\nimport { FIELD_PROGRAM_STAGE_NAME } from '../FieldProgramStage';\nimport { FIELD_SEPARATOR_NAME } from '../FieldSeparator';\nimport { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nimport { FIELD_SUCCESS_MESSAGE_NAME } from '../FieldSuccessMessage';\nimport { FIELD_WRONG_FORMAT_MESSAGE_NAME } from '../FieldWrongFormatMessage';\nexport const getInitialFormState = command => {\n  const name = command[FIELD_COMMAND_NAME];\n  const program = command[FIELD_PROGRAM_NAME];\n  const programStage = command[FIELD_PROGRAM_STAGE_NAME];\n  const separator = command[FIELD_SEPARATOR_NAME];\n  const defaultMessage = command[FIELD_DEFAULT_MESSAGE_NAME];\n  const wrongFormatMessage = command[FIELD_WRONG_FORMAT_MESSAGE_NAME];\n  const noUserMessage = command[FIELD_NO_USER_MESSAGE_NAME];\n  const moreThanOneOrgUnitMessage = command[FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME];\n  const successMessage = command[FIELD_SUCCESS_MESSAGE_NAME];\n  const smsCodes = command[FIELD_SMS_CODES_NAME].reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.dataElement.id]: smsCode\n  }), {});\n  return {\n    [FIELD_COMMAND_NAME]: name,\n    [FIELD_PARSER_NAME]: PROGRAM_STAGE_DATAENTRY_PARSER.value,\n    [FIELD_PROGRAM_NAME]: program,\n    [FIELD_PROGRAM_STAGE_NAME]: programStage,\n    [FIELD_SEPARATOR_NAME]: separator,\n    [FIELD_DEFAULT_MESSAGE_NAME]: defaultMessage,\n    [FIELD_WRONG_FORMAT_MESSAGE_NAME]: wrongFormatMessage,\n    [FIELD_NO_USER_MESSAGE_NAME]: noUserMessage,\n    [FIELD_MORE_THAN_ONE_ORG_UNIT_MESSAGE_NAME]: moreThanOneOrgUnitMessage,\n    [FIELD_SUCCESS_MESSAGE_NAME]: successMessage,\n    [FIELD_SMS_CODES_NAME]: smsCodes\n  };\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageSubHeadline } from '../../../shared/components/headline';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldDefaultMessage } from '../FieldDefaultMessage';\nimport { FieldMoreThanOneOrgUnitMessage } from '../FieldMoreThanOneOrgUnitMessage';\nimport { FieldNoUserMessage } from '../FieldNoUserMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FieldProgram } from '../FieldProgram';\nimport { FieldSeparator } from '../FieldSeparator';\nimport { FieldSmsCode } from '../FieldSmsCode';\nimport { FieldSuccessMessage } from '../FieldSuccessMessage';\nimport { FieldWrongFormatMessage } from '../FieldWrongFormatMessage';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nconst {\n  useFormState\n} = ReactFinalForm;\nexport const FormComponent = ({\n  handleSubmit,\n  dynamicFields,\n  selectedProgramOption,\n  onCancel\n}) => {\n  const {\n    pristine\n  } = useFormState();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldProgram, {\n    disabled: true,\n    programs: [selectedProgramOption]\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSeparator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldDefaultMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldWrongFormatMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNoUserMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldMoreThanOneOrgUnitMessage, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSuccessMessage, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('SMS short codes')), dynamicFields.map(dynamicField => {\n    // I assume this should switch field types based on `valueType`\n    // which can be 'TEXT', 'NUMBER', etc. Currently this renders\n    // a regular input for everything.\n    return /*#__PURE__*/React.createElement(FormRow, {\n      key: dynamicField.id\n    }, /*#__PURE__*/React.createElement(FieldSmsCode, {\n      id: dynamicField.id,\n      displayName: dynamicField.displayName,\n      valueType: dynamicField.valueType\n    }));\n  }), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  }));\n};\nFormComponent.propTypes = {\n  dynamicFields: PropTypes.arrayOf(PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    valueType: PropTypes.string.isRequired\n  })).isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  selectedProgramOption: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      id\n    }) => id,\n    params: () => {\n      const fields = ['name', 'parserType', 'separator', 'defaultMessage', 'wrongFormatMessage', 'noUserMessage', 'moreThanOneOrgUnitMessage', 'successMessage', // The queries below should be reduced to only the data we need\n      \"program [\\n                    id,\\n                    displayName,\\n                    programTrackedEntityAttributes [\\n                        trackedEntityAttribute [\\n                            :all,\\n                            id,\\n                            displayName\\n                        ]\\n                    ]\\n                ]\", \"smsCodes [\\n                    :all,\\n                    trackedEntityAttribute [\\n                        id,\\n                        displayName,\\n                        valueType\\n                    ]\\n                ]\"];\n      return {\n        fields: fields.map(field => field.replace(/(\\n|\\s)/g, ''))\n      };\n    }\n  }\n};\nexport const useCommandData = id => useDataQuery(query, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nimport { formatSmsCodes } from './formatSmsCodes';\nexport const REPLACE_SMS_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => params\n};\nexport const UPDATE_SMS_COMMAND_MUTATION = { ...REPLACE_SMS_COMMAND_MUTATION,\n  partial: true\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = vars => {\n    const variables = { ...formatSmsCodes(vars),\n      commandId\n    };\n    return engine.mutate(REPLACE_SMS_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { ContentLoading } from '../../../shared/components/ContentLoading';\nimport { ContentLoadingError } from '../../../shared/components/ContentLoadingError';\nimport { FormComponent } from './FormComponent';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormTrackedEntityRegistrationParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes: smsCodesOriginal\n  } = data.smsCommand;\n  const smsCodes = smsCodesOriginal.reduce((curSmsCodes, smsCode) => ({ ...curSmsCodes,\n    [smsCode.trackedEntityAttribute.id]: smsCode\n  }), {});\n  const initialValues = {\n    name,\n    parserType,\n    program,\n    separator,\n    defaultMessage,\n    wrongFormatMessage,\n    noUserMessage,\n    moreThanOneOrgUnitMessage,\n    successMessage,\n    smsCodes\n  };\n  const selectedProgramOption = {\n    value: program.id,\n    label: program.displayName\n  };\n  /**\n   * Create usable data for the dynamic fields\n   */\n  // The tracked entity attributes here have the right order for the fields\n\n  const trackedEntityAttributes = program.programTrackedEntityAttributes.map(({\n    trackedEntityAttribute\n  }) => trackedEntityAttribute); // Creating an array with only the data we need to render our dynamic form fields\n\n  const dynamicFields = trackedEntityAttributes.map(trackedEntityAttribute => {\n    const {\n      id,\n      displayName,\n      valueType\n    } = trackedEntityAttribute;\n    const merged = {\n      id,\n      displayName,\n      valueType\n    };\n    const smsCode = smsCodes[id];\n\n    if (smsCode) {\n      // This contains the actual value of the field\n      merged.initialValue = smsCode.code;\n    }\n\n    return merged;\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(FormComponent, {\n    dynamicFields: dynamicFields,\n    handleSubmit: handleSubmit,\n    selectedProgramOption: selectedProgramOption,\n    onCancel: onCancel\n  }));\n};\nFormTrackedEntityRegistrationParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { FIELD_SMS_CODES_NAME } from '../FieldSmsCode';\nexport const formatSmsCodes = updates => ({ ...updates,\n  [FIELD_SMS_CODES_NAME]: Object.values(updates[FIELD_SMS_CODES_NAME])\n});","import { useDataQuery } from '@dhis2/app-runtime';\nconst query = {\n  smsCommand: {\n    resource: 'smsCommands',\n    id: ({\n      commandId\n    }) => commandId,\n    params: {\n      fields: ['name', 'parserType', 'receivedMessage', 'userGroup[name,id]']\n    }\n  }\n};\nexport const useCommandData = commandId => {\n  const variables = {\n    commandId\n  };\n  return useDataQuery(query, {\n    variables\n  });\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useSubmit } from '../../../shared/utils';\nexport const UPDATE_COMMAND_MUTATION = {\n  resource: 'smsCommands',\n  type: 'update',\n  id: ({\n    commandId\n  }) => commandId,\n  // @TODO(non-critical):\n  //   Make this produce static object structures\n  // eslint-disable-next-line no-unused-vars\n  data: ({\n    commandId,\n    ...params\n  }) => params\n};\nexport const useUpdateCommandMutation = ({\n  onAfterChange,\n  commandId\n}) => {\n  const engine = useDataEngine();\n\n  const onSubmit = values => {\n    const variables = { ...values,\n      commandId\n    };\n    return engine.mutate(UPDATE_COMMAND_MUTATION, {\n      variables\n    }).then(onAfterChange);\n  };\n\n  return useSubmit(onSubmit);\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { ContentLoading } from '../../../shared/components/ContentLoading';\nimport { ContentLoadingError } from '../../../shared/components/ContentLoadingError';\nimport { FormRow } from '../../../shared/components/forms';\nimport { FieldUserGroup } from '../../../shared/components/userGroup';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldCommandName } from '../FieldCommandName';\nimport { FieldConfirmMessage } from '../FieldConfirmMessage';\nimport { FieldParser } from '../FieldParser';\nimport { FormActions } from '../FormActions';\nimport { SubmitErrors } from '../SubmitErrors';\nimport { useCommandData } from './useCommandData';\nimport { useUpdateCommandMutation } from './useUpdateCommandMutation';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormUnregisteredParser = ({\n  commandId,\n  onAfterChange,\n  onCancel\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useCommandData(commandId);\n  const updateCommand = useUpdateCommandMutation({\n    commandId,\n    onAfterChange\n  });\n  if (loading) return /*#__PURE__*/React.createElement(ContentLoading, null);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(ContentLoadingError, {\n      errorMessage: error.message,\n      title: i18n.t('Something went wrong whilst loading the sms command')\n    });\n  }\n\n  const {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup\n  } = data.smsCommand;\n  const initialValues = {\n    name,\n    parserType,\n    receivedMessage,\n    userGroup: userGroup.id\n  };\n  const userGroups = [{\n    value: userGroup.id,\n    label: userGroup.name\n  }];\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: updateCommand,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('commands-commandunregisteredparserform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCommandName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldParser, {\n    disabled: true\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUserGroup, {\n    disabled: true,\n    userGroups: userGroups\n  })), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfirmMessage, null)), /*#__PURE__*/React.createElement(SubmitErrors, null), /*#__PURE__*/React.createElement(FormActions, {\n    onCancel: () => onCancel(pristine)\n  })));\n};\nFormUnregisteredParser.propTypes = {\n  commandId: PropTypes.string.isRequired,\n  onAfterChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { CancelDialog } from '../../../shared/components/cancelDialog';\nimport { PageHeadline } from '../../../shared/components/headline';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_PARSER_NAME } from '../../components/FieldParser'; // @TODO(parser types): export object instead of individual constants\n\nimport { ALERT_PARSER, EVENT_REGISTRATION_PARSER, J2ME_PARSER, KEY_VALUE_PARSER, PROGRAM_STAGE_DATAENTRY_PARSER, TRACKED_ENTITY_REGISTRATION_PARSER, UNREGISTERED_PARSER } from '../../components/FieldParser/parserTypes';\nimport { FormAlertParser } from '../../components/FormAlertParser';\nimport { FormEventRegistrationParser } from '../../components/FormEventRegistrationParser';\nimport { FormJ2meParser } from '../../components/FormJ2meParser';\nimport { FormKeyValueParser } from '../../components/FormKeyValueParser';\nimport { FormProgramStageDataEntryParser } from '../../components/FormProgramStageDataEntryParser';\nimport { FormTrackedEntityRegistrationParser } from '../../components/FormTrackedEntityRegistrationParser';\nimport { FormUnregisteredParser } from '../../components/FormUnregisteredParser';\nimport { useReadSmsCommandParserTypeQuery } from '../../hooks';\nimport styles from './SmsCommandEdit.module.css';\nexport const SMS_COMMAND_FORM_EDIT_PATH_STATIC = '/sms-config/edit';\nexport const SMS_COMMAND_FORM_EDIT_PATH = \"\".concat(SMS_COMMAND_FORM_EDIT_PATH_STATIC, \"/:id\");\n\nconst isParserType = (parserType, parser) => parserType === parser.value;\n\nconst getSmsCommandEditFormComponent = parserType => {\n  const isParser = isParserType.bind(null, parserType);\n\n  if (!parserType) {\n    return null;\n  }\n\n  if (isParser(KEY_VALUE_PARSER)) {\n    return FormKeyValueParser;\n  }\n\n  if (isParser(J2ME_PARSER)) {\n    return FormJ2meParser;\n  }\n\n  if (isParser(ALERT_PARSER)) {\n    return FormAlertParser;\n  }\n\n  if (isParser(PROGRAM_STAGE_DATAENTRY_PARSER)) {\n    return FormProgramStageDataEntryParser;\n  }\n\n  if (isParser(UNREGISTERED_PARSER)) {\n    return FormUnregisteredParser;\n  }\n\n  if (isParser(EVENT_REGISTRATION_PARSER)) {\n    return FormEventRegistrationParser;\n  }\n\n  if (isParser(TRACKED_ENTITY_REGISTRATION_PARSER)) {\n    return FormTrackedEntityRegistrationParser;\n  }\n\n  return null;\n};\n\nexport const SmsCommandEdit = () => {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useReadSmsCommandParserTypeQuery(id);\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n\n  const onAfterChange = () => history.push('/sms-command');\n\n  const onCancel = pristine => pristine ? history.goBack() : setShowCancelDialog(true);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null));\n  }\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst loading commands');\n    return /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message);\n  }\n\n  const parserType = data === null || data === void 0 ? void 0 : data.smsCommand[FIELD_PARSER_NAME];\n  const FormComponent = getSmsCommandEditFormComponent(parserType);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('views-smscommandformedit')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit command')), FormComponent && /*#__PURE__*/React.createElement(FormComponent, {\n    commandId: id,\n    onCancel: onCancel,\n    onAfterChange: onAfterChange\n  }), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-command'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }), !parserType && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Unrecognised parser type')\n  }, i18n.t('Could not find the requested parser type')));\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { ButtonStrip, Button } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './ListActions.module.css';\nexport const ListActions = ({\n  addLabel,\n  deleteLabel,\n  dataTest: dataTestProp,\n  onAddClick,\n  onDeleteClick,\n  disableAdd,\n  disableDelete\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    \"data-test\": dataTest(\"\".concat(dataTestProp, \"-actions\"))\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onAddClick,\n    disabled: disableAdd,\n    dataTest: dataTest(\"\".concat(dataTestProp, \"-add\"))\n  }, addLabel), /*#__PURE__*/React.createElement(Button, {\n    destructive: true,\n    onClick: onDeleteClick,\n    disabled: disableDelete,\n    dataTest: dataTest(\"\".concat(dataTestProp, \"-delete\"))\n  }, deleteLabel)));\n};\nListActions.propTypes = {\n  addLabel: PropTypes.string.isRequired,\n  dataTest: PropTypes.string.isRequired,\n  deleteLabel: PropTypes.string.isRequired,\n  onAddClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  disableAdd: PropTypes.bool,\n  disableDelete: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../utils';\nexport const DeleteConfirmationDialog = ({\n  children,\n  onCancelClick,\n  onDeleteClick\n}) => {\n  return /*#__PURE__*/React.createElement(Modal, {\n    dataTest: dataTest('deleteconfirmationdialog')\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Confirm deletion')), /*#__PURE__*/React.createElement(ModalContent, null, children), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onCancelClick,\n    dataTest: dataTest('deleteconfirmationdialog-cancel')\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onDeleteClick,\n    dataTest: dataTest('deleteconfirmationdialog-confirm')\n  }, i18n.t('Delete')))));\n};\nDeleteConfirmationDialog.propTypes = {\n  children: PropTypes.any.isRequired,\n  onCancelClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport React from 'react';\nimport { dataTest } from '../../utils';\nimport styles from './Paragraph.module.css';\nexport const Paragraph = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"p\", {\n  className: styles.paragraph,\n  \"data-test\": dataTest('text-paragraph')\n}, children);\nParagraph.propTypes = {\n  children: PropTypes.string.isRequired\n};","import { Button, Checkbox, Table, TableHead, TableBody, TableRow, TableRowHead, TableCell, TableCellHead, NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { ListActions } from '../../../shared/components/dataList';\nimport { DeleteConfirmationDialog } from '../../../shared/components/DeleteConfirmationDialog';\nimport { PageHeadline } from '../../../shared/components/headline'; // @TODO(parser types): wrap parsers in exported object\n\nimport { Paragraph } from '../../../shared/components/text';\nimport { dataTest } from '../../../shared/utils';\nimport * as parserTypes from '../../components/FieldParser/parserTypes';\nimport { useDeleteSmsCommandMutation, useReadSmsCommandsQuery } from '../../hooks';\nimport styles from './SmsCommandList.module.css';\nexport const SMS_COMMAND_LIST_LABEL = i18n.t('Commands');\nexport const SMS_COMMAND_LIST_PATH = '/sms-config';\n\nconst getLabelByParserTypes = parserType => {\n  const type = Object.values(parserTypes).find(({\n    value\n  }) => value === parserType);\n  return (type === null || type === void 0 ? void 0 : type.label) || parserType;\n};\n\nexport const SmsCommandList = () => {\n  var _data$smsCommands2, _data$smsCommands2$sm, _data$smsCommands3, _data$smsCommands3$sm, _data$smsCommands4, _data$smsCommands4$sm;\n\n  const history = useHistory();\n\n  const onAddCommandClick = () => history.push('sms-command/new');\n\n  const [checkedSmsCommands, setCheckedSmsCommands] = useState([]);\n  const [showDeleteConfirmationDialog, setShowDeleteConfirmationDialog] = useState(false);\n  const {\n    loading: loadingReadSmsCommands,\n    error: errorReadSmsCommands,\n    data,\n    refetch\n  } = useReadSmsCommandsQuery();\n  const [deleteSmsCommands, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteSmsCommandMutation();\n\n  if (loadingReadSmsCommands) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = errorReadSmsCommands || errorDelete;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-smscommandlist')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const onToggleCallChange = () => {\n    var _data$smsCommands;\n\n    const smsCommands = data === null || data === void 0 ? void 0 : (_data$smsCommands = data.smsCommands) === null || _data$smsCommands === void 0 ? void 0 : _data$smsCommands.smsCommands;\n\n    if (!smsCommands) {\n      return;\n    }\n\n    if (checkedSmsCommands.length === smsCommands.length) {\n      setCheckedSmsCommands([]);\n    } else {\n      setCheckedSmsCommands(smsCommands.map(({\n        id,\n        displayName\n      }) => ({\n        id,\n        displayName\n      })));\n    }\n  };\n\n  const toggleSmsCommand = smsCommand => {\n    const {\n      id\n    } = smsCommand;\n\n    if (checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId)) {\n      const index = checkedSmsCommands.findIndex(({\n        id: checkedId\n      }) => id === checkedId);\n      return setCheckedSmsCommands([...checkedSmsCommands.slice(0, index), ...checkedSmsCommands.slice(index + 1)]);\n    }\n\n    return setCheckedSmsCommands([...checkedSmsCommands, smsCommand]);\n  };\n\n  const onDeleteClick = async () => {\n    const ids = checkedSmsCommands.map(({\n      id\n    }) => id);\n    await deleteSmsCommands({\n      ids\n    });\n    setCheckedSmsCommands([]);\n    setShowDeleteConfirmationDialog(false);\n    refetch();\n  };\n\n  const allChecked = checkedSmsCommands.length === (data === null || data === void 0 ? void 0 : (_data$smsCommands2 = data.smsCommands) === null || _data$smsCommands2 === void 0 ? void 0 : (_data$smsCommands2$sm = _data$smsCommands2.smsCommands) === null || _data$smsCommands2$sm === void 0 ? void 0 : _data$smsCommands2$sm.length);\n  const hasCommands = (data === null || data === void 0 ? void 0 : (_data$smsCommands3 = data.smsCommands) === null || _data$smsCommands3 === void 0 ? void 0 : (_data$smsCommands3$sm = _data$smsCommands3.smsCommands) === null || _data$smsCommands3$sm === void 0 ? void 0 : _data$smsCommands3$sm.length) > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-smscommandlist'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, SMS_COMMAND_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('SMS commands process SMS messages received by a DHIS2 instance, taking certain actions depending on the command and message content. Multiple SMS commands can be set up to process and handle data in multiple ways. Add and configure SMS commands below. Read about SMS commands in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add command'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"views-smscommandlist\",\n    onAddClick: onAddCommandClick,\n    onDeleteClick: () => setShowDeleteConfirmationDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedSmsCommands.length || loadingDelete\n  }), showDeleteConfirmationDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteConfirmationDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected commands?')), /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('views-smscommandlist-commandtable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: allChecked,\n    onChange: onToggleCallChange\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Sms command')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Parser')), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, hasCommands ? data === null || data === void 0 ? void 0 : (_data$smsCommands4 = data.smsCommands) === null || _data$smsCommands4 === void 0 ? void 0 : (_data$smsCommands4$sm = _data$smsCommands4.smsCommands) === null || _data$smsCommands4$sm === void 0 ? void 0 : _data$smsCommands4$sm.map(({\n    id,\n    displayName,\n    parserType\n  }) => /*#__PURE__*/React.createElement(TableRow, {\n    key: id\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: !!checkedSmsCommands.find(({\n      id: checkedId\n    }) => id === checkedId),\n    onChange: () => toggleSmsCommand({\n      id,\n      displayName\n    })\n  })), /*#__PURE__*/React.createElement(TableCell, null, displayName), /*#__PURE__*/React.createElement(TableCell, null, getLabelByParserTypes(parserType)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.editButtonCell\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push(\"sms-command/\".concat(id))\n  }, i18n.t('Edit'))))) : /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: \"4\",\n    className: styles.noResults\n  }, i18n.t('No commands to display'))))));\n};","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../shared/components/layout';\nimport { Navigation } from '../shared/components/navigation';\nimport { SmsCommandList } from '../sms-command';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(SmsCommandList, null)));\n\nexport default RouteSmsCommand;","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../../shared/components/layout';\nimport { Navigation } from '../../shared/components/navigation';\nimport { SmsCommandEdit } from '../../sms-command';\n\nconst RouteSmsCommandEdit = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(SmsCommandEdit, null)));\n\nexport default RouteSmsCommandEdit;","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../../shared/components/layout';\nimport { Navigation } from '../../shared/components/navigation';\nimport { SmsCommandAdd } from '../../sms-command';\n\nconst RouteSmsCommandNew = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(SmsCommandAdd, null)));\n\nexport default RouteSmsCommandNew;","import { Button, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './ActionAddKeyValuePair.module.css';\nconst {\n  useForm\n} = ReactFinalForm;\nexport const ActionAddKeyValuePair = () => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const addKeyValueToFormState = () => {\n    const {\n      parameters\n    } = getState().values;\n    change('parameters', [...parameters, {\n      header: false,\n      encode: false,\n      key: '',\n      value: '',\n      confidential: false\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: styles.button,\n    onClick: addKeyValueToFormState,\n    dataTest: dataTest('gateways-gatewayaddkeyvaluepair')\n  }, i18n.t('Add key value pair'));\n};","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldAuthToken = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayauthtoken'),\n  name: \"authToken\",\n  label: i18n.t('Auth token'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'BIND_TX',\n  value: 'BIND_TX'\n}, {\n  label: 'BIND_RX',\n  value: 'BIND_RX'\n}, {\n  label: 'BIND_TRX',\n  value: 'BIND_TRX'\n}];\nexport const FieldBindType = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaybindtype'),\n  name: \"bindType\",\n  label: i18n.t('Bind type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldCompressed = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaycompressed'),\n  name: \"compressed\",\n  type: \"checkbox\",\n  label: i18n.t('Compressed'),\n  component: CheckboxFieldFF,\n  defaultValue: false\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldConfigurationTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayconfigurationtemplate'),\n  name: \"configurationTemplate\",\n  label: i18n.t('Configuration template'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue),\n  helpText: i18n.t('Please refer to the documentation for possible values')\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nconst optionApplicationJson = {\n  label: i18n.t('Application/json'),\n  value: 'APPLICATION_JSON'\n};\nconst optionApplicationXml = {\n  label: i18n.t('Application/xml'),\n  value: 'APPLICATION_XML'\n};\nconst optionFormUrlEncoded = {\n  label: i18n.t('Form url encoded'),\n  value: 'FORM_URL_ENCODED'\n};\nconst optionTextPlain = {\n  label: i18n.t('Plain text'),\n  value: 'TEXT_PLAIN'\n};\nconst options = [optionApplicationJson, optionApplicationXml, optionFormUrlEncoded, optionTextPlain];\nexport const FieldContentType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaycontenttype'),\n  name: \"contentType\",\n  label: i18n.t('Content type'),\n  component: SingleSelectFieldFF,\n  options: options,\n  initialValue: optionApplicationJson.value\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldGatewayName = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayname'),\n  name: \"name\",\n  label: i18n.t('Name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldHost = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayhost'),\n  name: \"host\",\n  label: i18n.t('Host'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { InputFieldFF, ReactFinalForm, composeValidators, string, hasValue } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field,\n  useFormState\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const createFieldGatewayKeyValuePairValueName = index => \"parameters[\".concat(index, \"].value\");\nexport const ValueField = ({\n  index\n}) => {\n  const {\n    confidential\n  } = useFormState().values.parameters[index];\n  return /*#__PURE__*/React.createElement(Field, {\n    type: confidential ? 'password' : 'text',\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-value'),\n    name: createFieldGatewayKeyValuePairValueName(index),\n    label: i18n.t('Value'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  });\n};\nValueField.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, CheckboxFieldFF, InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './FieldKeyValuePair.module.css';\nimport { ValueField } from './ValueField';\nconst {\n  Field,\n  useForm\n} = ReactFinalForm;\nconst isStringWithLengthAtLeastOne = composeValidators(string, hasValue);\nexport const FieldKeyValuePair = ({\n  index\n}) => {\n  const {\n    change,\n    getState\n  } = useForm();\n\n  const removeKeyValueFromFormState = index => {\n    const {\n      parameters\n    } = getState().values;\n\n    if (index === 0) {\n      change('parameters', parameters.slice(1));\n    } else {\n      change('parameters', [...parameters.slice(0, index), ...parameters.slice(index + 1)]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('gateways-gatewaykeyvaluepair')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textInputs\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-key'),\n    className: styles.keyInput,\n    name: \"parameters[\".concat(index, \"].key\"),\n    label: i18n.t('Key'),\n    component: InputFieldFF,\n    validate: isStringWithLengthAtLeastOne\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.valueInput\n  }, /*#__PURE__*/React.createElement(ValueField, {\n    index: index\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.checkboxGroup\n  }, /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isheader'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].header\"),\n    label: i18n.t('Send as header'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isencoded'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].encode\"),\n    label: i18n.t('Encode'),\n    component: CheckboxFieldFF\n  }), /*#__PURE__*/React.createElement(Field, {\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-isconfidential'),\n    className: styles.checkbox,\n    type: \"checkbox\",\n    name: \"parameters[\".concat(index, \"].confidential\"),\n    label: i18n.t('Confidential'),\n    component: CheckboxFieldFF\n  })), /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    dataTest: dataTest('gateways-gatewaykeyvaluepair-remove'),\n    onClick: () => removeKeyValueFromFormState(index)\n  }, i18n.t('Remove key value pair')));\n};\nFieldKeyValuePair.propTypes = {\n  index: PropTypes.number.isRequired\n};","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'ISDN',\n  value: 'ISDN'\n}, {\n  label: 'DATA',\n  value: 'DATA'\n}, {\n  label: 'TELEX',\n  value: 'TELEX'\n}, {\n  label: 'LAND_MOBILE',\n  value: 'LAND_MOBILE'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'PRIVATE',\n  value: 'PRIVATE'\n}, {\n  label: 'ERMES',\n  value: 'ERMES'\n}, {\n  label: 'INTERNET',\n  value: 'INTERNET'\n}, {\n  label: 'WAP',\n  value: 'WAP'\n}];\nexport const FieldNumberPlanIndicator = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaynumberplanindicator'),\n  name: \"numberPlanIndicator\",\n  label: i18n.t('Number plan indicator'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FIELD_PASSWORD_NAME = 'password';\nexport const FIELD_PASSWORD_LABEL = i18n.t('Password');\nexport const FieldPassword = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('gateways-fieldgatewaypassword'),\n  name: FIELD_PASSWORD_NAME,\n  label: FIELD_PASSWORD_LABEL,\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, createEqualTo, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_PASSWORD_LABEL, FIELD_PASSWORD_NAME } from '../FieldPassword';\nconst {\n  Field\n} = ReactFinalForm;\nconst equalToPassword = createEqualTo(FIELD_PASSWORD_NAME, FIELD_PASSWORD_LABEL);\nexport const FIELD_PASSWORD_CONFIRMATION_NAME = 'password-confirmation';\nexport const FieldPasswordConfirmation = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  type: \"password\",\n  dataTest: dataTest('gateways-fieldgatewaypasswordconfirmation'),\n  name: FIELD_PASSWORD_CONFIRMATION_NAME,\n  label: i18n.t('Confirm password'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue, equalToPassword)\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, integer } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldPort = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayport'),\n  name: \"port\",\n  label: i18n.t('Port'),\n  component: InputFieldFF,\n  validate: composeValidators(integer, hasValue)\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSendUrlParameters = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('gateways-fieldgatewaysendurlparameters'),\n  name: \"sendUrlParameters\",\n  label: i18n.t('Send url parameters'),\n  component: CheckboxFieldFF\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemId = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaysystemid'),\n  name: \"systemId\",\n  label: i18n.t('System id'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { InputFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldSystemType = () => /*#__PURE__*/React.createElement(Field, {\n  dataTest: dataTest('gateways-fieldgatewaysystemtype'),\n  name: \"systemType\",\n  label: i18n.t('System type'),\n  component: InputFieldFF,\n  defaultValue: \"\"\n});","import { SingleSelectFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nconst options = [{\n  label: 'UNKNOWN',\n  value: 'UNKNOWN'\n}, {\n  label: 'INTERNATIONAL',\n  value: 'INTERNATIONAL'\n}, {\n  label: 'NATIONAL',\n  value: 'NATIONAL'\n}, {\n  label: 'NETWORK_SPECIFIC',\n  value: 'NETWORK_SPECIFIC'\n}, {\n  label: 'SUBSCRIBER_NUMBER',\n  value: 'SUBSCRIBER_NUMBER'\n}, {\n  label: 'ALPHANUMERIC',\n  value: 'ALPHANUMERIC'\n}, {\n  label: 'ABBREVIATED',\n  value: 'ABBREVIATED'\n}];\nexport const FieldTypeOfNumber = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewaytypeofnumber'),\n  name: \"typeOfNumber\",\n  label: i18n.t('Type of number'),\n  component: SingleSelectFieldFF,\n  options: options,\n  defaultValue: options[0]\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, url } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUrlTemplate = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayurltemplate'),\n  name: \"urlTemplate\",\n  label: i18n.t('Url template'),\n  component: InputFieldFF,\n  validate: composeValidators(url, hasValue)\n});","import { CheckboxFieldFF, ReactFinalForm } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUseGet = () => /*#__PURE__*/React.createElement(Field, {\n  type: \"checkbox\",\n  dataTest: dataTest('gateways-fieldgatewayuseget'),\n  name: \"useGet\",\n  label: i18n.t('Use GET'),\n  component: CheckboxFieldFF,\n  helpText: i18n.t('Use GET instead of POST to send data to gateway')\n});","import { InputFieldFF, ReactFinalForm, composeValidators, hasValue, string } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FieldUsername = () => /*#__PURE__*/React.createElement(Field, {\n  required: true,\n  dataTest: dataTest('gateways-fieldgatewayusername'),\n  name: \"username\",\n  label: i18n.t('User name'),\n  component: InputFieldFF,\n  validate: composeValidators(string, hasValue)\n});","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldPassword } from '../FieldPassword';\nimport { FieldPasswordConfirmation } from '../FieldPasswordConfirmation';\nimport { FieldUsername } from '../FieldUsername';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormBulkSMS = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaybulksmsform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPasswordConfirmation, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaybulksmsform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormBulkSMS.defaultProps = {\n  initialValues: {}\n};\nFormBulkSMS.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldAuthToken } from '../FieldAuthToken';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate';\nimport { FieldUsername } from '../FieldUsername';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormClickatell = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewayclickatellform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUsername, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldAuthToken, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewayclickatellform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormClickatell.defaultProps = {\n  initialValues: {}\n};\nFormClickatell.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageSubHeadline } from '../../../shared/components/headline';\nimport { dataTest } from '../../../shared/utils';\nimport { ActionAddKeyValuePair } from '../ActionAddKeyValuePair';\nimport { FieldConfigurationTemplate } from '../FieldConfigurationTemplate';\nimport { FieldContentType } from '../FieldContentType';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldKeyValuePair } from '../FieldKeyValuePair';\nimport { FieldSendUrlParameters } from '../FieldSendUrlParameters';\nimport { FieldUrlTemplate } from '../FieldUrlTemplate';\nimport { FieldUseGet } from '../FieldUseGet';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormGeneric = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    values,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaygenericform')\n  }, /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Gateway setup')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUrlTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldConfigurationTemplate, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldContentType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldUseGet, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSendUrlParameters, null)), /*#__PURE__*/React.createElement(PageSubHeadline, null, i18n.t('Key value pairs')), values.parameters.map((_, index) => /*#__PURE__*/React.createElement(FieldKeyValuePair, {\n    index: index,\n    key: index\n  })), /*#__PURE__*/React.createElement(ActionAddKeyValuePair, null), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    dataTest: dataTest('forms-gatewaygenericform-submit'),\n    disabled: submitting,\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormGeneric.defaultProps = {\n  initialValues: {\n    parameters: []\n  }\n};\nFormGeneric.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, ReactFinalForm, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { dataTest } from '../../../shared/utils';\nimport { FieldBindType } from '../FieldBindType';\nimport { FieldCompressed } from '../FieldCompressed';\nimport { FieldGatewayName } from '../FieldGatewayName';\nimport { FieldHost } from '../FieldHost';\nimport { FieldNumberPlanIndicator } from '../FieldNumberPlanIndicator';\nimport { FieldPassword } from '../FieldPassword';\nimport { FieldPort } from '../FieldPort';\nimport { FieldSystemId } from '../FieldSystemId';\nimport { FieldSystemType } from '../FieldSystemType';\nimport { FieldTypeOfNumber } from '../FieldTypeOfNumber';\nconst {\n  Form\n} = ReactFinalForm;\nexport const FormSMPP = ({\n  onCancelClick,\n  onSubmit,\n  initialValues\n}) => {\n  const submitText = initialValues ? i18n.t('Save gateway') : i18n.t('Add gateway');\n  return /*#__PURE__*/React.createElement(Form, {\n    keepDirtyOnReinitialize: true,\n    onSubmit: onSubmit,\n    initialValues: initialValues\n  }, ({\n    handleSubmit,\n    submitting,\n    pristine\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    \"data-test\": dataTest('gateways-gatewaysmppform')\n  }, /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldGatewayName, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemId, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldHost, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldSystemType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldNumberPlanIndicator, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldTypeOfNumber, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldBindType, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPort, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldPassword, null)), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(FieldCompressed, null)), /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    icon: submitting ? /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }) : null,\n    disabled: submitting,\n    dataTest: dataTest('forms-gatewaysmppform-submit')\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancelClick(pristine)\n  }, i18n.t('Cancel')))));\n};\nFormSMPP.defaultProps = {\n  initialValues: {}\n};\nFormSMPP.propTypes = {\n  onCancelClick: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object\n};","/**\n * This the shape of the additional fields\n * that can be added to a generic config\n *\n * @typedef {Object} Parameter\n * @prop {string} key\n * @prop {string} value\n * @prop {bool} header\n * @prop {bool} encode\n * @prop {bool} confidential\n */\n\n/**\n * @param {Object} args\n * @param {string} args.configurationTemplate\n * @param {string} args.contentType\n * @param {string} args.name\n * @param {string} args.urlTemplate\n * @param {bool} args.sendUrlParameters\n * @param {bool} args.useGet\n * @param {Parameter[]} args.parameters\n *\n * @returns {Object}\n */\nexport const createGenericGateWayDataFromVariables = ({\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n}) => ({\n  type: 'http',\n  configurationTemplate,\n  contentType,\n  name,\n  parameters,\n  sendUrlParameters,\n  urlTemplate,\n  useGet\n});","export const GENERIC_FORM = 'http';\nexport const BULK_SMS_FORM = 'bulksms';\nexport const CLICKATELL_FORM = 'clickatell';\nexport const SMPP_FORM = 'smpp';","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useCreateBulkSMSGatewayMutation = () => useDataMutation(CREATE_BULK_SMS_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useCreateClickatellGatewayMutation = () => useDataMutation(CREATE_CLICKATELL_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nimport { createGenericGateWayDataFromVariables } from '../../utils';\nexport const CREATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useCreateGenericGatewayMutation = () => useDataMutation(CREATE_GENERIC_GATEWAY_MUTATION);","import { useDataMutation } from '@dhis2/app-runtime';\nexport const CREATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'create',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useCreateSMPPGatewayMutation = () => useDataMutation(CREATE_SMPP_GATEWAY_MUTATION);","import { SingleSelectField, SingleSelectOption, NoticeBox } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { FormRow } from '../../../shared/components/forms';\nimport { PageHeadline } from '../../../shared/components/headline';\nimport { dataTest } from '../../../shared/utils';\nimport { FormBulkSMS, FormClickatell, FormGeneric, FormSMPP } from '../../components';\nimport { GENERIC_FORM, BULK_SMS_FORM, CLICKATELL_FORM, SMPP_FORM } from '../../utils';\nimport styles from './SmsGatewayAdd.module.css';\nimport { useCreateBulkSMSGatewayMutation } from './useCreateBulkSMSGatewayMutation';\nimport { useCreateClickatellGatewayMutation } from './useCreateClickatellGatewayMutation';\nimport { useCreateGenericGatewayMutation } from './useCreateGenericGatewayMutation';\nimport { useCreateSMPPGatewayMutation } from './useCreateSMPPGatewayMutation';\nexport const GATEWAY_CONFIG_FORM_NEW_PATH = '/sms-gateway/new';\nexport const SmsGatewayAdd = () => {\n  const history = useHistory();\n  const [visibleForm, setVisibleForm] = useState(GENERIC_FORM);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useCreateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useCreateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useCreateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useCreateSMPPGatewayMutation();\n  const error = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst saving the gateway');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest('views-gatewayconfigformnew')\n    }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const onSubmit = async values => {\n    try {\n      if (visibleForm === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (visibleForm === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (visibleForm === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (visibleForm === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const onCancelClick = () => history.push('/sms-gateway');\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformnew'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Add gateway')), /*#__PURE__*/React.createElement(FormRow, null, /*#__PURE__*/React.createElement(SingleSelectField, {\n    label: i18n.t('Type'),\n    onChange: ({\n      selected\n    }) => setVisibleForm(selected),\n    selected: visibleForm,\n    dataTest: dataTest('views-gatewayconfigformnew-gatewaytype')\n  }, /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: GENERIC_FORM,\n    label: i18n.t('Generic')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: BULK_SMS_FORM,\n    label: i18n.t('BulkSMS')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: CLICKATELL_FORM,\n    label: i18n.t('Clickatell')\n  }), /*#__PURE__*/React.createElement(SingleSelectOption, {\n    value: SMPP_FORM,\n    label: i18n.t('SMPP')\n  }))), /*#__PURE__*/React.createElement(FormRow, null, visibleForm === GENERIC_FORM && /*#__PURE__*/React.createElement(FormGeneric, {\n    onSubmit: onSubmit,\n    onCancelClick: onCancelClick\n  }), visibleForm === BULK_SMS_FORM && /*#__PURE__*/React.createElement(FormBulkSMS, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === CLICKATELL_FORM && /*#__PURE__*/React.createElement(FormClickatell, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  }), visibleForm === SMPP_FORM && /*#__PURE__*/React.createElement(FormSMPP, {\n    onSubmit: onSubmit,\n    passwordRequired: true,\n    onCancelClick: onCancelClick\n  })));\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n *   * Api does not return password of BulkSMS gateway configs\n *     -> https://jira.dhis2.org/browse/DHIS2-9248\n */\n\nexport const GATEWAY_QUERY = {\n  gateway: {\n    resource: 'gateways',\n    id: ({\n      id\n    }) => id\n  }\n};\nexport const useReadGatewayQuery = id => useDataQuery(GATEWAY_QUERY, {\n  variables: {\n    id\n  }\n});","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\n/**\n * @TODO\n *   * Create jira issue: Make `useDataMutation` accept function for \"id\"\n */\n\n/**\n * @param {Object} query\n * @returns {Object}\n */\n\nexport const useUpdateGatewayMutation = query => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n\n  const doFetch = variables => {\n    const updatedQuery = { ...query,\n      id: variables.id\n    };\n    setLoading(true);\n    setError(null);\n    return engine.mutate(updatedQuery, {\n      variables\n    }).then(data => {\n      setLoading(false);\n      return data;\n    }).catch(error => {\n      setLoading(false);\n      setError(error);\n      throw error;\n    });\n  };\n\n  return [doFetch, {\n    loading,\n    error\n  }];\n};","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_BULK_SMS_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    password\n  }) => ({\n    type: 'bulksms',\n    name,\n    username,\n    password\n  })\n};\nexport const useUpdateBulkSMSGatewayMutation = () => useUpdateGatewayMutation(UPDATE_BULK_SMS_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_CLICKATELL_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    username,\n    authToken,\n    urlTemplate\n  }) => ({\n    type: 'clickatell',\n    name,\n    username,\n    authToken,\n    urlTemplate\n  })\n};\nexport const useUpdateClickatellGatewayMutation = () => useUpdateGatewayMutation(UPDATE_CLICKATELL_GATEWAY_MUTATION);","import { createGenericGateWayDataFromVariables } from '../../utils';\nimport { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_GENERIC_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'replace',\n  data: createGenericGateWayDataFromVariables\n};\nexport const useUpdateGenericGatewayMutation = () => useUpdateGatewayMutation(UPDATE_GENERIC_GATEWAY_MUTATION);","import { useUpdateGatewayMutation } from './useUpdateGatewayMutation';\nexport const UPDATE_SMPP_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  id: ({\n    id\n  }) => id,\n  type: 'update',\n  data: ({\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  }) => ({\n    type: 'smpp',\n    name,\n    systemId,\n    host,\n    systemType,\n    numberPlanIndicator,\n    typeOfNumber,\n    bindType,\n    port,\n    password,\n    compressed\n  })\n};\nexport const useUpdateSMPPGatewayMutation = () => useUpdateGatewayMutation(UPDATE_SMPP_GATEWAY_MUTATION);","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { CancelDialog } from '../../../shared/components/cancelDialog';\nimport { PageHeadline } from '../../../shared/components/headline';\nimport { dataTest } from '../../../shared/utils';\nimport { FIELD_PASSWORD_CONFIRMATION_NAME, FIELD_PASSWORD_NAME, FormBulkSMS, FormClickatell, FormGeneric, FormSMPP } from '../../components';\nimport { GENERIC_FORM, BULK_SMS_FORM, CLICKATELL_FORM, SMPP_FORM } from '../../utils';\nimport styles from './SmsGatewayEdit.module.css';\nimport { useReadGatewayQuery } from './useReadGatewayQuery';\nimport { useUpdateBulkSMSGatewayMutation } from './useUpdateBulkSMSGatewayMutation';\nimport { useUpdateClickatellGatewayMutation } from './useUpdateClickatellGatewayMutation';\nimport { useUpdateGenericGatewayMutation } from './useUpdateGenericGatewayMutation';\nimport { useUpdateSMPPGatewayMutation } from './useUpdateSMPPGatewayMutation'; // @TODO(gateway types): wrap export with object\n\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC = '/sms-gateway/edit';\nexport const GATEWAY_CONFIG_FORM_EDIT_PATH = \"\".concat(GATEWAY_CONFIG_FORM_EDIT_PATH_STATIC, \"/:id\");\n\nconst getFormComponent = gatewayType => {\n  if (gatewayType === GENERIC_FORM) {\n    return FormGeneric;\n  }\n\n  if (gatewayType === BULK_SMS_FORM) {\n    return FormBulkSMS;\n  }\n\n  if (gatewayType === CLICKATELL_FORM) {\n    return FormClickatell;\n  }\n\n  if (gatewayType === SMPP_FORM) {\n    return FormSMPP;\n  }\n\n  throw new Error(\"The gateway type does not exist, got \\\"\".concat(gatewayType, \"\\\"\"));\n};\n\nconst getInitialValues = gateway => {\n  if (gateway.type === BULK_SMS_FORM) {\n    return { ...gateway,\n      [FIELD_PASSWORD_CONFIRMATION_NAME]: gateway[FIELD_PASSWORD_NAME]\n    };\n  }\n\n  return gateway;\n};\n\nexport const SmsGatewayEdit = () => {\n  var _data$gateway;\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const {\n    loading,\n    error: loadError,\n    data: jsonData\n  } = useReadGatewayQuery(id);\n  const [saveGenericGateway, {\n    error: saveGenericGatewayError\n  }] = useUpdateGenericGatewayMutation();\n  const [saveBulkSMSGateway, {\n    error: saveBulkSMSGatewayError\n  }] = useUpdateBulkSMSGatewayMutation();\n  const [saveClickatellGateway, {\n    error: saveClickatellGatewayError\n  }] = useUpdateClickatellGatewayMutation();\n  const [saveSMPPGateway, {\n    error: saveSMPPGatewayError\n  }] = useUpdateSMPPGatewayMutation();\n  const saveError = saveGenericGatewayError || saveBulkSMSGatewayError || saveClickatellGatewayError || saveSMPPGatewayError;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (loadError) {\n    const msg = i18n.t('Something went wrong whilst loading gateways');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit')), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, loadError.message));\n  }\n\n  const data =\n  /**\n   * @TODO:\n   *   * The response does not contain the right content type header\n   *     -> https://jira.dhis2.org/browse/DHIS2-9252\n   */\n  jsonData && typeof jsonData.gateway === 'string' ? {\n    gateway: JSON.parse(jsonData.gateway)\n  } : jsonData;\n  const gatewayType = data === null || data === void 0 ? void 0 : (_data$gateway = data.gateway) === null || _data$gateway === void 0 ? void 0 : _data$gateway.type;\n\n  const onSubmit = async formValues => {\n    const values = { ...formValues,\n      id: data.gateway.uid\n    };\n\n    try {\n      if (values.type === GENERIC_FORM) {\n        await saveGenericGateway(values);\n      }\n\n      if (values.type === BULK_SMS_FORM) {\n        await saveBulkSMSGateway(values);\n      }\n\n      if (values.type === CLICKATELL_FORM) {\n        await saveClickatellGateway(values);\n      }\n\n      if (values.type === SMPP_FORM) {\n        await saveSMPPGateway(values);\n      }\n\n      history.push('/sms-gateway');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  const FormComponent = getFormComponent(gatewayType);\n  const initialValues = gatewayType && getInitialValues(data.gateway);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformedit'),\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, i18n.t('Edit gateway')), gatewayType ? /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest('views-gatewayconfigformedit-formcontainer'),\n    \"data-gateway-id\": data.gateway.uid\n  }, saveError && /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Something went wrong whilst saving gateways')\n  }, saveError.message), /*#__PURE__*/React.createElement(FormComponent, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    onCancelClick: pristine => pristine ? history.push('/sms-gateway') : setShowCancelDialog(true)\n  })) : /*#__PURE__*/React.createElement(NoticeBox, {\n    error: true,\n    title: i18n.t('Gateway not found')\n  }, i18n.t('The requested gateway could not be loaded')), showCancelDialog && /*#__PURE__*/React.createElement(CancelDialog, {\n    onConfirmCancel: () => history.push('/sms-gateway'),\n    onAbortCancel: () => setShowCancelDialog(false)\n  }));\n};","import i18n from '../../../locales';\n/**\n * @param {string} type\n * @returns {string}\n */\n\nexport const getTypeLabelByType = type => {\n  if (type === 'bulksms') {\n    return i18n.t('BulkSMS');\n  }\n\n  if (type === 'clickatell') {\n    return i18n.t('Clickatell');\n  }\n\n  if (type === 'http' || !type) {\n    return i18n.t('Generic');\n  }\n\n  return type;\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { Button, ButtonStrip, Checkbox, Table, TableHead, TableBody, TableRowHead, TableCellHead, TableRow, TableCell } from '@dhis2/ui';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { dataTest } from '../../../shared/utils';\nimport styles from './GatewaysTable.module.css';\nimport { getTypeLabelByType } from './getTypeLabelByType';\nexport const GatewaysTable = ({\n  allGatewaysChecked,\n  checkedGateways,\n  gateways,\n  onGatewayToggle,\n  onToggleAll,\n  onMakeDefaultClick\n}) => {\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Table, {\n    dataTest: dataTest('gateways-gatewaystable')\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRowHead, null, /*#__PURE__*/React.createElement(TableCellHead, {\n    dataTest: dataTest('gateways-gatewaystable-checkall')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: onToggleAll,\n    checked: allGatewaysChecked\n  })), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Name')), /*#__PURE__*/React.createElement(TableCellHead, null, i18n.t('Type')), /*#__PURE__*/React.createElement(TableCellHead, null), /*#__PURE__*/React.createElement(TableCellHead, null))), /*#__PURE__*/React.createElement(TableBody, null, gateways.map(gateway => /*#__PURE__*/React.createElement(TableRow, {\n    key: gateway.uid,\n    dataTest: dataTest('gateways-gatewaystable-row')\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.checkboxCell,\n    dataTest: dataTest('gateways-gatewaystable-checkbox')\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    value: gateway.uid,\n    onChange: () => onGatewayToggle(gateway.uid),\n    checked: checkedGateways.includes(gateway.uid),\n    dataTest: dataTest('gateways-gatewaystable-id')\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('gateways-gatewaystable-name')\n  }, gateway.name), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.typeCell,\n    dataTest: dataTest('gateways-gatewaystable-type')\n  }, getTypeLabelByType(gateway.type)), /*#__PURE__*/React.createElement(TableCell, {\n    className: styles.defaultCell\n  }, !gateway.isDefault ? /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('gateways-gatewaystable-makedefault'),\n    onClick: () => onMakeDefaultClick(gateway.uid),\n    className: styles.makeDefaultButton\n  }, i18n.t('Make default')) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.isDefaultText,\n    \"data-test\": dataTest('gateways-gatewaystable-isdefault')\n  }, i18n.t('Default gateway'))), /*#__PURE__*/React.createElement(TableCell, {\n    dataTest: dataTest('gateways-gatewaystable-actions'),\n    className: styles.editCell\n  }, /*#__PURE__*/React.createElement(ButtonStrip, {\n    className: styles.rowActions\n  }, /*#__PURE__*/React.createElement(Button, {\n    dataTest: dataTest('gateways-gatewaystable-edit'),\n    onClick: () => {\n      history.push(\"sms-gateway/\".concat(gateway.uid));\n    }\n  }, i18n.t('Edit'))))))));\n};\nGatewaysTable.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    isDefault: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired\n  })).isRequired,\n  onGatewayToggle: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  onToggleAll: PropTypes.func.isRequired,\n  allGatewaysChecked: PropTypes.bool\n};","import { PropTypes } from '@dhis2/prop-types';\nimport { CircularLoader } from '@dhis2/ui';\nimport React from 'react';\nimport { dataTest } from '../../../shared/utils';\nimport { GatewaysTable } from './GatewaysTable';\nimport styles from './List.module.css';\nexport const List = ({\n  checkedGateways,\n  gateways,\n  setCheckedGateways,\n  onMakeDefaultClick,\n  processing\n}) => {\n  const allGatewaysChecked = checkedGateways.length === gateways.length;\n\n  const toggleGateway = id => {\n    if (checkedGateways.includes(id)) {\n      const index = checkedGateways.findIndex(curId => curId === id);\n      const newCheckedGateways = index === 0 ? checkedGateways.slice(1) : [...checkedGateways.slice(0, index), ...checkedGateways.slice(index + 1)];\n      setCheckedGateways(newCheckedGateways);\n    } else {\n      setCheckedGateways([...checkedGateways, id]);\n    }\n  };\n\n  const toggleAll = () => {\n    if (!allGatewaysChecked) {\n      const allGatewayIds = gateways.map(({\n        uid\n      }) => uid);\n      setCheckedGateways(allGatewayIds);\n    } else {\n      setCheckedGateways([]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('gateways-gatewaylist')\n  }, processing && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.processingMessage\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loadingContainer\n  }, /*#__PURE__*/React.createElement(CircularLoader, null))), /*#__PURE__*/React.createElement(GatewaysTable, {\n    allGatewaysChecked: allGatewaysChecked,\n    gateways: gateways,\n    checkedGateways: checkedGateways,\n    onGatewayToggle: toggleGateway,\n    onMakeDefaultClick: onMakeDefaultClick,\n    onToggleAll: toggleAll\n  }));\n};\nList.propTypes = {\n  checkedGateways: PropTypes.arrayOf(PropTypes.string).isRequired,\n  gateways: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    isDefault: PropTypes.bool\n  })).isRequired,\n  setCheckedGateways: PropTypes.func.isRequired,\n  onMakeDefaultClick: PropTypes.func.isRequired,\n  processing: PropTypes.bool\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport { useState } from 'react';\nexport const DELETE_GATEWAY_MUTATION = {\n  resource: 'gateways',\n  type: 'delete',\n  id: ({\n    id\n  }) => id\n};\n\nconst idToMutationRequestFactory = engine => id => {\n  const variables = {\n    id\n  };\n  return engine.mutate(DELETE_GATEWAY_MUTATION, {\n    variables\n  });\n};\n\nexport const useDeleteGatewaysMutation = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const engine = useDataEngine();\n  const idToMutationRequest = idToMutationRequestFactory(engine);\n\n  const onStart = () => setLoading(true);\n\n  const onDone = response => {\n    setLoading(false);\n    return response;\n  };\n\n  const onError = error => {\n    setError(error);\n    setLoading(false);\n  };\n\n  const mutate = ({\n    ids\n  }) => {\n    onStart();\n    return Promise.all(ids.map(idToMutationRequest)).then(onDone).catch(onError);\n  };\n\n  return [mutate, {\n    loading,\n    error\n  }];\n};","import { useDataQuery } from '@dhis2/app-runtime';\n/**\n * @TODO:\n *   * The endpoint requires a `.json`, ignores \"Accept\" header\n *     -> https://jira.dhis2.org/browse/DHIS2-9250\n *   * The \"fields\" param does not work\n *     -> https://jira.dhis2.org/browse/DHIS2-9241\n *   * id field is not present, only uid\n *     -> https://jira.dhis2.org/browse/DHIS2-9249\n */\n\nexport const GATEWAYS_QUERY = {\n  gateways: {\n    resource: 'gateways.json',\n    params: ({\n      fields,\n      filter\n    }) => {\n      const params = {};\n\n      if (fields) {\n        params.fields = fields;\n      }\n\n      if (filter) {\n        params.filter = filter;\n      }\n\n      return params;\n    }\n  }\n};\n/**\n * @param {string[]} [ids]\n * @return {Object}\n */\n\nexport const useReadGatewaysQuery = ids => {\n  var _parsedData$gateways;\n\n  /*\n   * @TODO(filtering): Currently the `id:in:[...]` doesn't work\n   *   -> https://jira.dhis2.org/browse/DHIS2-9259\n   *\n   * This is because filtering doesn't work right now\n   * So there's no need for sending any variables\n   */\n  const filter = \"id:in:[\".concat(ids === null || ids === void 0 ? void 0 : ids.join(','), \"]\");\n  const variables = false && ids ? {\n    filter\n  } : {}; // eslint-disable-line no-constant-condition\n\n  const {\n    data: jsonData,\n    ...rest\n  } = useDataQuery(GATEWAYS_QUERY, {\n    variables\n  });\n  const parsedData =\n  /**\n   * @TODO:\n   *   Create Jira issue for:\n   *   The response does not contain the right content type header\n   */\n  jsonData && typeof jsonData.gateways === 'string' ? {\n    gateways: JSON.parse(jsonData.gateways)\n  } : jsonData;\n  const data = ids && (parsedData === null || parsedData === void 0 ? void 0 : (_parsedData$gateways = parsedData.gateways) === null || _parsedData$gateways === void 0 ? void 0 : _parsedData$gateways.gateways) ? {\n    gateways: {\n      gateways: parsedData.gateways.gateways.filter(({\n        uid\n      }) => ids.includes(uid))\n    }\n  } : parsedData;\n  return {\n    data,\n    ...rest\n  };\n};","import { useDataMutation } from '@dhis2/app-runtime';\nexport const SET_DEFAULT_GATEWAY_MUTATION = {\n  resource: 'gateways/default',\n  type: 'replace',\n  id: ({\n    id\n  }) => id\n};\nexport const useSetDefaultGatewayMutation = () => useDataMutation(SET_DEFAULT_GATEWAY_MUTATION);","import { NoticeBox, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport i18n from '../../../locales';\nimport { ListActions } from '../../../shared/components/dataList';\nimport { DeleteConfirmationDialog } from '../../../shared/components/DeleteConfirmationDialog';\nimport { PageHeadline } from '../../../shared/components/headline';\nimport { Paragraph } from '../../../shared/components/text';\nimport { dataTest } from '../../../shared/utils';\nimport { List } from './List';\nimport styles from './SmsGatewayList.module.css';\nimport { useDeleteGatewaysMutation } from './useDeleteGatewaysMutation';\nimport { useReadGatewaysQuery } from './useReadGatewaysQuery';\nimport { useSetDefaultGatewayMutation } from './useSetDefaultGatewayMutation';\nexport const GATEWAY_CONFIG_LIST_PATH = '/sms-gateway';\nexport const GATEWAY_CONFIG_LIST_LABEL = 'Gateway configuration';\nexport const SmsGatewayList = () => {\n  var _data$gateways, _data$gateways$gatewa;\n\n  const history = useHistory();\n\n  const onAddGatewayClick = () => history.push('/sms-gateway/new');\n\n  const [checkedGateways, setCheckedGateways] = useState([]);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const {\n    loading: loadingReadGateways,\n    error: errorReadGateways,\n    data,\n    refetch: refetchReadGateways\n  } = useReadGatewaysQuery();\n  const [deleteCheckedGateways, {\n    loading: loadingDelete,\n    error: errorDelete\n  }] = useDeleteGatewaysMutation();\n  const [makeGatewayDefault, {\n    loading: loadingSetDefault,\n    error: errorSetDefault\n  }] = useSetDefaultGatewayMutation();\n\n  const onDeleteClick = () => {\n    const variables = {\n      ids: checkedGateways\n    };\n    deleteCheckedGateways(variables).then(refetchReadGateways);\n    setShowDeleteDialog(false);\n  };\n\n  const onMakeDefaultClick = id => {\n    const variables = {\n      id\n    };\n    makeGatewayDefault(variables).then(refetchReadGateways);\n  };\n\n  const loading = loadingReadGateways || loadingDelete || loadingSetDefault;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const error = errorReadGateways || errorDelete || errorSetDefault;\n\n  if (error) {\n    const msg = i18n.t('Something went wrong whilst performing the requested operation');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(NoticeBox, {\n      error: true,\n      title: msg\n    }, error.message));\n  }\n\n  const hasGateways = !!(data === null || data === void 0 ? void 0 : (_data$gateways = data.gateways) === null || _data$gateways === void 0 ? void 0 : (_data$gateways$gatewa = _data$gateways.gateways) === null || _data$gateways$gatewa === void 0 ? void 0 : _data$gateways$gatewa.length);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": dataTest('views-gatewayconfiglist')\n  }, /*#__PURE__*/React.createElement(PageHeadline, null, GATEWAY_CONFIG_LIST_LABEL), /*#__PURE__*/React.createElement(Paragraph, null, i18n.t('An SMS gateway lets a DHIS2 instance send and receive SMS messages. Different gateway types can be added and configured below. At least one gateway is needed to send and receive SMS messages. Load balancing will use all gateways if there are multiple available. Read about gateway configuration in the DHIS2 documentation.')), /*#__PURE__*/React.createElement(ListActions, {\n    addLabel: i18n.t('Add gateway'),\n    deleteLabel: i18n.t('Delete selected'),\n    dataTest: \"views-gatewayconfiglist\",\n    onAddClick: onAddGatewayClick,\n    onDeleteClick: () => setShowDeleteDialog(true),\n    disableAdd: loadingDelete,\n    disableDelete: !checkedGateways.length || loadingDelete\n  }), hasGateways ? /*#__PURE__*/React.createElement(List, {\n    processing: loading,\n    checkedGateways: checkedGateways,\n    setCheckedGateways: setCheckedGateways,\n    gateways: data.gateways.gateways,\n    onMakeDefaultClick: onMakeDefaultClick\n  }) : /*#__PURE__*/React.createElement(NoticeBox, {\n    info: true,\n    title: i18n.t('No gateways found')\n  }, i18n.t(\"It looks like there aren't any configured gateways, or they couldn't be loaded.\")), showDeleteDialog && /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n    onCancelClick: () => setShowDeleteDialog(false),\n    onDeleteClick: onDeleteClick\n  }, i18n.t('Are you sure you want to delete the selected gateways?')));\n};","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../shared/components/layout';\nimport { Navigation } from '../shared/components/navigation';\nimport { SmsGatewayList } from '../sms-gateway';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(SmsGatewayList, null)));\n\nexport default RouteSmsCommand;","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../../shared/components/layout';\nimport { Navigation } from '../../shared/components/navigation';\nimport { SmsGatewayEdit } from '../../sms-gateway';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(SmsGatewayEdit, null)));\n\nexport default RouteSmsCommand;","import React from 'react';\nimport { LayoutContainer, LayoutContent, LayoutSidebar } from '../../shared/components/layout';\nimport { Navigation } from '../../shared/components/navigation';\nimport { SmsGatewayAdd } from '../../sms-gateway';\n\nconst RouteSmsCommand = () => /*#__PURE__*/React.createElement(LayoutContainer, null, /*#__PURE__*/React.createElement(LayoutSidebar, null, /*#__PURE__*/React.createElement(Navigation, null)), /*#__PURE__*/React.createElement(LayoutContent, null, /*#__PURE__*/React.createElement(SmsGatewayAdd, null)));\n\nexport default RouteSmsCommand;","import './locales';\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { AppWrapper } from './AppWrapper';\nimport Home from './routes/index';\nimport ReceivedSms from './routes/received';\nimport SentSms from './routes/sent';\nimport SmsCommand from './routes/sms-command';\nimport SmsCommandEdit from './routes/sms-command/[id]';\nimport SmsCommandNew from './routes/sms-command/new';\nimport SmsGateway from './routes/sms-gateway';\nimport SmsGatewayEdit from './routes/sms-gateway/[id]';\nimport SmsGatewayNew from './routes/sms-gateway/new';\n\nconst App = () => /*#__PURE__*/React.createElement(AppWrapper, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Home\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-gateway\",\n  component: SmsGateway\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/new\",\n  component: SmsGatewayNew\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-gateway/:id\",\n  component: SmsGatewayEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/sms-command\",\n  component: SmsCommand\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/new\",\n  component: SmsCommandNew\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sms-command/:id\",\n  component: SmsCommandEdit\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/sent\",\n  component: SentSms\n}),\n/* View received sms */\n'', /*#__PURE__*/React.createElement(Route, {\n  path: \"/received\",\n  component: ReceivedSms\n}),\n/* Handle 404 */\n'', /*#__PURE__*/React.createElement(Redirect, {\n  from: \"*\",\n  to: \"/\"\n})));\n\nexport default App;"],"sourceRoot":""}